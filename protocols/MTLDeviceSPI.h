/* Generated by EzioChiu.
 */

@protocol MTLDeviceSPI <MTLDevice>

@required

+ (void)registerDevices;

- (<MTLDevice> *)_deviceWrapper;
- (void)_setDeviceWrapper:(id <MTLDeviceSPI>)arg1;
- (unsigned int)acceleratorPort;
- (void)addBufferToGlobalResourceTable:(id <MTLBuffer>)arg1;
- (void)addComputePipelineStateToGlobalResourceTable:(id <MTLComputePipelineState>)arg1;
- (void)addIndirectCommandBufferToGlobalResourceTable:(id <MTLIndirectCommandBuffer>)arg1;
- (void)addRenderPipelineStateToGlobalResourceTable:(id <MTLRenderPipelineState>)arg1;
- (void)addSamplerStateToGlobalResourceTable:(id <MTLSamplerState>)arg1;
- (void)addTextureToGlobalResourceTable:(id <MTLTexture>)arg1;
- (void)allowLibrariesFromOtherPlatforms;
- (bool)areGPUAssertionsEnabled;
- (void)compilerPropagatesThreadPriority:(bool)arg1;
- (bool)copyShaderCacheToPath:(NSString *)arg1;
- (unsigned long long)createNewUtilityBuffer;
- (unsigned long long)currentUtilityBufferIndex;
- (unsigned long long)dedicatedMemorySize;
- (unsigned long long)deviceLinearReadOnlyTextureAlignmentBytes;
- (unsigned long long)deviceLinearTextureAlignmentBytes;
- (bool)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1;
- (bool)deviceSupportsFeatureSet:(unsigned long long)arg1;
- (unsigned long long)doubleFPConfig;
- (NSString *)familyName;
- (unsigned long long)featureProfile;
- (unsigned long long)halfFPConfig;
- (struct IndirectArgumentBufferCapabilities { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 29; })indirectArgumentBufferCapabilities;
- (unsigned long long)indirectBufferAddressForResourceIndex:(unsigned long long)arg1 offset:(unsigned long long)arg2;
- (unsigned long long)iosurfaceReadOnlyTextureAlignmentBytes;
- (unsigned long long)iosurfaceTextureAlignmentBytes;
- (bool)isPlacementHeapSupported;
- (bool)isResourceIndirectionEnabled;
- (bool)isUtilityBufferRequired;
- (struct { unsigned int x1; unsigned int x2; })libraryCacheStats;
- (const struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; unsigned int x18; float x19; float x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; unsigned int x26; unsigned int x27; unsigned int x28; unsigned int x29; unsigned int x30; unsigned int x31; unsigned int x32; unsigned int x33; unsigned int x34; unsigned int x35; unsigned int x36; unsigned int x37; unsigned int x38; unsigned int x39; unsigned int x40; unsigned int x41; unsigned int x42; unsigned int x43; unsigned int x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; unsigned int x50; unsigned int x51; unsigned int x52; unsigned int x53; unsigned int x54; unsigned int x55; unsigned int x56; unsigned int x57; unsigned int x58; unsigned int x59; }*)limits;
- (unsigned long long)linearTextureAlignmentBytes;
- (unsigned long long)linearTextureArrayAlignmentBytes;
- (unsigned long long)linearTextureArrayAlignmentSlice;
- (unsigned long long)maxColorAttachments;
- (unsigned long long)maxComputeAttributes;
- (unsigned long long)maxComputeBuffers;
- (unsigned long long)maxComputeInlineDataSize;
- (unsigned long long)maxComputeLocalMemorySizes;
- (unsigned long long)maxComputeSamplers;
- (unsigned long long)maxComputeTextures;
- (unsigned long long)maxComputeThreadgroupMemory;
- (unsigned long long)maxComputeThreadgroupMemoryAlignmentBytes;
- (unsigned long long)maxCustomSamplePositions;
- (unsigned long long)maxFragmentBuffers;
- (unsigned long long)maxFragmentInlineDataSize;
- (unsigned long long)maxFragmentSamplers;
- (unsigned long long)maxFragmentTextures;
- (unsigned long long)maxFramebufferStorageBits;
- (unsigned long long)maxFunctionConstantIndices;
- (unsigned long long)maxIndirectBuffers;
- (unsigned long long)maxIndirectSamplers;
- (unsigned long long)maxIndirectSamplersPerDevice;
- (unsigned long long)maxIndirectTextures;
- (unsigned long long)maxInterpolants;
- (unsigned long long)maxInterpolatedComponents;
- (float)maxLineWidth;
- (float)maxPointSize;
- (unsigned long long)maxRasterizationRateLayerCount;
- (unsigned long long)maxTessellationFactor;
- (unsigned long long)maxTextureBufferWidth;
- (unsigned long long)maxTextureDepth3D;
- (unsigned long long)maxTextureDimensionCube;
- (unsigned long long)maxTextureHeight2D;
- (unsigned long long)maxTextureHeight3D;
- (unsigned long long)maxTextureLayers;
- (unsigned long long)maxTextureWidth1D;
- (unsigned long long)maxTextureWidth2D;
- (unsigned long long)maxTextureWidth3D;
- (unsigned long long)maxTileBuffers;
- (unsigned long long)maxTileInlineDataSize;
- (unsigned long long)maxTileSamplers;
- (unsigned long long)maxTileTextures;
- (unsigned long long)maxTotalComputeThreadsPerThreadgroup;
- (unsigned long long)maxVertexAmplificationCount;
- (unsigned long long)maxVertexAmplificationFactor;
- (unsigned long long)maxVertexAttributes;
- (unsigned long long)maxVertexBuffers;
- (unsigned long long)maxVertexInlineDataSize;
- (unsigned long long)maxVertexSamplers;
- (unsigned long long)maxVertexTextures;
- (unsigned long long)maxViewportCount;
- (unsigned long long)maxVisibilityQueryOffset;
- (bool)metalAssertionsEnabled;
- (unsigned long long)minBufferNoCopyAlignmentBytes;
- (unsigned long long)minConstantBufferAlignmentBytes;
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;
- (unsigned long long)minTilePixels;
- (<MTLArgumentEncoder> *)newArgumentEncoderWithLayout:(_MTLIndirectArgumentBufferLayout *)arg1;
- (<MTLBuffer> *)newBufferWithBytes:(const void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 atResourceIndex:(unsigned long long)arg4;
- (<MTLBuffer> *)newBufferWithBytesNoCopy:(void *)arg1 length:(void *)arg2 options:(void *)arg3 atResourceIndex:(void *)arg4 deallocator:(void *)arg5; // needs 5 arg types, found 11: void*, unsigned long long, unsigned long long, unsigned long long, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, void*, unsigned long long, void*
- (<MTLBuffer> *)newBufferWithIOSurface:(struct __IOSurface { }*)arg1;
- (<MTLBuffer> *)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 atResourceIndex:(unsigned long long)arg3;
- (<MTLCommandQueue> *)newCommandQueueWithDescriptor:(MTLCommandQueueDescriptor *)arg1;
- (_MTLIndirectArgumentBufferLayout *)newIndirectArgumentBufferLayoutWithStructType:(MTLStructType *)arg1;
- (<MTLBuffer> *)newIndirectCommandBufferWithDescriptor:(MTLIndirectCommandBufferDescriptor *)arg1 maxCount:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (<MTLIndirectComputeCommandEncoder> *)newIndirectComputeCommandEncoderWithBuffer:(id <MTLBuffer>)arg1;
- (<MTLIndirectRenderCommandEncoder> *)newIndirectRenderCommandEncoderWithBuffer:(id <MTLBuffer>)arg1;
- (<MTLRasterizationRateMap> *)newRasterizationRateMapWithDescriptor:(MTLRasterizationRateMapDescriptor *)arg1;
- (<MTLSharedEvent> *)newSharedEventWithMachPort:(unsigned int)arg1;
- (<MTLTexture> *)newTextureWithDescriptor:(MTLTextureDescriptor *)arg1 iosurface:(struct __IOSurface { }*)arg2 plane:(unsigned long long)arg3;
- (unsigned long long)offsetFromIndirectBufferAddress:(unsigned long long)arg1;
- (struct { unsigned int x1; unsigned int x2; })pipelineCacheStats;
- (NSString *)productName;
- (void)removeResourceFromGlobalResourceTable:(unsigned long long)arg1 resourceType:(unsigned long long)arg2;
- (bool)requiresIndirectionForAllResourceTypes;
- (unsigned long long)resourceIndexFromIndirectBufferAddress:(unsigned long long)arg1;
- (void)setCurrentUtilityBufferIndex:(unsigned long long)arg1;
- (void)setGPUAssertionsEnabled:(bool)arg1;
- (void)setMetalAssertionsEnabled:(bool)arg1;
- (void)setResourceIndirectionEnabled:(bool)arg1;
- (bool)setResourcesPurgeableState:(id*)arg1 newState:(unsigned long long)arg2 oldState:(unsigned long long*)arg3 count:(int)arg4;
- (void)setUtilityBuffers:(NSArray *)arg1;
- (unsigned long long)sharedMemorySize;
- (unsigned long long)singleFPConfig;
- (bool)supportPriorityBand;
- (bool)supports2DLinearTexArraySPI;
- (bool)supports32bpcMSAATextures;
- (bool)supports3DASTCTextures;
- (bool)supports3DBCTextures;
- (bool)supportsASTCHDRTextureCompression;
- (bool)supportsASTCTextureCompression;
- (bool)supportsAlphaYUVFormats;
- (bool)supportsArgumentBuffersTier2;
- (bool)supportsArrayOfSamplers;
- (bool)supportsArrayOfTextures;
- (bool)supportsBCTextureCompression;
- (bool)supportsBaseVertexInstanceDrawing;
- (bool)supportsBlackOrWhiteSamplerBorderColors;
- (bool)supportsBufferWithIOSurface;
- (bool)supportsBufferlessClientStorageTexture;
- (bool)supportsCMPIndirectCommandBuffers;
- (bool)supportsCombinedMSAAStoreAndResolveAction;
- (bool)supportsConcurrentComputeDispatch;
- (bool)supportsCountingOcclusionQuery;
- (bool)supportsCustomBorderColor;
- (bool)supportsDepthClipMode;
- (bool)supportsDepthClipModeClampExtended;
- (bool)supportsExtendedXR10Formats;
- (bool)supportsExtendedYUVFormats;
- (bool)supportsFP32TessFactors;
- (bool)supportsFastMathInfNaNPropagation;
- (bool)supportsFloat16BCubicFiltering;
- (bool)supportsForceSeamsOnCubemaps;
- (bool)supportsFragmentBufferWrites;
- (bool)supportsFragmentOnlyEncoders;
- (bool)supportsGFXIndirectCommandBuffers;
- (bool)supportsGPUStatistics;
- (bool)supportsImageBlockSampleCoverageControl;
- (bool)supportsImageBlocks;
- (bool)supportsIndirectDrawAndDispatch;
- (bool)supportsIndirectStageInRegion;
- (bool)supportsIndirectTessellation;
- (bool)supportsIndirectTextures;
- (bool)supportsInvariantVertexPosition;
- (bool)supportsLargeFramebufferConfigs;
- (bool)supportsLayeredRendering;
- (bool)supportsLimitedYUVFormats;
- (bool)supportsLinearTexture2DArray;
- (bool)supportsLinearTextureFromSharedBuffer;
- (bool)supportsMSAADepthResolve;
- (bool)supportsMSAADepthResolveFilter;
- (bool)supportsMSAAStencilResolve;
- (bool)supportsMSAAStencilResolveFilter;
- (bool)supportsMemoryOrderAtomics;
- (bool)supportsMemorylessRenderTargets;
- (bool)supportsMipLevelsSmallerThanBlockSize;
- (bool)supportsMirrorClampToEdgeSamplerMode;
- (bool)supportsMutableTier1ArgumentBuffers;
- (bool)supportsNativeHardwareFP16;
- (bool)supportsNonPrivateDepthStencilTextures;
- (bool)supportsNonPrivateMSAATextures;
- (bool)supportsNonSquareTileShaders;
- (bool)supportsNonUniformThreadgroupSize;
- (bool)supportsNorm16BCubicFiltering;
- (bool)supportsOpenCLTextureWriteSwizzles;
- (bool)supportsPacked32TextureBufferWrites;
- (bool)supportsPipelineLibraries;
- (bool)supportsPlacementHeaps;
- (bool)supportsPostDepthCoverage;
- (bool)supportsProgrammableBlending;
- (bool)supportsProgrammableSamplePositions;
- (bool)supportsPublicXR10Formats;
- (bool)supportsQuadGroup;
- (bool)supportsQuadReduction;
- (bool)supportsQuadShufflesAndBroadcast;
- (bool)supportsRasterOrderGroups;
- (bool)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1;
- (bool)supportsReadWriteBufferArguments;
- (bool)supportsReadWriteTextureArguments;
- (bool)supportsReadWriteTextureArgumentsTier2;
- (bool)supportsReadWriteTextureCubeArguments;
- (bool)supportsRelaxedTextureViewRequirements;
- (bool)supportsRenderPassWithoutRenderTarget;
- (bool)supportsRenderTextureWrites;
- (bool)supportsRenderToLinearTextures;
- (bool)supportsSIMDGroup;
- (bool)supportsSIMDReduction;
- (bool)supportsSIMDShufflesAndBroadcast;
- (bool)supportsSRGBwrites;
- (bool)supportsSampleCount:(unsigned long long)arg1;
- (bool)supportsSamplerAddressModeClampToHalfBorder;
- (bool)supportsSamplerCompareFunction;
- (bool)supportsSeparateDepthStencil;
- (bool)supportsSeparateVisibilityAndShadingRate;
- (bool)supportsShaderLODAverage;
- (bool)supportsShaderMinLODClamp;
- (bool)supportsSparseTextures;
- (bool)supportsStencilFeedback;
- (bool)supportsTessellation;
- (bool)supportsTexture2DMultisampleArray;
- (bool)supportsTextureCubeArray;
- (bool)supportsTextureOutOfBoundsReads;
- (bool)supportsTextureSwizzle;
- (bool)supportsTileShaders;
- (bool)supportsVariableRateRasterization;
- (bool)supportsVertexAmplification;
- (bool)supportsViewportAndScissorArray;
- (bool)supportsYCBCRFormats;
- (bool)supportsYCBCRFormats12;
- (bool)supportsYCBCRFormatsPQ;
- (bool)supportsYCBCRFormatsXR;
- (void)unloadShaderCaches;
- (bool)useDeviceResourceTableForType:(unsigned long long)arg1;
- (<MTLBuffer> *)utilityBufferForComputeCommandEncoder:(id <MTLComputeCommandEncoder>)arg1;
- (<MTLBuffer> *)utilityBufferForRenderCommandEncoder:(id <MTLRenderCommandEncoder>)arg1;
- (NSArray *)utilityBuffers;
- (NSString *)vendorName;

@optional

- (NSMutableDictionary *)copyIOSurfaceSharedTextureProperties:(MTLTextureDescriptor *)arg1;
- (NSData *)endCollectingPipelineDescriptors;
- (void*)getShaderCacheKeys;
- (NSObject<OS_dispatch_data> *)indirectArgumentBufferDecodingData;
- (bool)isQuadDataSharingSupported;
- (bool)mapShaderSampleBufferWithBuffer:(struct { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 capacity:(unsigned long long)arg2 size:(unsigned long long)arg3;
- (MTLComputePipelineDescriptor *)newComputePipelineDescriptorWithSerializedData:(NSObject<OS_dispatch_data> *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (void)newComputePipelineStateWithDescriptor:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 8: MTLComputePipelineDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLComputePipelineState> *, NSError *, void*
- (<MTLComputePipelineState> *)newComputePipelineStateWithDescriptor:(MTLComputePipelineDescriptor *)arg1 error:(id*)arg2;
- (<MTLComputePipelineState> *)newComputePipelineStateWithImageFilterFunctionsSPI:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLFunction> *)newFunctionWithGLIR:(void*)arg1 functionType:(unsigned long long)arg2;
- (<MTLFunction> *)newFunctionWithGLIR:(void*)arg1 inputsDescription:(NSObject<OS_dispatch_data> *)arg2 functionType:(unsigned long long)arg3;
- (<MTLIndirectArgumentEncoder> *)newIndirectArgumentEncoderWithArguments:(NSArray *)arg1;
- (<MTLIndirectArgumentEncoder> *)newIndirectArgumentEncoderWithLayout:(_MTLIndirectArgumentBufferLayout *)arg1;
- (<MTLLibrary> *)newLibraryWithCIFilters:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithCIFiltersForComputePipeline:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLLibrary> *)newLibraryWithImageFilterFunctionsSPI:(NSArray *)arg1 imageFilterFunctionInfo:(const struct { bool x1; unsigned long long x2; struct { /* ? */ } *x3; }*)arg2 error:(id*)arg3;
- (<MTLPipelineLibrarySPI> *)newPipelineLibraryWithFilePath:(NSString *)arg1 error:(id*)arg2;
- (MTLRenderPipelineDescriptor *)newRenderPipelineDescriptorWithSerializedData:(NSObject<OS_dispatch_data> *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (void)newRenderPipelineStateWithTileDescriptor:(void *)arg1 completionHandler:(void *)arg2; // needs 2 arg types, found 8: MTLTileRenderPipelineDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, <MTLRenderPipelineState> *, NSError *, void*
- (<MTLRenderPipelineState> *)newRenderPipelineStateWithTileDescriptor:(MTLTileRenderPipelineDescriptor *)arg1 error:(id*)arg2;
- (<MTLResourceGroupSPI> *)newResourceGroupFromResources:(const id*)arg1 count:(unsigned long long)arg2;
- (<MTLTextureLayout> *)newTextureLayoutWithDescriptor:(MTLTextureDescriptor *)arg1 isHeapOrBufferBacked:(bool)arg2;
- (<MTLTexture> *)newTextureWithBytesNoCopy:(void *)arg1 length:(void *)arg2 descriptor:(void *)arg3 deallocator:(void *)arg4; // needs 4 arg types, found 10: void*, unsigned long long, MTLTextureDescriptor *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, void*, unsigned long long, void*
- (void)reserveResourceIndicesForResourceType:(unsigned long long)arg1 indices:(unsigned long long*)arg2 indexCount:(unsigned long long)arg3;
- (unsigned long long)resourcePatchingTypeForResourceType:(unsigned long long)arg1;
- (NSObject<OS_dispatch_data> *)serializeComputePipelineDescriptor:(MTLComputePipelineDescriptor *)arg1;
- (NSObject<OS_dispatch_data> *)serializeRenderPipelineDescriptor:(MTLRenderPipelineDescriptor *)arg1;
- (NSObject<OS_dispatch_data> *)serializeStructType:(MTLStructType *)arg1;
- (NSObject<OS_dispatch_data> *)serializeStructType:(MTLStructType *)arg1 version:(unsigned int)arg2;
- (void)setIndirectArgumentBufferDecodingData:(NSObject<OS_dispatch_data> *)arg1;
- (void)setShaderDebugInfoCaching:(bool)arg1;
- (void)setupMPSFunctionTable:(struct MPSFunctionTable { }*)arg1;
- (bool)shaderDebugInfoCaching;
- (unsigned long long)sparseTexturesSupport;
- (void)startCollectingPipelineDescriptors;
- (void)startCollectingPipelineDescriptorsUsingPrefixForNames:(NSString *)arg1;
- (bool)supportsPrimitiveType:(unsigned long long)arg1;
- (const struct MTLTargetDeviceArch { unsigned int x1; unsigned int x2; char *x3; }*)targetDeviceInfo;
- (struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; })tileSizeWithSparsePageSize:(unsigned long long)arg1 textureType:(unsigned long long)arg2 pixelFormat:(unsigned long long)arg3 sampleCount:(unsigned long long)arg4;
- (void)unmapShaderSampleBuffer;

@end
