/* Generated by EzioChiu
   Image: /System/Library/Frameworks/CoreML.framework/CoreML
 */

@interface MLNearestNeighborsSingleKdTreeIndex : NSObject <MLNearestNeighborsIndex, NSSecureCoding> {
    unsigned long long  _leafSize;
    unsigned long long  _numDimensions;
    _KDNode * _root;
    struct vector<float, std::__1::allocator<float> > { 
        float *__begin_; 
        float *__end_; 
        struct __compressed_pair<float *, std::__1::allocator<float> > { 
            float *__value_; 
        } __end_cap_; 
    }  vData;
    struct vector<unsigned long, std::__1::allocator<unsigned long> > { 
        unsigned long long *__begin_; 
        unsigned long long *__end_; 
        struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long> > { 
            unsigned long long *__value_; 
        } __end_cap_; 
    }  vIndices;
}

@property (nonatomic) unsigned long long leafSize;
@property (nonatomic) unsigned long long numDimensions;
@property (nonatomic, retain) _KDNode *root;

+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > > { struct pair<unsigned long, float> {} *x1; struct pair<unsigned long, float> {} *x2; struct __compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > > { struct pair<unsigned long, float> {} *x_3_1_1; } x3; })calculateDistancesForNodesBetweenLeft:(unsigned long long)arg1 andRight:(unsigned long long)arg2 toQueryPoint:(const struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg3;
- (id)constructTree;
- (id)constructTreeForPointsBoundedBy:(struct _KDBoundingBox { struct vector<_KDInterval, std::__1::allocator<_KDInterval> > { struct _KDInterval {} *x_1_1_1; struct _KDInterval {} *x_1_1_2; struct __compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> > { struct _KDInterval {} *x_3_2_1; } x_1_1_3; } x1; unsigned long long x2; }*)arg1 startingIndex:(unsigned long long)arg2 count:(unsigned long long)arg3;
- (unsigned long long)dataPointCount;
- (void)encodeWithCoder:(id)arg1;
- (void)findK:(unsigned long long)arg1 nearestNeighbors:(struct _KDPriorityQueue { unsigned long long x1; struct priority_queue<_KDPriorityQueueElement, std::__1::vector<_KDPriorityQueueElement, std::__1::allocator<_KDPriorityQueueElement> >, _KDPriorityQueueComparator> { struct vector<_KDPriorityQueueElement, std::__1::allocator<_KDPriorityQueueElement> > { struct _KDPriorityQueueElement {} *x_1_2_1; struct _KDPriorityQueueElement {} *x_1_2_2; struct __compressed_pair<_KDPriorityQueueElement *, std::__1::allocator<_KDPriorityQueueElement> > { struct _KDPriorityQueueElement {} *x_3_3_1; } x_1_2_3; } x_2_1_1; struct _KDPriorityQueueComparator { } x_2_1_2; } x2; }*)arg2 toQueryPoint:(const struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg3 inTree:(id)arg4;
- (struct vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > > { struct pair<unsigned long, float> {} *x1; struct pair<unsigned long, float> {} *x2; struct __compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > > { struct pair<unsigned long, float> {} *x_3_1_1; } x3; })findNearestNeighbors:(unsigned long long)arg1 toQueryPoint:(const struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataset:(struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg1 numberOfDimensions:(unsigned long long)arg2 leafSize:(unsigned long long)arg3 error:(id*)arg4;
- (unsigned long long)leafSize;
- (unsigned long long)numDimensions;
- (id)root;
- (void)setLeafSize:(unsigned long long)arg1;
- (void)setNumDimensions:(unsigned long long)arg1;
- (void)setRoot:(id)arg1;
- (bool)updateWithData:(const struct vector<float, std::__1::allocator<float> > { float *x1; float *x2; struct __compressed_pair<float *, std::__1::allocator<float> > { float *x_3_1_1; } x3; }*)arg1 error:(id*)arg2;

@end
