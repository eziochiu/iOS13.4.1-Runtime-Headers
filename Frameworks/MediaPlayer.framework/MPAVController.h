/* Generated by EzioChiu
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPAVController : NSObject <AVAudioSessionDelegateMediaPlayerOnly, MPAVQueueControllerDelegate, MPAVRoutingControllerDelegate> {
    long long  _actionAfterQueueLoadOverride;
    unsigned int  _activeRewindHoldingAtStart;
    bool  _allowsItemErrorResolution;
    unsigned int  _alwaysPlayWheneverPossible;
    bool  _appHasBeenSuspended;
    bool  _autoPlayBackgroundTaskAssertionEnabled;
    long long  _autoPlayBackgroundTaskCount;
    unsigned long long  _autoPlayBackgroundTaskIdentifier;
    NSObject<OS_dispatch_source> * _autoPlayTimeoutSource;
    unsigned int  _autoPlayWhenLikelyToKeepUp;
    bool  _automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds;
    unsigned int  _autoplayDisabledForCurrentItem;
    unsigned long long  _boundaryTimeIndexLastPosted;
    id  _boundaryTimeObserver;
    NSArray * _boundaryTimes;
    unsigned long long  _bufferingState;
    unsigned int  _canPlayFastForward;
    unsigned int  _canPlayFastReverse;
    unsigned int  _canSeekFwd;
    unsigned int  _canSeekRev;
    NSMutableSet * _clientsWantingExternalPlayback;
    NSString * _contentItemIDAtDeath;
    struct __CFRunLoopTimer { } * _currentItemBookkeepingTimer;
    bool  _currentItemHasFinishedDownloading;
    long long  _currentItemRevisionID;
    unsigned long long  _deactivationReasons;
    long long  _delayedCurrentTimeOptions;
    double  _delayedCurrentTimeToSet;
    NSNotification * _delayedPlaybackStateNotification;
    unsigned int  _didReachEnd;
    bool  _didResolveError;
    bool  _disableAirPlayMirroringDuringPlayback;
    long long  _displayOverridePlaybackState;
    unsigned int  _forceDelayedCurrentTimeToSet;
    unsigned int  _hasDelayedCurrentTimeToSet;
    bool  _hasPendingRate;
    bool  _hasProvidedAudibleLikelyToKeepUp;
    bool  _hasProvidedAudiblePlay;
    bool  _hasSentTracePlaybackStartDidFinish;
    NSString * _identifier;
    long long  _indexChangeDirection;
    float  _inflightSeekRate;
    bool  _isReloadingForPlaybackContextChange;
    unsigned int  _isSeekingOrScrubbing;
    double  _itemInitialBookmarkTime;
    long long  _lastDirection;
    long long  _lastDisconnectReason;
    double  _lastInterruptionEnd;
    double  _lastKnownTimeBeforeDeath;
    double  _lastPlaybackIndexChangeTime;
    double  _lastSeekableEnd;
    double  _lastSeekableStart;
    double  _lastSetTime;
    double  _lastSetTimeChangeTime;
    unsigned long long  _lastSetTimeMarker;
    bool  _managesAirPlayBehaviors;
    double  _maxSeekableFwd;
    double  _maxSeekableRev;
    bool  _muted;
    double  _nextFadeOutDuration;
    NSMapTable * _observerInfoToCoreMediaObserver;
    NSMutableArray * _observerInfos;
    unsigned int  _pausedDuringInterruption;
    bool  _pendingChangeForScanning;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _pendingCurrentTime;
    float  _pendingRate;
    MPAVItem * _pendingRateItem;
    id  _periodicTimeObserverToken;
    MPAVRoute * _pickedRoute;
    AVPictureInPictureController * _pictureInPictureController;
    unsigned int  _playInBackgroundUserDefaultEnabled;
    long long  _playbackMode;
    MPAVPolicyEnforcer * _policyEnforcer;
    <MPAVQueueController> * _queueController;
    <MPAVQueueCoordinating> * _queueCoordinator;
    MPQueuePlayer * _queuePlayer;
    float  _rateBeforeResignActive;
    float  _rateBeforeSeek;
    unsigned int  _resetRateAfterSeeking;
    long long  _resetRateAfterSeekingUpdateDisabled;
    unsigned int  _resumePlaybackWhenActive;
    MPAVRoutingController * _routingController;
    long long  _scanDirection;
    unsigned long long  _scanLevel;
    double  _secondsSinceUbiquitousCheckpoint;
    double  _seekFwdSlop;
    double  _seekRevSlop;
    long long  _seeklessState;
    unsigned int  _shouldAutoclearDisplayOverride;
    bool  _shouldConnectToAVPlayer;
    bool  _shouldEnforceHDCP;
    bool  _shouldPostCompatibilityNotifications;
    bool  _shouldPreventStateChangesForRateChange;
    unsigned long long  _stallBackgroundTaskIdentifier;
    NSObject<OS_dispatch_source> * _stallTimerSource;
    long long  _state;
    long long  _stateBeforeInterruption;
    unsigned int  _stopAtEnd;
    double  _temporaryChapterTime;
    double  _tickInterval;
    struct __CFRunLoopTimer { } * _tickTimer;
    unsigned long long  _tickTimerEnabled;
    long long  _ubiquitousBookkeepingDisabledCount;
    bool  _useAirPlayMusicMode;
    unsigned int  _useApplicationAudioSession;
    bool  _usesAudioOnlyModeForExternalPlayback;
    bool  _valid;
    AVPlayerLayer * _videoLayer;
    unsigned long long  _videoLayerUsageCount;
    MPVideoView * _videoView;
    Class  _videoViewClass;
    bool  _wantsPictureInPicture;
    double  _whenSawSeekableEnd;
    double  _whenSawSeekableStart;
}

@property (nonatomic, readonly) long long _displayPlaybackState;
@property (nonatomic) long long actionAfterQueueLoadOverride;
@property (nonatomic) bool alwaysPlayWheneverPossible;
@property (nonatomic) bool autoPlayWhenLikelyToKeepUp;
@property (nonatomic) bool automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds;
@property (nonatomic, readonly) MPQueuePlayer *avPlayer;
@property (nonatomic, readonly) unsigned long long bufferingState;
@property (nonatomic, readonly) MPAVItem *currentItem;
@property (getter=isCurrentItemReady, nonatomic, readonly) bool currentItemReady;
@property (nonatomic) double currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (setter=setDestinationIsTVOut:, nonatomic) bool destinationIsTVOut;
@property (nonatomic) bool disableAirPlayMirroringDuringPlayback;
@property (nonatomic) long long displayOverridePlaybackState;
@property (nonatomic, readonly) double durationOfCurrentItemIfAvailable;
@property (getter=isExternalPlaybackActive, nonatomic, readonly) bool externalPlaybackActive;
@property (nonatomic, readonly) long long externalPlaybackType;
@property (nonatomic, copy) NSString *externalPlaybackVideoGravity;
@property (nonatomic, readonly) MPQueueFeeder *feeder;
@property (nonatomic, readonly) bool hasVolumeControl;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) long long lastDirection;
@property (nonatomic) bool managesAirPlayBehaviors;
@property (nonatomic, readonly) bool muted;
@property (nonatomic) double nextFadeOutDuration;
@property (nonatomic, readonly) AVPictureInPictureController *pictureInPictureController;
@property (nonatomic, readonly) double playableDurationOfCurrentItemIfAvailable;
@property (nonatomic) long long playbackMode;
@property (getter=isPlaying, nonatomic, readonly) bool playing;
@property (nonatomic, retain) MPAVPolicyEnforcer *policyEnforcer;
@property (nonatomic, retain) <MPAVQueueController> *queueController;
@property (nonatomic, retain) <MPAVQueueCoordinating> *queueCoordinator;
@property (nonatomic, retain) MPQueuePlayer *queuePlayer;
@property (nonatomic, readonly) float rate;
@property (nonatomic, readonly) MPAVRoutingController *routingController;
@property (nonatomic, readonly) bool shouldConnectToAVPlayer;
@property (nonatomic, readonly) bool shouldDisplayAsPlaying;
@property (nonatomic) bool shouldEnforceHDCP;
@property (nonatomic) bool shouldPostCompatibilityNotifications;
@property (nonatomic, readonly) bool showPlaybackStateOverlaysOnTVOut;
@property (nonatomic) long long state;
@property (nonatomic, readonly) long long stateBeforeInterruption;
@property (nonatomic) bool stopAtEnd;
@property (readonly) Class superclass;
@property (nonatomic) bool ubiquitousBookkeepingEnabled;
@property (nonatomic) bool useAirPlayMusicMode;
@property (nonatomic) bool useApplicationAudioSession;
@property (getter=isValid, nonatomic, readonly) bool valid;
@property (nonatomic, readonly) AVPlayerLayer *videoLayer;
@property (nonatomic, readonly) MPVideoView *videoView;
@property (nonatomic) float volume;
@property (nonatomic) bool wantsPictureInPicture;

+ (id)_itemKeysToObserve;
+ (id)_playerKeysToObserve;
+ (bool)automaticallyNotifiesObserversOfPlaylistManager;
+ (void)initialize;
+ (bool)isNetworkSupportedPath:(id)arg1;
+ (id)keyPathsForValuesAffectingCurrentItem;
+ (bool)outputSupportsAC3;
+ (bool)prefersApplicationAudioSession;

- (void).cxx_destruct;
- (void)_airPlayFailedUnsupportedVideoFormatForDeviceWithError:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationDidRemoveDeactivationReason:(id)arg1;
- (void)_applicationWillAddDeactivationReason:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applyAirPlayMusicMode;
- (void)_applyAirPlayMusicModeForItem:(id)arg1 shouldIgnorePlaybackQueueTransactions:(bool)arg2;
- (void)_attemptAutoPlay;
- (void)_audioSessionMediaServicesWereResetNotification:(id)arg1;
- (void)_canPlayFastForwardDidChange:(id)arg1;
- (void)_canPlayFastReverseDidChange:(id)arg1;
- (bool)_canPlayItem:(id)arg1;
- (void)_cancelStallTimer;
- (void)_cancelUpdateCurrentItemBookkeepingTimer;
- (bool)_changeChapterTimeMarkerIndexBy:(long long)arg1;
- (void)_checkForBoundaryTimeCrossing;
- (void)_clearLastSetTimeIfPlayerTimeIsValid;
- (void)_clearResetRateAfterSeeking;
- (void)_clearSeekingIntervalsForStreaming;
- (void)_clearVideoLayer:(bool)arg1;
- (void)_configureAudioSession;
- (void)_configureUpdateCurrentItemBookkeepingTimer;
- (void)_connectAVPlayer;
- (void)_contentsChanged;
- (unsigned long long)_currentIndexInBoundaryCMTimes:(id)arg1;
- (double)_currentTimeWithPreloadedPlayerTime:(bool)arg1 value:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)_delayedPlaybackIndexChange;
- (void)_delayedPostPlaybackStateChangedNotification;
- (void)_delayedSetCurrentTime;
- (void)_delayedUpdateScanningRate;
- (void)_delayedUpdateTimeMarker;
- (void)_disconnectAVPlayerWithReason:(long long)arg1;
- (long long)_displayPlaybackState;
- (void)_durationDidChange:(id)arg1;
- (void)_endSeekAndChangeRate:(bool)arg1;
- (id)_expectedAssetTypesForPlaybackMode:(long long)arg1;
- (id)_extractImageFromMetadata:(id)arg1;
- (void)_firstVideoFrameDisplayed:(id)arg1;
- (void)_handlePlaybackErrorResolutionType:(long long)arg1 forItem:(id)arg2 playbackError:(id)arg3 resolutionError:(id)arg4;
- (bool)_hasEnoughDataToPlay;
- (bool)_hasValidPlayerTime;
- (void)_isExternalPlaybackActiveDidChange:(id)arg1;
- (bool)_isVideoLayerAttachedToPlayer;
- (void)_itemAssetIsLoadedNotification:(id)arg1;
- (void)_itemBookmarkTimeDidChangeNotification:(id)arg1;
- (void)_itemDidChange:(id)arg1;
- (void)_itemDidSignificantlyChangeElapsedTime:(double)arg1 rate:(float)arg2;
- (void)_itemFailedToPlayToEnd:(id)arg1;
- (void)_itemFailedToPlayToEndNotification:(id)arg1;
- (void)_itemHasFinishedDownloadingDidChangeNotification:(id)arg1;
- (void)_itemMediaSelectionCriteriaDidLoadNotification:(id)arg1;
- (void)_itemPlaybackDidEndNotification:(id)arg1;
- (void)_itemPlayerItemDidChangeNotification:(id)arg1;
- (void)_itemPlayerItemWillChangeNotification:(id)arg1;
- (void)_itemReadyToPlay:(id)arg1;
- (void)_itemTimeMarkersAvailableNotification:(id)arg1;
- (void)_itemTypeAvailableNotification:(id)arg1;
- (void)_itemWillChange:(id)arg1;
- (void)_pauseBookkeepingTimer;
- (void)_pausePlaybackIfNecessary;
- (void)_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:(bool)arg1;
- (void)_pauseTickTimer;
- (void)_pauseWithFadeout:(float)arg1 forScanning:(bool)arg2;
- (id)_pickedRoute;
- (void)_playWithOptions:(unsigned long long)arg1 allowsEnablingAutoPlay:(bool)arg2;
- (void)_playbackFailedWithError:(id)arg1 canResolve:(bool)arg2;
- (id)_playerAVAudioSession;
- (id)_playerFailedToQueueNotification:(id)arg1;
- (void)_postMPAVControllerItemReadyToPlayNotificationWithItem:(id)arg1;
- (void)_postMPAVControllerSizeDidChangeNotificationWithItem:(id)arg1;
- (void)_postPlaybackStateChangedNotificationWithOriginalState:(long long)arg1 newState:(long long)arg2 delayable:(bool)arg3;
- (void)_prepareToPlayItem:(id)arg1;
- (void)_queueDidEndWithReason:(id)arg1 lastItem:(id)arg2;
- (void)_rateDidChange:(id)arg1;
- (void)_readyForDisplayDidChange:(id)arg1;
- (void)_registerForAVItemNotifications:(id)arg1;
- (void)_reloadTimeMarkerObservationsForItem:(id)arg1;
- (void)_resetInternalState;
- (void)_resumeBookkeepingTimer;
- (void)_resumePlaybackIfNecessary;
- (void)_resumeTickTimer;
- (void)_scheduleUpdateCurrentItemBookkeepingTimer;
- (long long)_seeklessStateForState:(long long)arg1;
- (void)_sendTracePlaybackStartDidFinishIfNeededForItem:(id)arg1;
- (void)_serverConnectionDidDie:(id)arg1;
- (void)_setActionAtEndAttributeForState:(long long)arg1;
- (void)_setAllowsItemErrorResolution:(bool)arg1;
- (void)_setAutoPlayBackgroundTaskAssertionEnabled:(bool)arg1;
- (void)_setBufferingState:(unsigned long long)arg1;
- (void)_setLastSetTime:(double)arg1;
- (bool)_setRate:(float)arg1 forScanning:(bool)arg2 withItem:(id)arg3 completion:(id /* block */)arg4;
- (void)_setState:(long long)arg1;
- (void)_setValid:(bool)arg1;
- (void)_setVideoLayerAttachedToPlayer:(bool)arg1 force:(bool)arg2 pauseIfNecessary:(bool)arg3;
- (bool)_shouldPausePlaybackForDeactivationReasons:(unsigned long long)arg1;
- (bool)_shouldProvideAudiblePlaybackPerformance;
- (bool)_showsPlayingWhenInState:(long long)arg1;
- (void)_sizeDidChange:(id)arg1;
- (void)_streamBufferFull:(id)arg1;
- (void)_streamLikelyToKeepUp:(id)arg1;
- (void)_streamRanDry:(id)arg1;
- (void)_streamUnlikelyToKeepUp:(id)arg1;
- (void)_timeHasJumpedNotification:(id)arg1;
- (void)_timedMetadataDidChange:(id)arg1;
- (void)_tracksDidChange:(id)arg1;
- (void)_unregisterForAVItemNotifications:(id)arg1;
- (void)_unregisterForPlayer:(id)arg1;
- (void)_updateCurrentItemBookkeepingForTimerCallback;
- (void)_updateCurrentItemBookkeepingMarkedAsCheckpoint:(bool)arg1;
- (void)_updateCurrentItemDurationSnapshotWithPlayerTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_updateCurrentItemHasFinishedDownloading;
- (void)_updateDirectionForChangeDelta:(long long)arg1;
- (void)_updateHasProtectedContentForItem:(id)arg1;
- (void)_updateLastSetTimeForCurrentItemIfNeeded;
- (void)_updateProgress:(struct __CFRunLoopTimer { }*)arg1;
- (void)_updateScanningRate;
- (void)_updateSeekingIntervalsForStreaming;
- (void)_updateStateForPlaybackPrevention;
- (void)_updateTypeForItem:(id)arg1;
- (void)_verifyDisplayProtection;
- (void)_volumeDidChangeNotification:(id)arg1;
- (long long)actionAfterQueueLoadOverride;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 usingBlock:(id /* block */)arg2;
- (void)airPlayFailedRentalDownloadRequired;
- (void)airPlayVideoEnded;
- (bool)allowsExternalPlayback;
- (bool)alwaysPlayWheneverPossible;
- (bool)autoPlayWhenLikelyToKeepUp;
- (void)autoclearDisplayOverride;
- (bool)automaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds;
- (id)avPlayer;
- (bool)becomeActiveWithError:(id*)arg1;
- (void)beginInterruption;
- (void)beginSeek:(int)arg1;
- (void)beginTickTimerWithInterval:(double)arg1;
- (void)beginUsingVideoLayer;
- (unsigned long long)bufferingState;
- (bool)canPlayFastReverse;
- (bool)canSeekBackwards;
- (bool)canSeekForwards;
- (bool)canSkipToSeekableEnd;
- (bool)changePlaybackIndexBy:(long long)arg1 deltaType:(long long)arg2;
- (bool)changePlaybackIndexBy:(long long)arg1 deltaType:(long long)arg2 ignoreElapsedTime:(bool)arg3;
- (bool)changePlaybackIndexBy:(long long)arg1 deltaType:(long long)arg2 ignoreElapsedTime:(bool)arg3 error:(id*)arg4;
- (bool)changePlaybackIndexBy:(long long)arg1 deltaType:(long long)arg2 ignoreElapsedTime:(bool)arg3 force:(bool)arg4 error:(id*)arg5;
- (id)currentItem;
- (double)currentTime;
- (double)currentTimeForBookmarking;
- (void)dealloc;
- (bool)destinationIsTVOut;
- (bool)disableAirPlayMirroringDuringPlayback;
- (void)disableAutoplayForCurrentItem;
- (long long)displayOverridePlaybackState;
- (double)durationOfCurrentItemIfAvailable;
- (id)embeddedDataTimesForItem:(id)arg1;
- (void)enableAutoplayForCurrentItem;
- (void)endInterruptionFromInterruptor:(id)arg1 category:(id)arg2 flags:(unsigned long long)arg3;
- (void)endPlayback;
- (void)endSeek;
- (void)endTickTimer;
- (void)endUsingVideoLayer;
- (long long)externalPlaybackType;
- (id)externalPlaybackVideoGravity;
- (id)feeder;
- (void)finalizeBookkeepingNow;
- (bool)forceRestartPlaybackIfNecessary;
- (void)handlePlaybackErrorWithUserInfo:(id)arg1;
- (bool)hasVolumeControl;
- (id)identifier;
- (id)init;
- (id)initWithOptions:(unsigned long long)arg1;
- (bool)isCurrentItemReady;
- (bool)isExternalPlaybackActive;
- (bool)isLiveStreaming;
- (bool)isPlaying;
- (bool)isSeekingOrScrubbing;
- (bool)isTickTimerEnabled;
- (bool)isValid;
- (long long)lastDirection;
- (bool)managesAirPlayBehaviors;
- (bool)muted;
- (double)nextFadeOutDuration;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause;
- (void)pauseWithFadeout:(float)arg1;
- (id)pictureInPictureController;
- (void)play;
- (void)playWithOptions:(unsigned long long)arg1;
- (double)playableDurationOfCurrentItemIfAvailable;
- (void)playbackHasStartedForItem:(id)arg1;
- (long long)playbackMode;
- (id)policyEnforcer;
- (id)preferredLanguages;
- (id)queueController;
- (void)queueController:(id)arg1 didChangeContentsWithReplacementPlaybackContext:(id)arg2;
- (void)queueController:(id)arg1 didChangeRepeatType:(long long)arg2;
- (void)queueController:(id)arg1 didChangeShuffleType:(long long)arg2;
- (void)queueController:(id)arg1 didIncrementVersionForSegment:(id)arg2;
- (void)queueController:(id)arg1 failedToLoadItem:(id)arg2;
- (void)queueControllerDidChangeContents:(id)arg1;
- (id)queueCoordinator;
- (id)queuePlayer;
- (float)rate;
- (void)reloadWithPlaybackContext:(id)arg1;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeTimeObserver:(id)arg1;
- (id)routingController;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)routingControllerDidPauseFromActiveRouteChange:(id)arg1;
- (void)routingControllerExternalScreenTypeDidChange:(id)arg1;
- (void)setActionAfterQueueLoadOverride:(long long)arg1;
- (void)setActive:(bool)arg1;
- (void)setAlwaysPlayWheneverPossible:(bool)arg1;
- (void)setAutoPlayWhenLikelyToKeepUp:(bool)arg1;
- (void)setAutoclearingDisplayOverridePlaybackState:(long long)arg1;
- (void)setAutomaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds:(bool)arg1;
- (void)setClient:(id)arg1 wantsToAllowExternalPlayback:(bool)arg2;
- (void)setClient:(id)arg1 wantsToAllowExternalPlayback:(bool)arg2 shouldIgnorePlaybackQueueTransactions:(bool)arg3;
- (void)setCurrentTime:(double)arg1;
- (void)setCurrentTime:(double)arg1 options:(long long)arg2;
- (void)setCurrentTime:(double)arg1 options:(long long)arg2 completion:(id /* block */)arg3;
- (void)setDestinationIsTVOut:(bool)arg1;
- (void)setDisableAirPlayMirroringDuringPlayback:(bool)arg1;
- (void)setDisableAirPlayMirroringDuringPlayback:(bool)arg1 shouldIgnorePlaybackQueueTransactions:(bool)arg2;
- (void)setDisplayOverridePlaybackState:(long long)arg1;
- (void)setExternalPlaybackVideoGravity:(id)arg1;
- (void)setManagesAirPlayBehaviors:(bool)arg1;
- (void)setNextFadeOutDuration:(double)arg1;
- (void)setPlaybackMode:(long long)arg1;
- (void)setPlaylistManager:(id)arg1;
- (void)setPolicyEnforcer:(id)arg1;
- (void)setQueueController:(id)arg1;
- (void)setQueueCoordinator:(id)arg1;
- (void)setQueuePlayer:(id)arg1;
- (bool)setRate:(float)arg1;
- (bool)setRate:(float)arg1 completion:(id /* block */)arg2;
- (void)setRateForScanning:(float)arg1;
- (void)setShouldEnforceHDCP:(bool)arg1;
- (void)setShouldPostCompatibilityNotifications:(bool)arg1;
- (void)setState:(long long)arg1;
- (void)setStopAtEnd:(bool)arg1;
- (void)setUbiquitousBookkeepingEnabled:(bool)arg1;
- (void)setUseAirPlayMusicMode:(bool)arg1;
- (void)setUseApplicationAudioSession:(bool)arg1;
- (void)setUsesAudioOnlyModeForExternalPlayback:(bool)arg1;
- (void)setUsesAudioOnlyModeForExternalPlayback:(bool)arg1 shouldIgnorePlaybackQueueTransactions:(bool)arg2;
- (void)setVolume:(float)arg1;
- (void)setWantsPictureInPicture:(bool)arg1;
- (bool)shouldConnectToAVPlayer;
- (bool)shouldDisplayAsPlaying;
- (bool)shouldEnforceHDCP;
- (bool)shouldHaveNoActionAtEndForState:(long long)arg1;
- (bool)shouldPostCompatibilityNotifications;
- (bool)showPlaybackStateOverlaysOnTVOut;
- (void)skipToSeekableEnd;
- (void)skipToSeekableStart;
- (long long)state;
- (long long)stateBeforeInterruption;
- (bool)stopAtEnd;
- (double)timeOfPlayableEnd;
- (double)timeOfPlayableStart;
- (double)timeOfSeekableEnd;
- (double)timeOfSeekableStart;
- (void)togglePlayback;
- (void)togglePlaybackWithOptions:(unsigned long long)arg1;
- (bool)ubiquitousBookkeepingEnabled;
- (void)updateBookkeepingNow;
- (bool)useAirPlayMusicMode;
- (bool)useApplicationAudioSession;
- (id)videoLayer;
- (id)videoView;
- (float)volume;
- (bool)wantsPictureInPicture;

@end
