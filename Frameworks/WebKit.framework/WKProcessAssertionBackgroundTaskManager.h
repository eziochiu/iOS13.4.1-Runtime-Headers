/* Generated by EzioChiu
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKProcessAssertionBackgroundTaskManager : NSObject {
    bool  _applicationIsBackgrounded;
    struct WeakHashSet<WebKit::ProcessAndUIAssertion> { 
        struct HashSet<WTF::Ref<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >, WTF::PtrHash<WTF::Ref<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> > >, WTF::HashTraits<Ref<WTF::WeakPtrImpl> > > { 
            struct HashTable<WTF::Ref<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >, WTF::Ref<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >, WTF::IdentityExtractor, WTF::PtrHash<WTF::Ref<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> > >, WTF::HashTraits<Ref<WTF::WeakPtrImpl> >, WTF::HashTraits<Ref<WTF::WeakPtrImpl> > > { 
                struct Ref<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> > {} *m_table; 
            } m_impl; 
        } m_set; 
    }  _assertionsNeedingBackgroundTask;
    unsigned long long  _backgroundTask;
    id /* block */  _pendingTaskReleaseTask;
}

+ (id)shared;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_cancelPendingReleaseTask;
- (void)_notifyAssertionsOfImminentSuspension;
- (void)_releaseBackgroundTask;
- (void)_scheduleReleaseTask;
- (void)_updateBackgroundTask;
- (void)addAssertionNeedingBackgroundTask:(struct ProcessAndUIAssertion { int (**x1)(); struct WeakPtrFactory<WebKit::ProcessAssertion> { struct RefPtr<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> > { struct WeakPtrImpl {} *x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<BKSProcessAssertion> { void *x_3_1_1; } x3; int x4; int x5; struct Client {} *x6; bool x7; }*)arg1;
- (void)dealloc;
- (id)init;
- (void)removeAssertionNeedingBackgroundTask:(struct ProcessAndUIAssertion { int (**x1)(); struct WeakPtrFactory<WebKit::ProcessAssertion> { struct RefPtr<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> > { struct WeakPtrImpl {} *x_1_2_1; } x_2_1_1; } x2; struct RetainPtr<BKSProcessAssertion> { void *x_3_1_1; } x3; int x4; int x5; struct Client {} *x6; bool x7; }*)arg1;

@end
