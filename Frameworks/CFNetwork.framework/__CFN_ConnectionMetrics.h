/* Generated by EzioChiu
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
 */

@interface __CFN_ConnectionMetrics : NSObject <NSSecureCoding> {
    bool  _TLSConfigured;
    NSUUID * _UUID;
    double  _beginTime;
    NSDictionary * _cachedSubflowCounts;
    NSDictionary * _cachedTCPInfoAtEnd;
    bool  _cellular;
    bool  _coalesced;
    NSObject<OS_nw_connection> * _connection;
    bool  _constrained;
    double  _endTime;
    NSObject<OS_nw_endpoint> * _endpoint;
    double  _establishTime;
    NSObject<OS_nw_establishment_report> * _establishmentReport;
    bool  _expensive;
    unsigned long long  _identifier;
    NSUUID * _initiatingTransactionID;
    NSString * _interfaceName;
    NSObject<OS_nw_endpoint> * _localEndpoint;
    bool  _multipath;
    bool  _needsCachedSubflowCounts;
    bool  _needsCachedTCPInfoAtEnd;
    unsigned short  _negotiatedTLSCipherSuite;
    unsigned short  _negotiatedTLSProtocolVersion;
    NSString * _networkProtocolName;
    bool  _proxyConfigured;
    NSObject<OS_nw_endpoint> * _remoteEndpoint;
    __CFN_SessionMetrics * _sessionMetrics;
    struct weak_ptr<TransportConnection> { 
        struct TransportConnection {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _transportConnection;
    bool  _usedByTransaction;
    bool  _usedTFO;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  connectionLock;
}

@property (getter=isTLSConfigured, nonatomic) bool TLSConfigured;
@property (nonatomic, retain) NSUUID *UUID;
@property (nonatomic) double beginTime;
@property (nonatomic, retain) NSDictionary *cachedSubflowCounts;
@property (nonatomic, retain) NSDictionary *cachedTCPInfoAtEnd;
@property (getter=isCellular, nonatomic) bool cellular;
@property (getter=isCoalesced, nonatomic) bool coalesced;
@property (nonatomic, retain) NSObject<OS_nw_connection> *connection;
@property (getter=isConstrained, nonatomic) bool constrained;
@property (nonatomic) double endTime;
@property (nonatomic, retain) NSObject<OS_nw_endpoint> *endpoint;
@property (nonatomic) double establishTime;
@property (nonatomic, retain) NSObject<OS_nw_establishment_report> *establishmentReport;
@property (getter=isExpensive, nonatomic) bool expensive;
@property (nonatomic) unsigned long long identifier;
@property (nonatomic, retain) NSUUID *initiatingTransactionID;
@property (nonatomic, copy) NSString *interfaceName;
@property (nonatomic, retain) NSObject<OS_nw_endpoint> *localEndpoint;
@property (getter=isMultipath, nonatomic) bool multipath;
@property (nonatomic) bool needsCachedSubflowCounts;
@property (nonatomic) bool needsCachedTCPInfoAtEnd;
@property (nonatomic) unsigned short negotiatedTLSCipherSuite;
@property (nonatomic) unsigned short negotiatedTLSProtocolVersion;
@property (nonatomic, copy) NSString *networkProtocolName;
@property (getter=isProxyConfigured, nonatomic) bool proxyConfigured;
@property (nonatomic, retain) NSObject<OS_nw_endpoint> *remoteEndpoint;
@property (nonatomic, retain) __CFN_SessionMetrics *sessionMetrics;
@property (nonatomic) struct weak_ptr<TransportConnection> { struct TransportConnection {} *x1; struct __shared_weak_count {} *x2; } transportConnection;
@property (nonatomic) bool usedByTransaction;
@property (nonatomic) bool usedTFO;

+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)UUID;
- (id)_subflowCounts;
- (id)_tcpInfo;
- (void)begin;
- (double)beginTime;
- (id)cachedSubflowCounts;
- (id)cachedTCPInfoAtEnd;
- (id)connection;
- (void)encodeWithCoder:(id)arg1;
- (void)end;
- (double)endTime;
- (id)endpoint;
- (void)establish;
- (double)establishTime;
- (id)establishmentReport;
- (unsigned long long)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithConnection:(struct shared_ptr<TransportConnection> { struct TransportConnection {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (id)initiatingTransactionID;
- (id)interfaceName;
- (bool)isCellular;
- (bool)isCoalesced;
- (bool)isConstrained;
- (bool)isExpensive;
- (bool)isMultipath;
- (bool)isProxyConfigured;
- (bool)isTLSConfigured;
- (void)linkWithTransaction:(id)arg1 sessionMetrics:(id)arg2;
- (id)localEndpoint;
- (bool)needsCachedSubflowCounts;
- (bool)needsCachedTCPInfoAtEnd;
- (unsigned short)negotiatedTLSCipherSuite;
- (unsigned short)negotiatedTLSProtocolVersion;
- (id)networkProtocolName;
- (id)remoteEndpoint;
- (id)sessionMetrics;
- (void)setBeginTime:(double)arg1;
- (void)setCachedSubflowCounts:(id)arg1;
- (void)setCachedTCPInfoAtEnd:(id)arg1;
- (void)setCellular:(bool)arg1;
- (void)setCoalesced:(bool)arg1;
- (void)setConnection:(id)arg1;
- (void)setConstrained:(bool)arg1;
- (void)setEndTime:(double)arg1;
- (void)setEndpoint:(id)arg1;
- (void)setEstablishTime:(double)arg1;
- (void)setEstablishmentReport:(id)arg1;
- (void)setExpensive:(bool)arg1;
- (void)setIdentifier:(unsigned long long)arg1;
- (void)setInitiatingTransactionID:(id)arg1;
- (void)setInterfaceName:(id)arg1;
- (void)setLocalEndpoint:(id)arg1;
- (void)setMultipath:(bool)arg1;
- (void)setNeedsCachedSubflowCounts:(bool)arg1;
- (void)setNeedsCachedTCPInfoAtEnd:(bool)arg1;
- (void)setNegotiatedTLSCipherSuite:(unsigned short)arg1;
- (void)setNegotiatedTLSProtocolVersion:(unsigned short)arg1;
- (void)setNetworkProtocolName:(id)arg1;
- (void)setProxyConfigured:(bool)arg1;
- (void)setRemoteEndpoint:(id)arg1;
- (void)setSessionMetrics:(id)arg1;
- (void)setTLSConfigured:(bool)arg1;
- (void)setTransportConnection:(struct weak_ptr<TransportConnection> { struct TransportConnection {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (void)setUUID:(id)arg1;
- (void)setUsedByTransaction:(bool)arg1;
- (void)setUsedTFO:(bool)arg1;
- (id)subflowCounts;
- (id)tcpInfo;
- (struct weak_ptr<TransportConnection> { struct TransportConnection {} *x1; struct __shared_weak_count {} *x2; })transportConnection;
- (bool)usedByTransaction;
- (bool)usedTFO;
- (void)wait;

@end
