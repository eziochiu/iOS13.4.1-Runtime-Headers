/* Generated by EzioChiu
   Image: /System/Library/Frameworks/CoreServices.framework/CoreServices
 */

@interface _UTTypeQuery : _LSQuery {
    void * _context;
    unsigned long long  _flags;
    unsigned long long  _propertyFlags;
}

@property (setter=_setContext:, nonatomic) struct LSContext { id x1; }*_context;
@property (setter=_setPropertiesToResolve:, nonatomic) unsigned long long _propertiesToResolve;
@property (setter=_setResolveInactiveDeclarations:, nonatomic) bool _resolveInactiveDeclarations;

+ (void)_precacheTypesForIdentifiers:(id)arg1;
+ (id)typeQueryForAllDeclaredIdentifiers;
+ (id)typeQueryWithDescendantsOfIdentifier:(id)arg1 searchDepthLimit:(unsigned long long)arg2;
+ (id)typeQueryWithIdentifier:(id)arg1;
+ (id)typeQueryWithTag:(id)arg1 ofClass:(id)arg2 conformsTo:(id)arg3;
+ (id)typeQueryWithTag:(id)arg1 ofClass:(id)arg2 conformsTo:(id)arg3 limit:(long long)arg4;

- (struct LSContext { id x1; }*)_context;
- (id)_init;
- (unsigned long long)_propertiesToResolve;
- (bool)_resolveInactiveDeclarations;
- (void)_setContext:(struct LSContext { id x1; }*)arg1;
- (void)_setPropertiesToResolve:(unsigned long long)arg1;
- (void)_setResolveInactiveDeclarations:(bool)arg1;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)resolve;

@end
