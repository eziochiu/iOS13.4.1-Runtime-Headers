/* Generated by EzioChiu
   Image: /System/Library/Frameworks/GameController.framework/GameController
 */

@interface GCMicroGamepad : NSObject {
    bool  _allowsRotation;
    GCControllerButtonInput * _button0;
    GCControllerButtonInput * _button1;
    GCControllerButtonInput * _buttonMenu;
    GCController * _controller;
    long long  _deviceType;
    GCControllerDirectionPad * _dpad;
    bool  _dpadFlippedY;
    GCMotion * _motion;
    bool  _reportsAbsoluteDpadValues;
    id /* block */  _valueChangedHandler;
}

@property (nonatomic) bool allowsRotation;
@property (nonatomic, readonly, retain) GCControllerButtonInput *buttonA;
@property (nonatomic, readonly) GCControllerButtonInput *buttonMenu;
@property (nonatomic, readonly, retain) GCControllerButtonInput *buttonX;
@property (nonatomic, readonly) GCController *controller;
@property (nonatomic) long long deviceType;
@property (nonatomic, readonly, retain) GCControllerDirectionPad *dpad;
@property (nonatomic) bool reportsAbsoluteDpadValues;
@property (nonatomic, copy) id /* block */ valueChangedHandler;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_motion;
- (bool)allowsRotation;
- (id)button0;
- (id)button1;
- (id)buttonA;
- (id)buttonB;
- (id)buttonMenu;
- (id)buttonX;
- (id)controller;
- (long long)deviceType;
- (id)dpad;
- (void)encodeWithCoder:(id)arg1;
- (void)handleEvent:(struct __IOHIDEvent { }*)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithController:(id)arg1;
- (id)initWithController:(id)arg1 dpadFlippedY:(bool)arg2;
- (bool)isBluetoothAndUSBMirrored;
- (void)microControllerWithDigitizerX:(float)arg1 digitizerY:(float)arg2 timestamp:(unsigned long long)arg3 touchDown:(bool)arg4;
- (id)name;
- (id)productCategory;
- (bool)reportsAbsoluteDpadValues;
- (id)saveSnapshot;
- (void)setAllowsRotation:(bool)arg1;
- (void)setButton:(id)arg1 pressed:(bool)arg2;
- (void)setButton:(id)arg1 value:(double)arg2;
- (void)setController:(id)arg1;
- (void)setControllerForElements;
- (void)setDeviceType:(long long)arg1;
- (void)setDpad:(id)arg1 x:(double)arg2 y:(double)arg3;
- (void)setPlayerIndex:(long long)arg1;
- (void)setReportsAbsoluteDpadValues:(bool)arg1;
- (void)setStateFromMicroGamepad:(id)arg1;
- (void)setValueChangedHandler:(id /* block */)arg1;
- (void)set_motion:(id)arg1;
- (bool)supportsDpadTaps;
- (id /* block */)valueChangedHandler;

@end
