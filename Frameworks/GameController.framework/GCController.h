/* Generated by EzioChiu
   Image: /System/Library/Frameworks/GameController.framework/GameController
 */

@interface GCController : NSObject {
    bool  _allHIDDevicesConnected;
    id /* block */  _controllerPausedHandler;
    NSString * _debugName;
    NSString * _description;
    unsigned long long  _deviceHash;
    bool  _forwarded;
    NSObject<OS_dispatch_queue> * _handlerQueue;
    NSMutableArray * _hidServices;
    NSString * _physicalDeviceUniqueID;
    bool  _physicalDeviceUsesCompass;
    long long  _playerIndex;
    NSString * _productCategory;
    <GCNamedProfile> * _profile;
    bool  _published;
    unsigned int  _service;
    bool  _snapshot;
    NSString * _vendorName;
}

@property (nonatomic, copy) id /* block */ __deprecated_controllerPausedHandler;
@property (getter=areAllHIDDevicesConnected) bool allHIDDevicesConnected;
@property (getter=isAttachedToDevice, nonatomic, readonly) bool attachedToDevice;
@property (nonatomic, copy) id /* block */ controllerPausedHandler;
@property (nonatomic, copy) NSString *debugName;
@property (nonatomic) unsigned long long deviceHash;
@property (nonatomic, readonly, retain) GCExtendedGamepad *extendedGamepad;
@property (getter=isForwarded, nonatomic) bool forwarded;
@property (nonatomic, readonly, retain) GCGamepad *gamepad;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *handlerQueue;
@property (nonatomic, retain) NSMutableArray *hidServices;
@property (nonatomic, readonly, retain) GCMicroGamepad *microGamepad;
@property (nonatomic, readonly, retain) GCMotion *motion;
@property (nonatomic, retain) NSString *physicalDeviceUniqueID;
@property (nonatomic) bool physicalDeviceUsesCompass;
@property (nonatomic) long long playerIndex;
@property (nonatomic, retain) NSString *productCategory;
@property (nonatomic, retain) <GCNamedProfile> *profile;
@property (getter=isPublished) bool published;
@property (nonatomic) unsigned int service;
@property (getter=isSnapshot, readonly) bool snapshot;
@property (nonatomic, copy) NSString *vendorName;

+ (void)__daemon__addController:(id)arg1;
+ (void)__daemon__appDidEnterBackground;
+ (void)__daemon__appWillEnterForeground;
+ (void)__daemon__controllerWithUDID:(unsigned long long)arg1 setValue:(float)arg2 forElement:(int)arg3;
+ (void)__daemon__removeController:(id)arg1;
+ (void)__daemon__requestConnectedHostUpdatesWithHandler:(id /* block */)arg1;
+ (void)__daemon__setUserActivityUserInfo:(id)arg1;
+ (void)__daemon__startBonjourService;
+ (void)__openXPC__;
+ (void)__openXPC_and_CBApplicationDidBecomeActive__;
+ (void)__open__;
+ (void)__setLogger__:(id /* block */)arg1;
+ (void)_startWirelessControllerDiscoveryWithCompanions:(bool)arg1 btClassic:(bool)arg2 btle:(bool)arg3 completionHandler:(id /* block */)arg4;
+ (id)controllerWithExtendedGamepad;
+ (id)controllerWithMicroGamepad;
+ (id)controllers;
+ (void)startWirelessControllerDiscoveryWithCompletionHandler:(id /* block */)arg1;
+ (void)stopWirelessControllerDiscovery;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id /* block */)__deprecated_controllerPausedHandler;
- (void)_setSnapshot:(bool)arg1;
- (void)addServiceRefs:(id)arg1;
- (bool)areAllHIDDevicesConnected;
- (id)capture;
- (void)clearServiceRef;
- (id /* block */)controllerPausedHandler;
- (void*)createInputBufferForDevice:(struct __IOHIDDevice { }*)arg1 withSize:(unsigned long long)arg2;
- (void)dealloc;
- (id)debugName;
- (id)description;
- (unsigned long long)deviceHash;
- (bool)displayTrueSiriRemoteName;
- (void)encodeWithCoder:(id)arg1;
- (id)extendedGamepad;
- (id)gamepad;
- (id)handlerQueue;
- (bool)hasServiceRef:(struct __IOHIDServiceClient { }*)arg1;
- (id)hidServices;
- (id)initWithCoder:(id)arg1;
- (id)initWithProfile:(id)arg1;
- (id)initWithServiceRef:(struct __IOHIDServiceClient { }*)arg1;
- (bool)isAttachedToDevice;
- (bool)isEqualToController:(id)arg1;
- (bool)isForwarded;
- (bool)isPublished;
- (bool)isSnapshot;
- (id)microGamepad;
- (id)motion;
- (id)physicalDeviceUniqueID;
- (bool)physicalDeviceUsesCompass;
- (long long)playerIndex;
- (id)productCategory;
- (id)profile;
- (void)removeServiceRef:(struct __IOHIDServiceClient { }*)arg1;
- (unsigned int)sampleRate;
- (unsigned int)service;
- (void)setAllHIDDevicesConnected:(bool)arg1;
- (void)setControllerPausedHandler:(id /* block */)arg1;
- (void)setDebugName:(id)arg1;
- (void)setDeviceHash:(unsigned long long)arg1;
- (void)setForwarded:(bool)arg1;
- (void)setHandlerQueue:(id)arg1;
- (void)setHidServices:(id)arg1;
- (void)setPhysicalDeviceUniqueID:(id)arg1;
- (void)setPhysicalDeviceUsesCompass:(bool)arg1;
- (void)setPlayerIndex:(long long)arg1;
- (void)setProductCategory:(id)arg1;
- (void)setProfile:(id)arg1;
- (void)setPublished:(bool)arg1;
- (void)setService:(unsigned int)arg1;
- (void)setVendorName:(id)arg1;
- (void)set__deprecated_controllerPausedHandler:(id /* block */)arg1;
- (bool)supportsMotionLite;
- (id)vendorName;

@end
