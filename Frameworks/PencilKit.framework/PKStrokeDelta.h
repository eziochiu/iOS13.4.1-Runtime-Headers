/* Generated by EzioChiu
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKStrokeDelta : NSObject {
    PKStroke * _deltaStroke;
    _PKStrokeData * _deltaStrokeData;
    NSUUID * _strokeUUID;
}

@property (nonatomic, retain) NSUUID *_strokeUUID;
@property (nonatomic, retain) PKStroke *deltaStroke;
@property (nonatomic, retain) _PKStrokeData *deltaStrokeData;

- (void).cxx_destruct;
- (id)_strokeUUID;
- (id)dataRepresentation;
- (id)deltaStroke;
- (id)deltaStrokeData;
- (id)description;
- (id)initWithArchive:(const struct StrokeDelta { int (**x1)(); struct unique_ptr<drawing::Ink, std::__1::default_delete<drawing::Ink> > { struct __compressed_pair<drawing::Ink *, std::__1::default_delete<drawing::Ink> > { struct Ink {} *x_1_2_1; } x_2_1_1; } x2; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data {} *x_3_1_1; struct Data {} *x_3_1_2; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data {} *x_3_2_1; } x_3_1_3; } x3; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > { struct __compressed_pair<drawing::Stroke *, std::__1::default_delete<drawing::Stroke> > { struct Stroke {} *x_1_2_1; } x_4_1_1; } x4; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData {} *x_1_2_1; } x_5_1_1; } x5; }*)arg1 error:(id*)arg2;
- (id)initWithData:(id)arg1 error:(id*)arg2;
- (void)saveToArchive:(struct StrokeDelta { int (**x1)(); struct unique_ptr<drawing::Ink, std::__1::default_delete<drawing::Ink> > { struct __compressed_pair<drawing::Ink *, std::__1::default_delete<drawing::Ink> > { struct Ink {} *x_1_2_1; } x_2_1_1; } x2; struct vector<PB::Data, std::__1::allocator<PB::Data> > { struct Data {} *x_3_1_1; struct Data {} *x_3_1_2; struct __compressed_pair<PB::Data *, std::__1::allocator<PB::Data> > { struct Data {} *x_3_2_1; } x_3_1_3; } x3; struct unique_ptr<drawing::Stroke, std::__1::default_delete<drawing::Stroke> > { struct __compressed_pair<drawing::Stroke *, std::__1::default_delete<drawing::Stroke> > { struct Stroke {} *x_1_2_1; } x_4_1_1; } x4; struct unique_ptr<drawing::StrokeData, std::__1::default_delete<drawing::StrokeData> > { struct __compressed_pair<drawing::StrokeData *, std::__1::default_delete<drawing::StrokeData> > { struct StrokeData {} *x_1_2_1; } x_5_1_1; } x5; }*)arg1;
- (void)setDeltaStroke:(id)arg1;
- (void)setDeltaStrokeData:(id)arg1;
- (void)set_strokeUUID:(id)arg1;

@end
