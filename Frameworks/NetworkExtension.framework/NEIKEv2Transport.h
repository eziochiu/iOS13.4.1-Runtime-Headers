/* Generated by EzioChiu
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@interface NEIKEv2Transport : NSObject <NEIKEv2PacketReceiver> {
    bool  _cancelled;
    NSMutableArray * _clients;
    bool  _connected;
    NSMutableArray * _connectedBlocks;
    NSObject<OS_nw_connection> * _connection;
    NWInterface * _interface;
    NWAddressEndpoint * _local;
    <NEIKEv2PacketDelegate> * _packetDelegate;
    NSObject<OS_dispatch_queue> * _receiveQueue;
    NWAddressEndpoint * _remote;
    unsigned long long  _transportType;
}

@property bool cancelled;
@property (retain) NSMutableArray *clients;
@property bool connected;
@property (nonatomic, retain) NSMutableArray *connectedBlocks;
@property (retain) NSObject<OS_nw_connection> *connection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NWInterface *interface;
@property (retain) NWAddressEndpoint *local;
@property <NEIKEv2PacketDelegate> *packetDelegate;
@property (readonly) unsigned short port;
@property (retain) NSObject<OS_dispatch_queue> *receiveQueue;
@property (retain) NWAddressEndpoint *remote;
@property (readonly) Class superclass;
@property unsigned long long transportType;

+ (id)copyExistingTransport:(unsigned long long)arg1 remote:(id)arg2 local:(id)arg3 localPort:(unsigned short)arg4 boundInterface:(id)arg5 packetDelegate:(id)arg6;
+ (id)createTransport:(unsigned long long)arg1 remote:(id)arg2 local:(id)arg3 localPort:(unsigned short)arg4 boundInterface:(id)arg5 queue:(id)arg6 socketGetBlock:(id /* block */)arg7 packetDelegate:(id)arg8;
+ (id)createTransportWithConnection:(id)arg1 queue:(id)arg2;
+ (id)stringForTransport:(unsigned long long)arg1;

- (void).cxx_destruct;
- (void)addClient:(id)arg1 wildcard:(bool)arg2 delegate:(id)arg3;
- (void)callConnectedBlocks;
- (void)cancelClient:(id)arg1 shouldInvalidate:(bool)arg2;
- (bool)cancelled;
- (id)clients;
- (bool)connected;
- (id)connectedBlocks;
- (id)connection;
- (void)dealloc;
- (id)description;
- (void)disableWildcardForClient:(id)arg1;
- (id)init;
- (id)interface;
- (id)local;
- (id)packetDelegate;
- (unsigned short)port;
- (void)readOnConnection;
- (void)receivePacketData:(id)arg1;
- (id)receiveQueue;
- (id)remote;
- (bool)sendData:(id)arg1 sendCompletionHandler:(id /* block */)arg2;
- (bool)sendPacket:(id)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setClients:(id)arg1;
- (void)setConnected:(bool)arg1;
- (void)setConnectedBlocks:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setInterface:(id)arg1;
- (void)setLocal:(id)arg1;
- (void)setPacketDelegate:(id)arg1;
- (void)setReceiveQueue:(id)arg1;
- (void)setRemote:(id)arg1;
- (void)setTransportType:(unsigned long long)arg1;
- (bool)setupUDPConnectionToRemote:(id)arg1 local:(id)arg2 localPort:(unsigned short)arg3 socketGetBlock:(id /* block */)arg4;
- (unsigned long long)transportType;
- (void)waitForTransport:(id /* block */)arg1;

@end
