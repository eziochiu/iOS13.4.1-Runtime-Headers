/* Generated by EzioChiu
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@interface NEIKEv2IKEAuthPacket : NEIKEv2Packet {
    NEIKEv2AuthPayload * _auth;
    NSArray * _certificateRequests;
    NSArray * _certificates;
    NEIKEv2ConfigPayload * _config;
    NEIKEv2EAPPayload * _eap;
    NEIKEv2InitiatorIdentifierPayload * _idi;
    NEIKEv2ResponderIdentifierPayload * _idr;
    NEIKEv2ChildSAPayload * _sa;
    NEIKEv2InitiatorTrafficSelectorPayload * _tsi;
    NEIKEv2ResponderTrafficSelectorPayload * _tsr;
    NSArray * _vendorIDs;
}

@property (retain) NEIKEv2AuthPayload *auth;
@property (retain) NSArray *certificateRequests;
@property (retain) NSArray *certificates;
@property (retain) NEIKEv2ConfigPayload *config;
@property (retain) NEIKEv2EAPPayload *eap;
@property (retain) NEIKEv2InitiatorIdentifierPayload *idi;
@property (retain) NEIKEv2ResponderIdentifierPayload *idr;
@property (retain) NEIKEv2ChildSAPayload *sa;
@property (retain) NEIKEv2InitiatorTrafficSelectorPayload *tsi;
@property (retain) NEIKEv2ResponderTrafficSelectorPayload *tsr;
@property (retain) NSArray *vendorIDs;

+ (id)copyTypeDescription;
+ (id)createEAPForInitiatorIKESA:(id)arg1 childSA:(id)arg2 lastResponderPacket:(id)arg3;
+ (id)createIKEAuthForInitiatorIKESA:(id)arg1 childSA:(id)arg2;
+ (id)createIKEAuthResponse:(id)arg1 ikeSA:(id)arg2 childSA:(id)arg3;
+ (id)createIKEAuthResponse:(id)arg1 refusalError:(unsigned long long)arg2;
+ (unsigned long long)exchangeType;

- (void).cxx_destruct;
- (id)auth;
- (id)certificateRequests;
- (id)certificates;
- (id)config;
- (id)eap;
- (void)filloutPayloads;
- (void)gatherPayloads;
- (id)idi;
- (id)idr;
- (id)sa;
- (void)setAuth:(id)arg1;
- (void)setCertificateRequests:(id)arg1;
- (void)setCertificates:(id)arg1;
- (void)setConfig:(id)arg1;
- (void)setEap:(id)arg1;
- (void)setIdi:(id)arg1;
- (void)setIdr:(id)arg1;
- (void)setSa:(id)arg1;
- (void)setTsi:(id)arg1;
- (void)setTsr:(id)arg1;
- (void)setVendorIDs:(id)arg1;
- (id)tsi;
- (id)tsr;
- (bool)validateAuthAsInitiator:(id)arg1 childSA:(id)arg2;
- (id)validateAuthPart1AsResponderCopyErrorForIKESA:(id)arg1;
- (id)validateAuthPart2AsResponderCopyErrorForIKESA:(id)arg1 childSA:(id)arg2;
- (id)validateEAPOnlyAuthentication:(id)arg1;
- (bool)validateFirstAuthPayloadsForInitiator:(id)arg1 childSA:(id)arg2;
- (id)vendorIDs;

@end
