/* Generated by EzioChiu
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@interface NEIKEv2Session : NSObject <NEIKEv2TransportDelegate, NEIPSecSASessionDelegate> {
    id /* block */  _additionalAddressesUpdateBlock;
    NEIKEv2ConfigurationMessage * _assignedConfiguration;
    NSMutableArray * _childSAs;
    id /* block */  _childStateUpdateBlock;
    int (* _clientCallback;
    void * _clientCallbackInfo;
    NSObject<OS_dispatch_queue> * _clientQueue;
    <NEIKEv2ConfigurationDelegate> * _configurationDelegate;
    id /* block */  _configurationUpdateBlock;
    NSMutableDictionary * _databaseLarvalSAs;
    NSMutableDictionary * _databaseSAs;
    NEIPSecSASession * _databaseSession;
    NSObject<OS_dispatch_source> * _dpdTimer;
    bool  _hasContactedConfigurationDelegate;
    NEIKEv2IKESAConfiguration * _ikeConfig;
    NSObject<OS_dispatch_source> * _ikeLifetimeTimer;
    NEIKEv2IKESA * _ikeSA;
    id /* block */  _ikeSocketHandler;
    unsigned short  _initiatorFragmentCount;
    struct NEVirtualInterface_s { } * _ipsecInterface;
    bool  _isAborted;
    bool  _isExpectingConfigBlock;
    bool  _isInvalidated;
    bool  _isListening;
    int  _lastReceivedMessageID;
    int  _lastRequestMessageID;
    id /* block */  _lastRequestReplyHandler;
    NEIKEv2ChildSAConfiguration * _listenChildSAUserConfig;
    bool  _ownsDatabaseSession;
    bool  _ownsIPSecInterface;
    <NEIKEv2PacketDelegate> * _packetDelegate;
    NSMutableArray * _pendingInformationalContexts;
    int  _previousMOBIKEMessageID;
    NEIKEv2Packet * _previousMOBIKERequest;
    id /* block */  _privateNotifyStatusEvent;
    NSObject<OS_dispatch_queue> * _queue;
    NSObject<OS_dispatch_source> * _receiveTimer;
    NSMutableDictionary * _receivedInitiatorFragments;
    NSMutableDictionary * _receivedReplies;
    NSMutableDictionary * _receivedRequests;
    NSMutableDictionary * _receivedResponderFragments;
    id /* block */  _redirectEventBlock;
    unsigned short  _responderFragmentCount;
    NEIKEv2RTT * _rttState;
    NSObject<OS_dispatch_source> * _sendTimer;
    NSMutableDictionary * _sentReplies;
    NSMutableDictionary * _sentRequests;
    id /* block */  _shortDPDEventBlock;
    unsigned long long  _state;
    id /* block */  _stateUpdateBlock;
    id /* block */  _trafficSelectorUpdateBlock;
    unsigned long long  _uniqueIndex;
    id /* block */  _waitingRequestHandler;
}

@property (copy) id /* block */ additionalAddressesUpdateBlock;
@property (retain) NEIKEv2ConfigurationMessage *assignedConfiguration;
@property (retain) NSMutableArray *childSAs;
@property (copy) id /* block */ childStateUpdateBlock;
@property int (*clientCallback;
@property void*clientCallbackInfo;
@property (retain) NSObject<OS_dispatch_queue> *clientQueue;
@property <NEIKEv2ConfigurationDelegate> *configurationDelegate;
@property (copy) id /* block */ configurationUpdateBlock;
@property (retain) NSMutableDictionary *databaseLarvalSAs;
@property (retain) NSMutableDictionary *databaseSAs;
@property (retain) NEIPSecSASession *databaseSession;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSObject<OS_dispatch_source> *dpdTimer;
@property (readonly) NEIKEv2ChildSA *firstChildSA;
@property (nonatomic) bool hasContactedConfigurationDelegate;
@property (readonly) bool hasInterface;
@property (nonatomic, readonly) bool hasOutboundRequestInFlight;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NEIKEv2IKESAConfiguration *ikeConfig;
@property (retain) NSObject<OS_dispatch_source> *ikeLifetimeTimer;
@property (retain) NEIKEv2IKESA *ikeSA;
@property (copy) id /* block */ ikeSocketHandler;
@property unsigned short initiatorFragmentCount;
@property (readonly) unsigned int interfaceIndex;
@property (readonly) NSString *interfaceName;
@property struct NEVirtualInterface_s { }*ipsecInterface;
@property bool isAborted;
@property (nonatomic) bool isExpectingConfigBlock;
@property bool isInvalidated;
@property bool isListening;
@property int lastReceivedMessageID;
@property int lastRequestMessageID;
@property (copy) id /* block */ lastRequestReplyHandler;
@property (retain) NEIKEv2ChildSAConfiguration *listenChildSAUserConfig;
@property (nonatomic) bool ownsDatabaseSession;
@property bool ownsIPSecInterface;
@property <NEIKEv2PacketDelegate> *packetDelegate;
@property (readonly) bool peerAuthenticated;
@property (nonatomic, retain) NSMutableArray *pendingInformationalContexts;
@property int previousMOBIKEMessageID;
@property (retain) NEIKEv2Packet *previousMOBIKERequest;
@property (copy) id /* block */ privateNotifyStatusEvent;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *receiveTimer;
@property (retain) NSMutableDictionary *receivedInitiatorFragments;
@property (retain) NSMutableDictionary *receivedReplies;
@property (retain) NSMutableDictionary *receivedRequests;
@property (retain) NSMutableDictionary *receivedResponderFragments;
@property (copy) id /* block */ redirectEventBlock;
@property unsigned short responderFragmentCount;
@property (retain) NEIKEv2RTT *rttState;
@property (retain) NSObject<OS_dispatch_source> *sendTimer;
@property (retain) NSMutableDictionary *sentReplies;
@property (retain) NSMutableDictionary *sentRequests;
@property (copy) id /* block */ shortDPDEventBlock;
@property unsigned long long state;
@property (copy) id /* block */ stateUpdateBlock;
@property (readonly) Class superclass;
@property (copy) id /* block */ trafficSelectorUpdateBlock;
@property (nonatomic) unsigned long long uniqueIndex;
@property (copy) id /* block */ waitingRequestHandler;

+ (unsigned int)getNewChildSAID;

- (void).cxx_destruct;
- (void)abort;
- (unsigned int)addChild:(id)arg1;
- (void)addEmptyInterface;
- (void)addFirstChild:(id)arg1;
- (id /* block */)additionalAddressesUpdateBlock;
- (id)assignedConfiguration;
- (void)blackholeDetectedSA:(id)arg1;
- (void)cancelDPDTimer;
- (void)cancelSendTimer;
- (id)childSAs;
- (id /* block */)childStateUpdateBlock;
- (int (*)clientCallback;
- (void*)clientCallbackInfo;
- (id)clientQueue;
- (id)configurationDelegate;
- (id /* block */)configurationUpdateBlock;
- (void)connect;
- (id)copyChildWithID:(unsigned int)arg1;
- (id)copyChildWithSPI:(id)arg1;
- (id)copyIPsecInterface;
- (id)copyIPsecInterfaceWithMissingAllowed:(bool)arg1;
- (id)copyReceivedReplyForMessageID:(int)arg1;
- (id)copyReceivedRequestForMessageID:(int)arg1;
- (id)copySAFromDictionary:(id)arg1 forChild:(id)arg2;
- (id)copySAFromDictionary:(id)arg1 forSPI:(id)arg2;
- (id)copySAsToDeleteAndInstallRekeyedChildSA:(id)arg1;
- (id)databaseLarvalSAs;
- (id)databaseSAs;
- (id)databaseSession;
- (void)dealloc;
- (void)deleteSA:(id)arg1;
- (id)description;
- (void)disconnect;
- (id)dpdTimer;
- (void)enqueuePendingInformationalContext:(id)arg1;
- (void)expireSA:(id)arg1;
- (void)finishConfigurationEstablishment;
- (bool)fireWaitingRequestHandlerWithPacket:(id)arg1;
- (id)firstChildSA;
- (void)forceRekeyChild:(unsigned int)arg1;
- (void)forceRekeyIKE;
- (bool)generateSPIForChild:(id)arg1 proposals:(id)arg2;
- (void)handleEAPIKESA:(id)arg1 childSA:(id)arg2 authPacket:(id)arg3 handler:(id /* block */)arg4;
- (bool)hasContactedConfigurationDelegate;
- (bool)hasInterface;
- (bool)hasOutboundRequestInFlight;
- (void)idleTimeoutSA:(id)arg1;
- (id)ikeConfig;
- (id)ikeLifetimeTimer;
- (id)ikeSA;
- (id /* block */)ikeSocketHandler;
- (id)initWithIKEConfig:(id)arg1 configurationDelegate:(id)arg2 queue:(id)arg3 kernelSASessionName:(id)arg4 transport:(id)arg5 packetDelegate:(id)arg6;
- (id)initWithIKEConfig:(id)arg1 configurationDelegate:(id)arg2 queue:(id)arg3 saSession:(id)arg4 shouldCopySASession:(bool)arg5 transport:(id)arg6 packetDelegate:(id)arg7;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s { }*)arg5 ikeSocketHandler:(id /* block */)arg6 kernelSASessionName:(id)arg7 packetDelegate:(id)arg8;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s { }*)arg5 ikeSocketHandler:(id /* block */)arg6 saSession:(id)arg7 packetDelegate:(id)arg8;
- (id)initWithIKEConfig:(id)arg1 firstChildConfig:(id)arg2 sessionConfig:(id)arg3 queue:(id)arg4 ipsecInterface:(struct NEVirtualInterface_s { }*)arg5 ikeSocketHandler:(id /* block */)arg6 saSession:(id)arg7 shouldOwnSASession:(bool)arg8 packetDelegate:(id)arg9 transport:(id)arg10 configurationDelegate:(id)arg11;
- (void)initiateConnect;
- (void)initiateDelete:(bool)arg1 replyCompleteBlock:(id /* block */)arg2;
- (void)initiateDelete:(bool)arg1 sendCompleteBlock:(id /* block */)arg2;
- (bool)initiateDelete:(id /* block */)arg1 sendCompletionHandler:(id /* block */)arg2;
- (void)initiateDeleteChildSA:(id)arg1;
- (bool)initiateDeleteChildSPI:(id)arg1 remoteSPI:(id)arg2;
- (void)initiateInformational:(id)arg1;
- (void)initiateKeepaliveWithRetries:(unsigned int)arg1 retryIntervalInMilliseconds:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(id /* block */)arg4;
- (void)initiateMOBIKEInnerWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(id /* block */)arg4;
- (void)initiateMOBIKEWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 invalidateTransport:(bool)arg3 callbackQueue:(id)arg4 callback:(id /* block */)arg5;
- (void)initiateNewChildSA:(id)arg1;
- (void)initiateNotify:(unsigned long long)arg1 data:(id)arg2;
- (void)initiatePrivateNotifies:(id)arg1 maxRetries:(unsigned int)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 callbackQueue:(id)arg4 callback:(id /* block */)arg5;
- (void)initiateRekeyChildSA:(id)arg1;
- (void)initiateRekeyIKESA;
- (unsigned short)initiatorFragmentCount;
- (bool)innerReceiveDeleteIKESA:(id)arg1;
- (bool)installChildSA:(id)arg1;
- (unsigned int)interfaceIndex;
- (id)interfaceName;
- (void)invalidate;
- (struct NEVirtualInterface_s { }*)ipsecInterface;
- (bool)isAborted;
- (bool)isExpectingConfigBlock;
- (bool)isInvalidated;
- (bool)isListening;
- (int)lastReceivedMessageID;
- (int)lastRequestMessageID;
- (id /* block */)lastRequestReplyHandler;
- (id)listenChildSAUserConfig;
- (bool)migrateAllChildSAs;
- (bool)migrateChildSA:(id)arg1;
- (bool)ownsDatabaseSession;
- (bool)ownsIPSecInterface;
- (id)packetDelegate;
- (bool)peerAuthenticated;
- (id)pendingInformationalContexts;
- (int)previousMOBIKEMessageID;
- (id)previousMOBIKERequest;
- (id /* block */)privateNotifyStatusEvent;
- (id)queue;
- (void)receiveConnection:(id)arg1;
- (void)receiveDeleteChildSA:(id)arg1 packet:(id)arg2;
- (bool)receiveDeleteChildSPI:(id)arg1 remoteSPI:(id)arg2 packet:(id)arg3;
- (void)receiveDeleteIKESA:(id)arg1;
- (void)receiveInformational:(id)arg1;
- (void)receiveMOBIKE:(id)arg1;
- (void)receiveNewChildSA:(id)arg1 packet:(id)arg2;
- (void)receivePacket:(id)arg1;
- (void)receiveRedirect:(id)arg1;
- (void)receiveRekeyChildSA:(id)arg1 packet:(id)arg2;
- (void)receiveRekeyIKESA:(id)arg1;
- (id)receiveTimer;
- (id)receivedInitiatorFragments;
- (id)receivedReplies;
- (id)receivedRequests;
- (id)receivedResponderFragments;
- (id /* block */)redirectEventBlock;
- (void)removeChild:(unsigned int)arg1;
- (void)reportAdditionalAddressesInPacket:(id)arg1;
- (void)reportConfiguration;
- (void)reportCustomPayload:(id)arg1;
- (void)reportError:(int)arg1;
- (void)reportPrivateNotifies:(id)arg1;
- (void)reportPrivateNotifiesInPacket:(id)arg1;
- (void)reportServerAdditionalAddresses:(id)arg1;
- (void)reportServerRedirect:(id)arg1;
- (void)reportShortDPD;
- (void)reportState;
- (void)reportTrafficSelectorsForChildSA:(id)arg1;
- (void)resendPreviousMOBIKEInnerWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(id /* block */)arg4 handler:(id /* block */)arg5;
- (void)resetAll;
- (void)resetChild:(id)arg1;
- (void)resetMessages;
- (unsigned short)responderFragmentCount;
- (void)retryCookieForIKESA:(id)arg1 validated:(bool)arg2 handler:(id /* block */)arg3;
- (void)retryDHForIKESA:(id)arg1 validated:(bool)arg2 handler:(id /* block */)arg3;
- (id)rttState;
- (void)saveFragment:(id)arg1;
- (bool)sendCurrentRequest:(id /* block */)arg1;
- (void)sendKeepaliveWithRetries:(unsigned int)arg1 retryIntervalInMilliseconds:(unsigned long long)arg2 callbackQueue:(id)arg3 callback:(id /* block */)arg4;
- (void)sendMOBIKEWithRetries:(unsigned int)arg1 retryInterval:(unsigned long long)arg2 interfaceName:(id)arg3 invalidateTransport:(bool)arg4 resetEndpoint:(id)arg5 callbackQueue:(id)arg6 callback:(id /* block */)arg7;
- (void)sendPendingInformationalContext;
- (void)sendPrivateNotifies:(id)arg1 maxRetries:(unsigned int)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 callbackQueue:(id)arg4 callback:(id /* block */)arg5;
- (bool)sendReply:(id)arg1 replyHandler:(id /* block */)arg2;
- (bool)sendReplyForMessageID:(int)arg1;
- (int)sendRequest:(id)arg1 isKeepalive:(bool)arg2 retryIntervalInMilliseconds:(unsigned long long)arg3 maxRetries:(unsigned int)arg4 timeoutError:(id)arg5 resend:(bool)arg6 sendMessageID:(int)arg7 sendCompletionHandler:(id /* block */)arg8 replyHandler:(id /* block */)arg9;
- (int)sendRequest:(id)arg1 retry:(bool)arg2 replyHandler:(id /* block */)arg3;
- (int)sendRequest:(id)arg1 retry:(bool)arg2 sendCompletionHandler:(id /* block */)arg3 replyHandler:(id /* block */)arg4;
- (id)sendTimer;
- (id)sentReplies;
- (id)sentRequests;
- (void)setAdditionalAddressesUpdateBlock:(id /* block */)arg1;
- (void)setAssignedConfiguration:(id)arg1;
- (void)setChildSAs:(id)arg1;
- (void)setChildStateUpdateBlock:(id /* block */)arg1;
- (void)setClientCallback:(int (*)arg1;
- (void)setClientCallbackInfo:(void*)arg1;
- (void)setClientQueue:(id)arg1;
- (void)setConfigurationDelegate:(id)arg1;
- (void)setConfigurationUpdateBlock:(id /* block */)arg1;
- (void)setDatabaseLarvalSAs:(id)arg1;
- (void)setDatabaseSAs:(id)arg1;
- (void)setDatabaseSession:(id)arg1;
- (void)setDpdTimer:(id)arg1;
- (void)setHasContactedConfigurationDelegate:(bool)arg1;
- (void)setIKESA:(id)arg1;
- (void)setIkeConfig:(id)arg1;
- (void)setIkeLifetimeTimer:(id)arg1;
- (void)setIkeSA:(id)arg1;
- (void)setIkeSocketHandler:(id /* block */)arg1;
- (void)setInitiatorFragmentCount:(unsigned short)arg1;
- (void)setIpsecInterface:(struct NEVirtualInterface_s { }*)arg1;
- (void)setIsAborted:(bool)arg1;
- (void)setIsExpectingConfigBlock:(bool)arg1;
- (void)setIsInvalidated:(bool)arg1;
- (void)setIsListening:(bool)arg1;
- (void)setLastReceivedMessageID:(int)arg1;
- (void)setLastRequestMessageID:(int)arg1;
- (void)setLastRequestReplyHandler:(id /* block */)arg1;
- (void)setListenChildSAUserConfig:(id)arg1;
- (void)setOwnsDatabaseSession:(bool)arg1;
- (void)setOwnsIPSecInterface:(bool)arg1;
- (void)setPacketDelegate:(id)arg1;
- (void)setPendingInformationalContexts:(id)arg1;
- (void)setPreviousMOBIKEMessageID:(int)arg1;
- (void)setPreviousMOBIKERequest:(id)arg1;
- (void)setPrivateNotifyStatusEvent:(id /* block */)arg1;
- (void)setQueue:(id)arg1;
- (void)setReceiveTimer:(id)arg1;
- (void)setReceivedInitiatorFragments:(id)arg1;
- (void)setReceivedReplies:(id)arg1;
- (void)setReceivedReply:(id)arg1 messageID:(int)arg2;
- (void)setReceivedRequest:(id)arg1 messageID:(int)arg2;
- (void)setReceivedRequests:(id)arg1;
- (void)setReceivedResponderFragments:(id)arg1;
- (void)setRedirectEventBlock:(id /* block */)arg1;
- (void)setResponderFragmentCount:(unsigned short)arg1;
- (void)setRttState:(id)arg1;
- (void)setSendTimer:(id)arg1;
- (void)setSentMOBIKERequest:(id)arg1 messageID:(int)arg2;
- (void)setSentReplies:(id)arg1;
- (void)setSentReply:(id)arg1 messageID:(int)arg2;
- (void)setSentRequest:(id)arg1;
- (void)setSentRequests:(id)arg1;
- (void)setShortDPDEventBlock:(id /* block */)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setStateUpdateBlock:(id /* block */)arg1;
- (void)setTrafficSelectorUpdateBlock:(id /* block */)arg1;
- (void)setUniqueIndex:(unsigned long long)arg1;
- (void)setWaitingRequestHandler:(id /* block */)arg1;
- (id)setupReceivedChildCopyError;
- (void)setupReceivedChildWithHandler:(id /* block */)arg1;
- (id /* block */)shortDPDEventBlock;
- (bool)skipKeepaliveMessage:(id)arg1;
- (void)startDPDTimer;
- (void)startIKELifetimeTimer;
- (unsigned long long)state;
- (id /* block */)stateUpdateBlock;
- (id /* block */)trafficSelectorUpdateBlock;
- (void)unestablishConfiguration;
- (void)uninstallAllChildSAs;
- (void)uninstallChildSA:(id)arg1;
- (void)uninstallOldRekeyedChildSAs:(id)arg1;
- (unsigned long long)uniqueIndex;
- (bool)updateConfiguration:(id)arg1;
- (id /* block */)waitingRequestHandler;

@end
