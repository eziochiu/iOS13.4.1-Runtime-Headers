/* Generated by EzioChiu
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
 */

@interface NEIKEv2IKESAProposal : NSObject <NSCopying> {
    NEIKEv2AuthenticationProtocol * _authenticationProtocol;
    NEIKEv2DHProtocol * _chosenDHProtocol;
    NEIKEv2EncryptionProtocol * _chosenEncryptionProtocol;
    NEIKEv2IntegrityProtocol * _chosenIntegrityProtocol;
    NEIKEv2PRFProtocol * _chosenPRFProtocol;
    NSArray * _dhProtocols;
    NSArray * _eapProtocols;
    NSArray * _encryptionProtocols;
    NSArray * _integrityProtocols;
    unsigned long long  _lifetimeSeconds;
    NSArray * _prfProtocols;
    unsigned char  _proposalNumber;
}

@property (nonatomic, retain) NEIKEv2AuthenticationProtocol *authenticationProtocol;
@property (retain) NEIKEv2DHProtocol *chosenDHProtocol;
@property (retain) NEIKEv2EncryptionProtocol *chosenEncryptionProtocol;
@property (retain) NEIKEv2IntegrityProtocol *chosenIntegrityProtocol;
@property (retain) NEIKEv2PRFProtocol *chosenPRFProtocol;
@property (readonly) NEIKEv2DHProtocol *dhProtocol;
@property (retain) NSArray *dhProtocols;
@property (retain) NSArray *eapProtocols;
@property (readonly) NEIKEv2EncryptionProtocol *encryptionProtocol;
@property (retain) NSArray *encryptionProtocols;
@property (readonly) bool hasEAPMethods;
@property (readonly) NEIKEv2IntegrityProtocol *integrityProtocol;
@property (retain) NSArray *integrityProtocols;
@property unsigned long long lifetimeSeconds;
@property (readonly) NEIKEv2PRFProtocol *prfProtocol;
@property (retain) NSArray *prfProtocols;
@property unsigned char proposalNumber;

- (void).cxx_destruct;
- (id)authenticationProtocol;
- (id)chosenDHProtocol;
- (id)chosenEncryptionProtocol;
- (id)chosenIntegrityProtocol;
- (id)chosenPRFProtocol;
- (id)copyFromRemote:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (id)dhProtocol;
- (id)dhProtocols;
- (id)eapProtocols;
- (id)encryptionProtocol;
- (id)encryptionProtocols;
- (bool)hasEAPMethods;
- (id)init;
- (id)integrityProtocol;
- (id)integrityProtocols;
- (bool)isAValidResponse;
- (unsigned long long)lifetimeSeconds;
- (unsigned long long)lifetimeSecondsBeyondSoftLifetimeForInitiator:(bool)arg1;
- (bool)matchesProposal:(id)arg1;
- (id)prfProtocol;
- (id)prfProtocols;
- (unsigned char)proposalNumber;
- (void)setAuthenticationProtocol:(id)arg1;
- (void)setChosenDHProtocol:(id)arg1;
- (void)setChosenEncryptionProtocol:(id)arg1;
- (void)setChosenIntegrityProtocol:(id)arg1;
- (void)setChosenPRFProtocol:(id)arg1;
- (void)setDhProtocols:(id)arg1;
- (void)setEapProtocols:(id)arg1;
- (void)setEncryptionProtocols:(id)arg1;
- (void)setIntegrityProtocols:(id)arg1;
- (void)setLifetimeSeconds:(unsigned long long)arg1;
- (void)setPrfProtocols:(id)arg1;
- (void)setProposalNumber:(unsigned char)arg1;
- (unsigned long long)softLifetimeSecondsForInitiator:(bool)arg1;

@end
