/* Generated by EzioChiu
   Image: /System/Library/Frameworks/AVKit.framework/AVKit
 */

@interface AVPlayerViewController : UIViewController <AVContentOverlayViewDelegate, AVFullScreenViewControllerDelegate, AVPictureInPictureContentSource, AVPictureInPictureControllerDelegate, AVPlaybackControlsVisibilityControllerDelegate, AVTransitionControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate> {
    AVContentOverlayView * __actualContentOverlayView;
    AVBehaviorStorage * __behaviorStorage;
    NSNumber * __defaultPlaybackRateStorage;
    bool  __hasBegunObservation;
    NSMutableDictionary * __localizedDiscoverabilityTitleForKeyCommandLocalizationKey;
    long long  __numberOfTrackedUserInteractions;
    AVObservationController * __observationController;
    NSMutableDictionary * __targetVideoGravitiesForLayoutClass;
    bool  _allowsPictureInPicturePlayback;
    bool  _canIncludePlaybackControlsWhenInline;
    bool  _canPausePlaybackWhenExitingFullScreen;
    bool  _canShowPictureInPictureButton;
    bool  _canToggleVideoGravityWhenEmbeddedInline;
    NSArray * _customControlItems;
    <AVPlayerViewControllerDelegate> * _delegate;
    bool  _entersFullScreenWhenPlaybackBegins;
    bool  _exitsFullScreenWhenPlaybackEnds;
    id /* block */  _finishPreparingForInteractiveDismissalHandler;
    bool  _hasClientSetVideoGravity;
    bool  _hasPerformedInitialSetup;
    UIHoverGestureRecognizer * _hoverGestureRecognizer;
    id /* block */  _interactiveDismissalCompletionHandler;
    UIPopoverPresentationController * _mediaSelectionPopoverPresentationController;
    NSValue * _overrideLayoutMarginsWhenEmbeddedInline;
    NSString * _overrideParentApplicationDisplayIdentifier;
    unsigned long long  _overrideRouteSharingPolicy;
    NSString * _overrideRoutingContextUID;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _overrideTransformForProminentPlayButton;
    bool  _pictureInPictureActive;
    AVPictureInPictureController * _pictureInPictureController;
    NSDictionary * _pixelBufferAttributes;
    AVPlaybackControlsController * _playbackControlsController;
    bool  _playbackControlsIncludeVolumeControls;
    bool  _playbackControlsShouldControlSystemVolume;
    AVPlaybackControlsVisibilityController * _playbackControlsVisibilityController;
    AVPlayer * _player;
    AVPlayerController * _playerController;
    __AVPlayerLayerView * _playerLayerView;
    bool  _playerShouldAutoplay;
    AVPlayerView * _playerViewControllerView;
    bool  _readyForDisplay;
    bool  _requiresImmediateAssetInspection;
    bool  _requiresLinearPlayback;
    AVSecondScreenConnection * _secondScreenConnection;
    struct CGSize { 
        double width; 
        double height; 
    }  _secondScreenConnectionDisplaySize;
    bool  _shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
    bool  _showsPlaybackControls;
    bool  _showsTimecodes;
    AVTransitionController * _transitionController;
    bool  _updatesNowPlayingInfoCenter;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _videoBounds;
    long long  _videoGravity;
    AVPlayerControllerVolumeAnimator * _volumeAnimator;
    bool  _wasInitializedUsingWebKitSPI;
}

@property (nonatomic, readonly) AVContentOverlayView *_actualContentOverlayView;
@property (nonatomic, readonly) AVBehaviorStorage *_behaviorStorage;
@property (nonatomic, retain) NSNumber *_defaultPlaybackRateStorage;
@property (nonatomic) bool _hasBegunObservation;
@property (setter=_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:, nonatomic) bool _inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
@property (nonatomic, readonly) NSMutableDictionary *_localizedDiscoverabilityTitleForKeyCommandLocalizationKey;
@property (setter=_setNumberOfTrackedUserInteractions:, nonatomic) long long _numberOfTrackedUserInteractions;
@property (nonatomic, readonly) AVObservationController *_observationController;
@property (nonatomic, readonly) NSMutableDictionary *_targetVideoGravitiesForLayoutClass;
@property (nonatomic, readonly) AVTransitionController *_transitionController;
@property (nonatomic, readonly) long long activeContentTransitionType;
@property (nonatomic) bool allowsEnteringFullScreen;
@property (nonatomic) bool allowsPictureInPicturePlayback;
@property (nonatomic, readonly) bool avkit_isVisible;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } avkit_videoRectInWindow;
@property (nonatomic, readonly) UIWindow *avkit_window;
@property (nonatomic, readonly) NSArray *behaviors;
@property (nonatomic, readonly) bool canControlPlayback;
@property (nonatomic) bool canHidePlaybackControls;
@property (nonatomic) bool canIncludePlaybackControlsWhenInline;
@property (nonatomic) bool canPausePlaybackWhenExitingFullScreen;
@property (nonatomic) bool canShowPictureInPictureButton;
@property (nonatomic) bool canToggleVideoGravityWhenEmbeddedInline;
@property (nonatomic, readonly) UIView *contentOverlayView;
@property (getter=isContentTransitionInteractive, nonatomic, readonly) bool contentTransitionInteractive;
@property (nonatomic) <AVPlayerViewControllerContentTransitioning_NewsOnly> *contentTransitioningDelegate;
@property (nonatomic, readonly) UIView *contentTransitioningOverlayView;
@property (nonatomic, readonly) AVPlayer *contentTransitioningPlayer;
@property (nonatomic, readonly) AVPlayerViewControllerContentView *contentView;
@property (nonatomic, retain) UIView *customContentTransitioningInfoPanel;
@property (nonatomic, copy) NSArray *customControlItems;
@property (nonatomic, readonly) AVPlayerViewControllerCustomControlsView *customControlsView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double defaultPlaybackRate;
@property (nonatomic) <AVPlayerViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool entersFullScreenWhenPlaybackBegins;
@property (nonatomic) bool entersFullScreenWhenTapped;
@property (nonatomic) bool exitsFullScreenWhenPlaybackEnds;
@property (nonatomic, copy) id /* block */ finishPreparingForInteractiveDismissalHandler;
@property (nonatomic, readonly) UIViewController *fullScreenViewController;
@property (nonatomic, readonly) AVFullScreenViewController *fullScreenViewController;
@property (nonatomic, readonly) bool hasActiveTransition;
@property (nonatomic, readonly) bool hasCustomPlaybackControls;
@property (nonatomic) bool hasPerformedInitialSetup;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIHoverGestureRecognizer *hoverGestureRecognizer;
@property (nonatomic, readonly) UIView *iAdPrerollView;
@property (nonatomic, copy) id /* block */ interactiveDismissalCompletionHandler;
@property (nonatomic, retain) NSValue *overrideLayoutMarginsWhenEmbeddedInline;
@property (nonatomic, copy) NSString *overrideParentApplicationDisplayIdentifier;
@property (nonatomic) unsigned long long overrideRouteSharingPolicy;
@property (nonatomic, copy) NSString *overrideRoutingContextUID;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } overrideTransformForProminentPlayButton;
@property (getter=isPictureInPictureActive, nonatomic, readonly) bool pictureInPictureActive;
@property (getter=isPictureInPicturePossible, nonatomic, readonly) bool pictureInPicturePossible;
@property (getter=isPictureInPictureSuspended, nonatomic, readonly) bool pictureInPictureSuspended;
@property (nonatomic, readonly) bool pictureInPictureWasStartedWhenEnteringBackground;
@property (nonatomic, copy) NSDictionary *pixelBufferAttributes;
@property (nonatomic, copy) id /* block */ playButtonHandlerForLazyPlayerLoading;
@property (nonatomic, readonly) AVPlaybackControlsController *playbackControlsController;
@property (nonatomic) bool playbackControlsIncludeDisplayModeControls;
@property (nonatomic) bool playbackControlsIncludeTransportControls;
@property (nonatomic) bool playbackControlsIncludeVolumeControls;
@property (nonatomic) bool playbackControlsShouldControlSystemVolume;
@property (nonatomic, readonly) AVPlaybackControlsVisibilityController *playbackControlsVisibilityController;
@property (nonatomic, retain) AVPlayer *player;
@property (nonatomic, retain) AVPlayerController *playerController;
@property (nonatomic, retain) __AVPlayerLayerView *playerLayerView;
@property (nonatomic) long long preferredUnobscuredArea;
@property (nonatomic, readonly) AVPresentationContext *presentationContext;
@property (getter=isPresentedFullScreen, nonatomic, readonly) bool presentedFullScreen;
@property (getter=isPresentingFullScreenFromInline, nonatomic, readonly) bool presentingFullScreenFromInline;
@property (getter=isReadyForDisplay, nonatomic) bool readyForDisplay;
@property (nonatomic) bool requiresImmediateAssetInspection;
@property (nonatomic) bool requiresLinearPlayback;
@property (nonatomic) struct CGSize { double x1; double x2; } secondScreenConnectionDisplaySize;
@property (nonatomic) bool shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
@property (nonatomic) bool showsExitFullScreenButton;
@property (nonatomic) bool showsMinimalPlaybackControlsWhenEmbeddedInline;
@property (nonatomic) bool showsPlaybackControls;
@property (nonatomic) bool showsTimecodes;
@property (getter=isStartNextContentTransitionButtonEnabled, nonatomic) bool startNextContentTransitionButtonEnabled;
@property (getter=isStartPreviousContentTransitionButtonEnabled, nonatomic) bool startPreviousContentTransitionButtonEnabled;
@property (readonly) Class superclass;
@property (nonatomic) bool updatesNowPlayingInfoCenter;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } videoBounds;
@property (nonatomic, readonly) double videoDisplayScale;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } videoDisplaySize;
@property (nonatomic, copy) NSString *videoGravity;
@property (nonatomic, readonly) UIViewController *viewControllerForFullScreenPresentation;
@property (nonatomic, retain) AVPlayerControllerVolumeAnimator *volumeAnimator;
@property (nonatomic) bool volumeControlsCanShowSlider;
@property (nonatomic) bool wasInitializedUsingWebKitSPI;

// Image: /System/Library/Frameworks/AVKit.framework/AVKit

+ (id)keyPathsForValuesAffectingPictureInPictureActive;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;
+ (id)keyPathsForValuesAffectingPictureInPictureSuspended;
+ (id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
+ (id)keyPathsForValuesAffectingPixelBufferAttributes;
+ (id)keyPathsForValuesAffectingVideoDisplaySize;
+ (id)keyPathsForValuesAffectingVideoGravity;

- (void).cxx_destruct;
- (id)_activeViewControllerForContentView;
- (id)_actualContentOverlayView;
- (void)_addObservers;
- (id)_avkitPreferredTransitioningDelegate;
- (void)_beginTrackingUserInteraction;
- (id)_behaviorStorage;
- (bool)_canEnterFullScreen;
- (void)_contentViewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)_defaultPlaybackRateStorage;
- (bool)_delegateRespondsTo:(SEL)arg1;
- (void)_endTrackingUserInteraction;
- (void)_ensureBehaviorStorage;
- (void)_handleDoubleDoubleTapGesture:(id)arg1;
- (void)_handleDoubleTapGesture:(id)arg1;
- (void)_handleExitFullScreenKeyCommand:(id)arg1;
- (void)_handleFastForwardKeyPressedCommand:(id)arg1;
- (void)_handleFastForwardKeyReleasedCommand:(id)arg1;
- (void)_handleGoToBeginningKeyCommand:(id)arg1;
- (void)_handleHoverGestureRecognizer:(id)arg1;
- (void)_handlePlayPauseKeyCommand:(id)arg1;
- (void)_handleRewindKeyPressedCommand:(id)arg1;
- (void)_handleRewindKeyReleasedCommand:(id)arg1;
- (void)_handleShowNextFrameKeyCommand:(id)arg1;
- (void)_handleShowPreviousFrameKeyCommand:(id)arg1;
- (void)_handleSingleTapGesture:(id)arg1;
- (void)_handleSkipAhead15SecondsKeyCommand:(id)arg1;
- (void)_handleSkipBack15SecondsKeyCommand:(id)arg1;
- (void)_handleUserInteractionObservationRecognizer:(id)arg1;
- (void)_handleVolumeDownKeyPressedCommand:(id)arg1;
- (void)_handleVolumeDownKeyReleasedCommand:(id)arg1;
- (void)_handleVolumeUpKeyPressedCommand:(id)arg1;
- (void)_handleVolumeUpKeyReleasedCommand:(id)arg1;
- (bool)_hasBegunObservation;
- (bool)_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
- (bool)_isAudioOnlyContent;
- (bool)_isDescendantOfRootViewController;
- (bool)_isTrackingUserInteraction;
- (bool)_isTrackingUserInteractionWithInteractiveView;
- (bool)_isTransitioningToOrFromFullScreen;
- (bool)_isUnsupportedContent;
- (void)_loadObservationControllerIfNeeded;
- (id)_localizedDiscoverabilityTitleForKeyCommandLocalizationKey;
- (void)_mediaSelectionDoneButtonTapped:(id)arg1;
- (bool)_modalPresentationStyleIsFullScreen;
- (id)_newsWidgetPlayerBehaviorContext;
- (id)_newsWidgetPlayerLegacyBehavior;
- (void)_notifyOfMetricsCollectionEvent:(long long)arg1;
- (long long)_numberOfTrackedUserInteractions;
- (id)_observationController;
- (long long)_preferredModalPresentationStyle;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (bool)_requiresCustomPresentationController;
- (void)_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:(bool)arg1;
- (void)_setNumberOfTrackedUserInteractions:(long long)arg1;
- (bool)_shouldShowPictureInPictureButton;
- (id)_targetVideoGravitiesForLayoutClass;
- (void)_togglePictureInPicture;
- (id)_transitionController;
- (id)_transitionControllerIfLoaded;
- (void)_transitionFromFullScreenAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_transitionFromFullScreenAnimated:(bool)arg1 interactive:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_transitionFromFullScreenWithReason:(long long)arg1 animated:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_transitionToFullScreenAnimated:(bool)arg1 interactive:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateAudioOnlyIndicatorView;
- (void)_updateContentOverlayViewSuperview;
- (void)_updateExternalPlaybackIndicatorView;
- (void)_updatePlaybackControlsController;
- (void)_updateUnsupportedContentIndicatorView;
- (long long)activeContentTransitionType;
- (void)activeContentViewDidChange;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)addBehavior:(id)arg1;
- (bool)allowsEnteringFullScreen;
- (bool)allowsPictureInPicturePlayback;
- (bool)avkit_isEffectivelyFullScreen;
- (bool)avkit_isVisible;
- (id)avkit_makePlayerControllerIfNeeded:(id)arg1;
- (id)avkit_pictureInPictureViewController;
- (void)avkit_startRoutingVideoToPictureInPictureViewController:(id)arg1;
- (void)avkit_stopRoutingVideoToPictureInPictureViewController:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })avkit_videoRectInWindow;
- (id)avkit_window;
- (id)behaviors;
- (bool)canBecomeFirstResponder;
- (bool)canControlPlayback;
- (bool)canHidePlaybackControls;
- (bool)canIncludePlaybackControlsWhenInline;
- (bool)canPausePlaybackWhenExitingFullScreen;
- (bool)canShowPictureInPictureButton;
- (bool)canToggleVideoGravityWhenEmbeddedInline;
- (id)contentOverlayView;
- (void)contentOverlayViewDidAddOrRemoveSubview:(id)arg1;
- (id)contentTransitioningDelegate;
- (id)contentTransitioningOverlayView;
- (id)contentTransitioningPlayer;
- (id)contentView;
- (id)customContentTransitioningInfoPanel;
- (id)customControlItems;
- (id)customControlsView;
- (void)dealloc;
- (double)defaultPlaybackRate;
- (id)delegate;
- (void)didMoveToParentViewController:(id)arg1;
- (void)doneButtonTapped:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)enterAutoplayPhase;
- (void)enterFullScreenAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)enterFullScreenWithCompletion:(id /* block */)arg1;
- (bool)entersFullScreenWhenPlaybackBegins;
- (bool)entersFullScreenWhenTapped;
- (void)exitAutoplayPhase;
- (void)exitFullScreenAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)exitFullScreenWithCompletion:(id /* block */)arg1;
- (bool)exitsFullScreenWhenPlaybackEnds;
- (id /* block */)finishPreparingForInteractiveDismissalHandler;
- (void)flashAutoplayControls;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
- (void)fullScreenButtonTapped:(id)arg1;
- (id)fullScreenViewController;
- (void)fullScreenViewController:(id)arg1 viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg2 coordinator:(id)arg3;
- (void)fullScreenViewControllerWillBeginFullScreenPresentation:(id)arg1;
- (void)fullScreenViewControllerWillEndFullScreenPresentation:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)hasActiveTransition;
- (bool)hasCustomPlaybackControls;
- (bool)hasPerformedInitialSetup;
- (id)hoverGestureRecognizer;
- (id)iAdPrerollView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithPlayerLayerView:(id)arg1;
- (id)interactiveContentOverlayView;
- (id /* block */)interactiveDismissalCompletionHandler;
- (bool)isContentTransitionInteractive;
- (bool)isPictureInPictureActive;
- (bool)isPictureInPictureActive;
- (bool)isPictureInPicturePossible;
- (bool)isPictureInPictureSuspended;
- (bool)isPresentedFullScreen;
- (bool)isPresentingFullScreenFromInline;
- (bool)isReadyForDisplay;
- (bool)isStartNextContentTransitionButtonEnabled;
- (bool)isStartPreviousContentTransitionButtonEnabled;
- (id)keyCommandResponderForFullScreenViewController:(id)arg1;
- (id)keyCommands;
- (void)loadView;
- (void)mediaSelectionButtonTapped:(id)arg1;
- (bool)modalPresentationCapturesStatusBarAppearance;
- (id)overrideLayoutMarginsWhenEmbeddedInline;
- (id)overrideParentApplicationDisplayIdentifier;
- (unsigned long long)overrideRouteSharingPolicy;
- (id)overrideRoutingContextUID;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })overrideTransformForProminentPlayButton;
- (void)performInitialSetup;
- (void)performInitialSetupIfNeededAndPossible;
- (void)pictureInPictureButtonTapped:(id)arg1;
- (void)pictureInPictureController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)pictureInPictureController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)arg2;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)arg1;
- (bool)pictureInPictureWasStartedWhenEnteringBackground;
- (id)pixelBufferAttributes;
- (id /* block */)playButtonHandlerForLazyPlayerLoading;
- (id)playbackContainerViewForFullScreenViewController:(id)arg1;
- (id)playbackControlsController;
- (bool)playbackControlsIncludeDisplayModeControls;
- (bool)playbackControlsIncludeTransportControls;
- (bool)playbackControlsIncludeVolumeControls;
- (bool)playbackControlsIncludeVolumeControlsControls;
- (bool)playbackControlsShouldControlSystemVolume;
- (id)playbackControlsVisibilityController;
- (void)playbackControlsVisibilityController:(id)arg1 animateAlongsideVisibilityAnimationsWithAnimationCoordinator:(id)arg2 appearingViews:(id)arg3 disappearingViews:(id)arg4;
- (void)playbackControlsVisibilityController:(id)arg1 updateStatusBarAppearanceUsingAnimator:(id)arg2;
- (id)player;
- (id)playerController;
- (id)playerLayerView;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (long long)preferredStatusBarStyle;
- (long long)preferredStatusStyleForFullScreenViewController:(id)arg1;
- (long long)preferredUnobscuredArea;
- (long long)preferredWhitePointAdaptivityStyle;
- (bool)prefersHomeIndicatorAutoHidden;
- (bool)prefersStatusBarHidden;
- (bool)prefersStatusBarHiddenForFullScreenViewController:(id)arg1;
- (void)prepareForFinishingInteractiveTransition:(id /* block */)arg1;
- (void)prepareForPopoverPresentation:(id)arg1;
- (id)presentationContext;
- (void)removeBehavior:(id)arg1;
- (bool)requiresImmediateAssetInspection;
- (bool)requiresLinearPlayback;
- (struct CGSize { double x1; double x2; })secondScreenConnectionDisplaySize;
- (void)setAllowsEnteringFullScreen:(bool)arg1;
- (void)setAllowsPictureInPicturePlayback:(bool)arg1;
- (void)setCanHidePlaybackControls:(bool)arg1;
- (void)setCanIncludePlaybackControlsWhenInline:(bool)arg1;
- (void)setCanPausePlaybackWhenExitingFullScreen:(bool)arg1;
- (void)setCanShowPictureInPictureButton:(bool)arg1;
- (void)setCanToggleVideoGravityWhenEmbeddedInline:(bool)arg1;
- (void)setContentTransitioningDelegate:(id)arg1;
- (void)setCustomContentTransitioningInfoPanel:(id)arg1;
- (void)setCustomControlItems:(id)arg1;
- (void)setDefaultPlaybackRate:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEntersFullScreenWhenPlaybackBegins:(bool)arg1;
- (void)setEntersFullScreenWhenTapped:(bool)arg1;
- (void)setExitsFullScreenWhenPlaybackEnds:(bool)arg1;
- (void)setFinishPreparingForInteractiveDismissalHandler:(id /* block */)arg1;
- (void)setHasPerformedInitialSetup:(bool)arg1;
- (void)setHoverGestureRecognizer:(id)arg1;
- (void)setInteractiveDismissalCompletionHandler:(id /* block */)arg1;
- (void)setOverrideLayoutMarginsWhenEmbeddedInline:(id)arg1;
- (void)setOverrideParentApplicationDisplayIdentifier:(id)arg1;
- (void)setOverrideRouteSharingPolicy:(unsigned long long)arg1;
- (void)setOverrideRoutingContextUID:(id)arg1;
- (void)setOverrideTransformForProminentPlayButton:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPixelBufferAttributes:(id)arg1;
- (void)setPlayButtonHandlerForLazyPlayerLoading:(id /* block */)arg1;
- (void)setPlaybackControlsIncludeDisplayModeControls:(bool)arg1;
- (void)setPlaybackControlsIncludeTransportControls:(bool)arg1;
- (void)setPlaybackControlsIncludeVolumeControls:(bool)arg1;
- (void)setPlaybackControlsShouldControlSystemVolume:(bool)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerController:(id)arg1;
- (void)setPlayerLayerView:(id)arg1;
- (void)setPreferredUnobscuredArea:(long long)arg1;
- (void)setReadyForDisplay:(bool)arg1;
- (void)setRequiresImmediateAssetInspection:(bool)arg1;
- (void)setRequiresLinearPlayback:(bool)arg1;
- (void)setSecondScreenConnectionDisplaySize:(struct CGSize { double x1; double x2; })arg1;
- (void)setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:(bool)arg1;
- (void)setShowsExitFullScreenButton:(bool)arg1;
- (void)setShowsMinimalPlaybackControlsWhenEmbeddedInline:(bool)arg1;
- (void)setShowsPlaybackControls:(bool)arg1;
- (void)setShowsTimecodes:(bool)arg1;
- (void)setStartNextContentTransitionButtonEnabled:(bool)arg1;
- (void)setStartPreviousContentTransitionButtonEnabled:(bool)arg1;
- (void)setUpdatesNowPlayingInfoCenter:(bool)arg1;
- (void)setVideoBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setVideoGravity:(id)arg1;
- (void)setVideoGravity:(id)arg1 forLayoutClass:(unsigned long long)arg2;
- (void)setVideoGravityForTransitioningContent:(id)arg1;
- (void)setView:(id)arg1;
- (void)setVolumeAnimator:(id)arg1;
- (void)setVolumeControlsCanShowSlider:(bool)arg1;
- (void)setWasInitializedUsingWebKitSPI:(bool)arg1;
- (void)setWebKitOverrideRouteSharingPolicy:(unsigned long long)arg1 routingContextUID:(id)arg2;
- (void)set_defaultPlaybackRateStorage:(id)arg1;
- (void)set_hasBegunObservation:(bool)arg1;
- (bool)shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
- (void)showFullScreenPresentationFromView:(id)arg1 completion:(id /* block */)arg2;
- (bool)showsExitFullScreenButton;
- (bool)showsMinimalPlaybackControlsWhenEmbeddedInline;
- (bool)showsPlaybackControls;
- (bool)showsTimecodes;
- (void)startContentTransition:(long long)arg1;
- (void)startPictureInPicture;
- (void)stopPictureInPicture;
- (void)toggleMuted:(id)arg1;
- (void)togglePlayback:(id)arg1;
- (void)transitionController:(id)arg1 animationProgressDidChange:(float)arg2;
- (bool)transitionController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;
- (void)transitionController:(id)arg1 prepareForFinishingInteractiveTransition:(id /* block */)arg2;
- (id)transitionController:(id)arg1 targetViewForDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 transitionWillComplete:(bool)arg2;
- (void)transitionController:(id)arg1 willBeginDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 willBeginPresentingViewController:(id)arg2;
- (id)transitionControllerBackgroundViewBackgroundColor:(id)arg1;
- (void)transitionControllerBeginInteractiveDismissalTransition:(id)arg1;
- (void)transitionControllerBeginInteractivePresentationTransition:(id)arg1;
- (bool)transitionControllerCanBeginInteractiveDismissalTransition:(id)arg1;
- (bool)transitionControllerCanBeginInteractivePresentationTransition:(id)arg1;
- (id)transitionControllerPresentedViewBackgroundColor:(id)arg1;
- (id)transitioningDelegate;
- (void)updateVideoBounds;
- (bool)updatesNowPlayingInfoCenter;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })videoBounds;
- (double)videoDisplayScale;
- (struct CGSize { double x1; double x2; })videoDisplaySize;
- (id)videoGravity;
- (void)videoGravityButtonTapped:(id)arg1;
- (id)viewControllerForFullScreenPresentation;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (id)viewForFullScreenViewController:(id)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)volumeAnimator;
- (bool)volumeControlsCanShowSlider;
- (bool)wasInitializedUsingWebKitSPI;

// Image: /System/Library/Frameworks/iAd.framework/iAd

+ (void)preparePrerollAds;

- (void)cancelPreroll;
- (void)playPrerollAdWithCompletionHandler:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI

- (bool)siriui_shouldHideStatusBar;
- (bool)siriui_shouldRotateToLandscape;

@end
