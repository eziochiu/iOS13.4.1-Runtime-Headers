/* Generated by EzioChiu
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHImportDeviceSource : PHImportSource <ICCameraDeviceDelegate> {
    NSMutableDictionary * _assetByCameraFile;
    NSObject<OS_dispatch_queue> * _assetByCameraFileAccess;
    NSObject<OS_dispatch_queue> * _assetDataRequestQueue;
    NSMapTable * _assetDataRequestsByCameraItem;
    NSMutableArray * _assetMetadataRequests;
    NSMutableArray * _assetThumbnailHighPriorityRequests;
    NSMutableArray * _assetThumbnailRequests;
    NSArray * _avchdAssets;
    ICCameraDevice * _camera;
    NSObject<OS_dispatch_queue> * _deleteEjectQueue;
    NSMutableArray * _deleteJobs;
    NSProgress * _deleteProgress;
    bool  _ejectAfterDelete;
    double  _idleTimeout;
    NSObject<OS_dispatch_source> * _idleTimer;
    bool  _isEjecting;
    ICCameraDeviceRemovedItemsCoalescer * _removalCoalescer;
    NSMutableSet * _removedCameraFiles;
    NSObject<OS_dispatch_queue> * _serialHackQueue;
    NSObject<OS_dispatch_queue> * _timeoutSerializer;
    NSDate * _timeoutStart;
    bool  _waitingForAssetMetadataRequest;
    bool  _waitingForAssetThumbnailRequest;
}

@property (nonatomic, retain) NSMutableDictionary *assetByCameraFile;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *assetByCameraFileAccess;
@property (nonatomic, retain) NSArray *avchdAssets;
@property (retain) ICCameraDevice *camera;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *deleteEjectQueue;
@property (nonatomic, retain) NSMutableArray *deleteJobs;
@property (nonatomic, retain) NSProgress *deleteProgress;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool ejectAfterDelete;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isEjecting;
@property (nonatomic, retain) ICCameraDeviceRemovedItemsCoalescer *removalCoalescer;
@property (nonatomic, retain) NSMutableSet *removedCameraFiles;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *serialHackQueue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)assetByCameraFile;
- (id)assetByCameraFileAccess;
- (id)assetsByProcessingItem:(id)arg1;
- (id)avchdAssets;
- (void)beginWork;
- (id)camera;
- (void)cameraDevice:(id)arg1 didAddItems:(id)arg2;
- (void)cameraDevice:(id)arg1 didReceiveMetadataForItem:(id)arg2;
- (void)cameraDevice:(id)arg1 didReceiveThumbnailForItem:(id)arg2;
- (void)cameraDevice:(id)arg1 didRemoveItems:(id)arg2;
- (void)cameraDeviceDidChangeCapability:(id)arg1;
- (id)cameraFilesForAssets:(id)arg1;
- (bool)canAutolaunch;
- (bool)canDeleteContent;
- (bool)canReference;
- (bool)canUseCachedThumbnailForRequest:(id)arg1;
- (void)cancelAssetLoading;
- (id)deleteEjectQueue;
- (id)deleteImportAssets:(id)arg1 isConfirmed:(bool)arg2 isCancelable:(bool)arg3 atEnd:(id /* block */)arg4;
- (id)deleteJobs;
- (id)deleteProgress;
- (void)device:(id)arg1 didCloseSessionWithError:(id)arg2;
- (void)device:(id)arg1 didEncounterError:(id)arg2;
- (void)device:(id)arg1 didOpenSessionWithError:(id)arg2;
- (void)device:(id)arg1 didReceiveStatusInformation:(id)arg2;
- (void)deviceDidBecomeReady:(id)arg1;
- (void)deviceFinishedEnumeratingItems:(id)arg1;
- (void)deviceTimeoutHandler;
- (void)didRemoveDevice:(id)arg1;
- (void)dispatchAssetDataRequestAsync:(id)arg1 usingBlock:(id /* block */)arg2;
- (void)eject;
- (bool)ejectAfterDelete;
- (void)endWork;
- (void)fetchDataUsingRequest:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)finishMetadataForRequest:(id)arg1 importAsset:(id)arg2 error:(id)arg3 atEnd:(id /* block */)arg4;
- (struct CGImage { }*)icon;
- (id)importAssetForCameraFile:(id)arg1 create:(bool)arg2;
- (id)initWithDevice:(id)arg1;
- (bool)isAppleDevice;
- (bool)isAvailable;
- (bool)isConnectedDevice;
- (bool)isEjecting;
- (id)name;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)path;
- (id)productKind;
- (id)removalCoalescer;
- (void)removeAssetForCameraFile:(id)arg1;
- (id)removedCameraFiles;
- (void)sendNextRequestOfType:(unsigned char)arg1;
- (id)serialHackQueue;
- (void)setAssetByCameraFile:(id)arg1;
- (void)setAssetByCameraFileAccess:(id)arg1;
- (void)setAvchdAssets:(id)arg1;
- (void)setCamera:(id)arg1;
- (void)setDeleteEjectQueue:(id)arg1;
- (void)setDeleteJobs:(id)arg1;
- (void)setDeleteProgress:(id)arg1;
- (void)setEjectAfterDelete:(bool)arg1;
- (void)setIsEjecting:(bool)arg1;
- (void)setRemovalCoalescer:(id)arg1;
- (void)setRemovedCameraFiles:(id)arg1;
- (void)setSerialHackQueue:(id)arg1;
- (void)setupDeviceTimeoutHandler;
- (id)uuid;
- (id)volumePath;

@end
