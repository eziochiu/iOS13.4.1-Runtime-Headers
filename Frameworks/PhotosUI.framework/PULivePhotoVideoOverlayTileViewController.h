/* Generated by EzioChiu
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PULivePhotoVideoOverlayTileViewController : PUTileViewController <ISChangeObserver, PHLivePhotoViewDelegate, PUBrowsingViewModelChangeObserver, PXChangeObserver> {
    PUBrowsingViewModel * _browsingViewModel;
    UIView * _containerView;
    <PULivePhotoVideoOverlayTileViewControllerDelegate> * _delegate;
    UIImpactFeedbackGenerator * _feedbackGenerator;
    PXImageLayerModulator * _imageLayerModulator;
    PXImageModulationManager * _imageModulationManager;
    bool  _isPresentedForSecondScreen;
    PHLivePhotoView * _livePhotoView;
    PUMergedLivePhotosVideo * _mergedVideo;
    PUOneUpMergedVideoProvider * _mergedVideoProvider;
    PUModelTileTransform * _modelTileTransform;
    PUAssetReference * _playbackAssetReference;
    NSArray * _playbackGestureRecognizers;
    ISWrappedAVPlayer * _videoPlayer;
    id  _videoPlayerTimeObserver;
    bool  _willEndCurrentPlayback;
}

@property (nonatomic, retain) PUBrowsingViewModel *browsingViewModel;
@property (nonatomic, readonly) UIView *containerView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PULivePhotoVideoOverlayTileViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIImpactFeedbackGenerator *feedbackGenerator;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PXImageLayerModulator *imageLayerModulator;
@property (nonatomic, retain) PXImageModulationManager *imageModulationManager;
@property (nonatomic) bool isPresentedForSecondScreen;
@property (nonatomic, readonly) PHLivePhotoView *livePhotoView;
@property (nonatomic, readonly) PUMergedLivePhotosVideo *mergedVideo;
@property (nonatomic, retain) PUOneUpMergedVideoProvider *mergedVideoProvider;
@property (nonatomic, retain) PUModelTileTransform *modelTileTransform;
@property (nonatomic, retain) PUAssetReference *playbackAssetReference;
@property (nonatomic, readonly) NSArray *playbackGestureRecognizers;
@property (readonly) Class superclass;
@property (nonatomic, retain) ISWrappedAVPlayer *videoPlayer;
@property (nonatomic, retain) id videoPlayerTimeObserver;
@property (nonatomic) bool willEndCurrentPlayback;

- (void).cxx_destruct;
- (void)_updateImageLayerModulator;
- (void)_updateImageLayerModulatorInput;
- (void)_updateLivePhotoViewFrame;
- (void)_updateLivePhotoViewPhoto;
- (void)_updateMergedVideo;
- (void)_updatePlaybackEnabled;
- (void)_videoCurrentTimeDidChange:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)browsingViewModel;
- (id)containerView;
- (void)dealloc;
- (id)delegate;
- (id)feedbackGenerator;
- (id)gestureRecognizers;
- (id)imageLayerModulator;
- (id)imageModulationManager;
- (bool)isPresentedForSecondScreen;
- (id)livePhotoView;
- (void)livePhotoView:(id)arg1 didEndPlaybackWithStyle:(long long)arg2;
- (void)livePhotoView:(id)arg1 willBeginPlaybackWithStyle:(long long)arg2;
- (id)loadView;
- (id)mergedVideo;
- (id)mergedVideoProvider;
- (id)modelTileTransform;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)playbackAssetReference;
- (id)playbackGestureRecognizers;
- (void)setBrowsingViewModel:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setImageLayerModulator:(id)arg1;
- (void)setImageModulationManager:(id)arg1;
- (void)setIsPresentedForSecondScreen:(bool)arg1;
- (void)setMergedVideo:(id)arg1;
- (void)setMergedVideoProvider:(id)arg1;
- (void)setModelTileTransform:(id)arg1;
- (void)setPlaybackAssetReference:(id)arg1;
- (void)setVideoPlayer:(id)arg1;
- (void)setVideoPlayerTimeObserver:(id)arg1;
- (void)setWillEndCurrentPlayback:(bool)arg1;
- (id)videoPlayer;
- (id)videoPlayerTimeObserver;
- (void)viewModel:(id)arg1 didChange:(id)arg2;
- (bool)willEndCurrentPlayback;

@end
