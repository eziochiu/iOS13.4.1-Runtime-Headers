/* Generated by EzioChiu
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface AR2D3DSkeletonLiftingData : NSObject <NSCopying, NSSecureCoding> {
    struct array<float, 32> { 
        float __elems_[32]; 
    }  _multiArray;
    struct vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >="__value_"^ {}  _rawJointsUsedForLifting;
    struct vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >="__value_"^ {}  _rotatedJointsUsedForLifting;
    long long  _rotationNeeded;
}

@property (nonatomic, readonly) unsigned long long jointCount;
@property (nonatomic, readonly) const /* Warning: Unrecognized filer type: '' using 'void*' */ void**joints;
@property (nonatomic, readonly) const float*liftingData3D;
@property (nonatomic, readonly) unsigned long long liftingData3DElementCount;

+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_prepareLiftingInput:(const struct Human { struct map<int, float __attribute__((ext_vector_type(2))), std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, float __attribute__((ext_vector_type(2)))> > >={__tree<std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))>, std::__1::__map_value_compare<int, std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *> {} x1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *> {} x2; }*)arg1 jointTrackingState:(const struct array<unsigned char, 17> { unsigned char x1[17]; }*)arg2 imageSize:(struct CGSize { double x1; double x2; })arg3 pMultiArray:(float*)arg4;
- (void)_rotateAndUndoCroppingFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithHumanForLifting:(const struct Human { struct map<int, float __attribute__((ext_vector_type(2))), std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, float __attribute__((ext_vector_type(2)))> > >={__tree<std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))>, std::__1::__map_value_compare<int, std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *> {} x1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, float __attribute__((ext_vector_type(2)))>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *> {} x2; }*)arg1 imageSize:(struct CGSize { double x1; double x2; })arg2 rotation:(long long)arg3 croppedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (id)initWithJoints:(const /* Warning: Unrecognized filer type: '1' using 'void*' */ void**)arg1 numberOfJoints:(unsigned long long)arg2 rotation:(long long)arg3 croppedRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 liftingData3D:(const float*)arg5 liftingData3DElementCount:(unsigned long long)arg6;
- (bool)isEqual:(id)arg1;
- (unsigned long long)jointCount;
- (const /* Warning: Unrecognized filer type: '1' using 'void*' */ void**)joints;
- (const float*)liftingData3D;
- (unsigned long long)liftingData3DElementCount;

@end
