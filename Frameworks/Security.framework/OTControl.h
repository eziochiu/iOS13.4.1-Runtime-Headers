/* Generated by EzioChiu
   Image: /System/Library/Frameworks/Security.framework/Security
 */

@interface OTControl : NSObject {
    NSXPCConnection * _connection;
    bool  _sync;
    bool  _synchronous;
}

@property (retain) NSXPCConnection *connection;
@property bool sync;
@property bool synchronous;

+ (id)controlObject:(id*)arg1;
+ (id)controlObject:(bool)arg1 error:(id*)arg2;

- (void).cxx_destruct;
- (void)attemptSosUpgrade:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (id)connection;
- (void)createRecoveryKey:(id)arg1 contextID:(id)arg2 recoveryKey:(id)arg3 reply:(id /* block */)arg4;
- (void)dealloc;
- (void)encryptionKey:(id /* block */)arg1;
- (void)establish:(id)arg1 context:(id)arg2 altDSID:(id)arg3 reply:(id /* block */)arg4;
- (void)fetchAllViableBottles:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)fetchCliqueStatus:(id)arg1 context:(id)arg2 configuration:(id)arg3 reply:(id /* block */)arg4;
- (void)fetchEgoPeerID:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)fetchEscrowContents:(id)arg1 contextID:(id)arg2 reply:(id /* block */)arg3;
- (void)fetchTrustStatus:(id)arg1 context:(id)arg2 configuration:(id)arg3 reply:(id /* block */)arg4;
- (void)getCDPStatus:(id)arg1 contextID:(id)arg2 reply:(id /* block */)arg3;
- (id)getConnection:(id /* block */)arg1;
- (void)handleIdentityChangeForSigningKey:(id)arg1 ForEncryptionKey:(id)arg2 ForPeerID:(id)arg3 reply:(id /* block */)arg4;
- (void)healthCheck:(id)arg1 context:(id)arg2 skipRateLimitingCheck:(bool)arg3 reply:(id /* block */)arg4;
- (id)initWithConnection:(id)arg1 sync:(bool)arg2;
- (void)joinWithRecoveryKey:(id)arg1 contextID:(id)arg2 recoveryKey:(id)arg3 reply:(id /* block */)arg4;
- (void)launchBottledPeer:(id)arg1 bottleID:(id)arg2 reply:(id /* block */)arg3;
- (void)leaveClique:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)listOfEligibleBottledPeerRecords:(id /* block */)arg1;
- (void)listOfRecords:(id /* block */)arg1;
- (void)notifyIDMSTrustLevelChangeForContainer:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)octagonEncryptionPublicKey:(id /* block */)arg1;
- (void)octagonSigningPublicKey:(id /* block */)arg1;
- (void)peerDeviceNamesByPeerID:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)postCDPFollowupResult:(bool)arg1 type:(id)arg2 error:(id)arg3 containerName:(id)arg4 contextName:(id)arg5 reply:(id /* block */)arg6;
- (void)preflightBottledPeer:(id)arg1 dsid:(id)arg2 reply:(id /* block */)arg3;
- (void)refetchCKKSPolicy:(id)arg1 contextID:(id)arg2 reply:(id /* block */)arg3;
- (void)removeFriendsInClique:(id)arg1 context:(id)arg2 peerIDs:(id)arg3 reply:(id /* block */)arg4;
- (void)reset:(id /* block */)arg1;
- (void)resetAndEstablish:(id)arg1 context:(id)arg2 altDSID:(id)arg3 resetReason:(long long)arg4 reply:(id /* block */)arg5;
- (void)restore:(id)arg1 contextID:(id)arg2 bottleSalt:(id)arg3 entropy:(id)arg4 bottleID:(id)arg5 reply:(id /* block */)arg6;
- (void)restore:(id)arg1 dsid:(id)arg2 secret:(id)arg3 escrowRecordID:(id)arg4 reply:(id /* block */)arg5;
- (void)rpcEpochWithConfiguration:(id)arg1 reply:(id /* block */)arg2;
- (void)rpcJoinWithConfiguration:(id)arg1 vouchData:(id)arg2 vouchSig:(id)arg3 reply:(id /* block */)arg4;
- (void)rpcPrepareIdentityAsApplicantWithConfiguration:(id)arg1 reply:(id /* block */)arg2;
- (void)rpcVoucherWithConfiguration:(id)arg1 peerID:(id)arg2 permanentInfo:(id)arg3 permanentInfoSig:(id)arg4 stableInfo:(id)arg5 stableInfoSig:(id)arg6 reply:(id /* block */)arg7;
- (void)scrubBottledPeer:(id)arg1 bottleID:(id)arg2 reply:(id /* block */)arg3;
- (void)setCDPEnabled:(id)arg1 contextID:(id)arg2 reply:(id /* block */)arg3;
- (void)setConnection:(id)arg1;
- (void)setSync:(bool)arg1;
- (void)setSynchronous:(bool)arg1;
- (void)signIn:(id)arg1 container:(id)arg2 context:(id)arg3 reply:(id /* block */)arg4;
- (void)signOut:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)signingKey:(id /* block */)arg1;
- (void)startOctagonStateMachine:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (void)status:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;
- (bool)sync;
- (bool)synchronous;
- (void)tapToRadar:(id)arg1 description:(id)arg2 radar:(id)arg3 reply:(id /* block */)arg4;
- (void)waitForOctagonUpgrade:(id)arg1 context:(id)arg2 reply:(id /* block */)arg3;

@end
