/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WiFiPolicy.framework/WiFiPolicy
 */

@interface WiFiLocaleManager : NSObject <WiFiLocationManagerDelegate> {
    struct __CTServerConnection { } * _ctServerConnectionRef;
    NSDateFormatter * _dateFormatter;
    <WiFiLocaleManagerDelegate> * _delegate;
    unsigned char  _isWaitingForLocationUpdate;
    NSString * _localeCountryCode;
    double  _localeLastUpdatedTime;
    int  _localeSource;
    double  _localeTimeout;
    NSObject<OS_dispatch_source> * _localeTimer;
    WiFiLocationManager * _locationManager;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _testHost11d;
    int  _testMcc;
    unsigned char  _testModeEnabled;
    NSString * _testPeer;
}

@property (retain) NSDateFormatter *dateFormatter;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WiFiLocaleManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property unsigned char isWaitingForLocationUpdate;
@property (retain) NSString *localeCountryCode;
@property double localeLastUpdatedTime;
@property int localeSource;
@property double localeTimeout;
@property (retain) NSObject<OS_dispatch_source> *localeTimer;
@property (retain) WiFiLocationManager *locationManager;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;
@property (retain) NSString *testHost11d;
@property int testMcc;
@property unsigned char testModeEnabled;
@property (retain) NSString *testPeer;

+ (id)getStringOfLocaleSource:(int)arg1;

- (void).cxx_destruct;
- (void)_determineAndSetLocale:(unsigned char)arg1;
- (id)applyCountryCodeExceptions:(id)arg1;
- (id)dateFormatter;
- (void)dealloc;
- (id)delegate;
- (void)determineAndSetLocale:(unsigned char)arg1;
- (void)didChangeAuthorizationStatus;
- (void)didFailWithError:(id)arg1;
- (void)didUpdateLocations:(id)arg1;
- (id)getLocaleCountryCode;
- (id)getLocaleFrom80211dInfo;
- (id)getLocaleFromCompanion;
- (id)getLocaleFromLocation:(id)arg1;
- (id)getLocaleFromMcc;
- (id)getLocaleFromPeer;
- (id)getLocaleFromTimezone;
- (double)getLocaleLastUpdatedTime;
- (int)getLocaleSource;
- (id)getLocaleUsingBoundingBoxes:(id)arg1;
- (id)getLocaleUsingReverseGeocoder:(id)arg1;
- (unsigned char)getNetworkReachability;
- (id)getRestrictedCountryCodeFromRegionInfo;
- (id)getRestrictedCountryCodeFromTimezone;
- (id)init;
- (unsigned char)isWaitingForLocationUpdate;
- (id)localeCountryCode;
- (double)localeLastUpdatedTime;
- (int)localeSource;
- (double)localeTimeout;
- (id)localeTimer;
- (id)locationManager;
- (id)queue;
- (void)setCountryCode:(id)arg1 source:(int)arg2;
- (void)setDateFormatter:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsWaitingForLocationUpdate:(unsigned char)arg1;
- (void)setLocaleCountryCode:(id)arg1;
- (void)setLocaleLastUpdatedTime:(double)arg1;
- (void)setLocaleSource:(int)arg1;
- (void)setLocaleTestParams:(id)arg1;
- (void)setLocaleTimeout:(double)arg1;
- (void)setLocaleTimer:(id)arg1;
- (void)setLocationManager:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setTestHost11d:(id)arg1;
- (void)setTestMcc:(int)arg1;
- (void)setTestModeEnabled:(unsigned char)arg1;
- (void)setTestPeer:(id)arg1;
- (id)testHost11d;
- (int)testMcc;
- (unsigned char)testModeEnabled;
- (id)testPeer;

@end
