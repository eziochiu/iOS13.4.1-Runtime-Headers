/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Proximity.framework/Proximity
 */

@interface PRHelloResponse : NSObject <NSCopying, NSSecureCoding> {
    NSNumber * _addlInfoSize;
    NSNumber * _apFirmwareVersion;
    NSNumber * _calDataVersion;
    NSNumber * _dspFirmwareVersion;
    NSString * _extraBytes;
    unsigned long long  _hardwareVersion;
    unsigned char  _hsiVersionMajor;
    unsigned char  _hsiVersionMinor;
    NSNumber * _modemInitVersion;
    NSNumber * _moduleID;
    NSString * _roseFirmwareVersion;
    NSString * _target;
}

@property (copy) NSNumber *addlInfoSize;
@property (copy) NSNumber *apFirmwareVersion;
@property (copy) NSNumber *calDataVersion;
@property (copy) NSNumber *dspFirmwareVersion;
@property (copy) NSString *extraBytes;
@property (nonatomic, readonly) unsigned long long hardwareVersion;
@property (nonatomic, readonly) unsigned char hsiVersionMajor;
@property (nonatomic, readonly) unsigned char hsiVersionMinor;
@property (copy) NSNumber *modemInitVersion;
@property (copy) NSNumber *moduleID;
@property (nonatomic, readonly) NSString *roseFirmwareVersion;
@property (copy) NSString *target;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)addlInfoSize;
- (id)apFirmwareVersion;
- (id)calDataVersion;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dspFirmwareVersion;
- (void)encodeWithCoder:(id)arg1;
- (id)extraBytes;
- (unsigned long long)hardwareVersion;
- (unsigned char)hsiVersionMajor;
- (unsigned char)hsiVersionMinor;
- (id)initWithCoder:(id)arg1;
- (id)initWithHelloResponse:(const struct HelloResponse { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; unsigned char x2; unsigned char x3; unsigned short x4; struct optional<Rose::HelloResponse::AdditionalInfo> { union { BOOL x_1_2_1; struct AdditionalInfo { unsigned char x_2_3_1; unsigned short x_2_3_2; unsigned short x_2_3_3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_8_1; unsigned long long x_1_8_2; unsigned long long x_1_8_3; } x_1_7_1; struct __short { BOOL x_2_8_1[23]; struct { unsigned char x_2_9_1; } x_2_8_2; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_4_4_1; } x_2_3_4; unsigned short x_2_3_5; unsigned char x_2_3_6; unsigned int x_2_3_7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_8_1; unsigned long long x_1_8_2; unsigned long long x_1_8_3; } x_1_7_1; struct __short { BOOL x_2_8_1[23]; struct { unsigned char x_2_9_1; } x_2_8_2; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_8_4_1; } x_2_3_8; } x_1_2_2; } x_5_1_1; } x5; }*)arg1;
- (id)initWithRoseFirmwareVersion:(id)arg1 hsiVersionMajor:(unsigned char)arg2 hsiVersionMinor:(unsigned char)arg3 hardwareVersion:(unsigned long long)arg4;
- (bool)isEqual:(id)arg1;
- (id)modemInitVersion;
- (id)moduleID;
- (id)roseFirmwareVersion;
- (void)setAddlInfoSize:(id)arg1;
- (void)setApFirmwareVersion:(id)arg1;
- (void)setCalDataVersion:(id)arg1;
- (void)setDspFirmwareVersion:(id)arg1;
- (void)setExtraBytes:(id)arg1;
- (void)setModemInitVersion:(id)arg1;
- (void)setModuleID:(id)arg1;
- (void)setTarget:(id)arg1;
- (id)target;

@end
