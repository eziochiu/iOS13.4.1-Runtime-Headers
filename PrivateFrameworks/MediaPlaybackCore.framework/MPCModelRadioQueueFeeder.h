/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCModelRadioQueueFeeder : MPQueueFeeder <MPAVItemObserver, MPCQueueControllerDataSource, MPRTCReportingItemSessionContaining> {
    unsigned long long  _backgroundTaskIdentifier;
    unsigned long long  _backgroundTasks;
    MPAVItem * _currentItem;
    NSObject<OS_dispatch_queue> * _diffQueue;
    id /* block */  _finalTracklistLoadingCompletionHandler;
    bool  _hasReachedTracklistEnd;
    NSString * _lastCleanPlayedIdentifier;
    NSString * _lastPlayedIdentifier;
    MPCModelRadioPersonalizationResponse * _lastResponse;
    bool  _mayHaveRestrictedContent;
    ICUserIdentityStore * _observedIdentityStore;
    SSVPlayActivityController * _playActivityController;
    MPCModelRadioPlaybackQueue * _playbackQueue;
    MPCPlaybackRequestEnvironment * _playbackRequestEnvironment;
    ICUserIdentity * _proactiveCacheIdentity;
    long long  _queueGeneration;
    <MPMutableIdentifierListSection> * _section;
    NSString * _siriAssetInfo;
    ICStoreRequestContext * _storeRequestContext;
}

@property (nonatomic, readonly) bool containsLiveStream;
@property (nonatomic, readonly) bool containsTransportableContent;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *rtcReportingPlayQueueSourceIdentifier;
@property (nonatomic, readonly, copy) NSDictionary *rtcReportingSessionAdditionalUserInfo;
@property (readonly) Class superclass;

+ (id)sharedQueue;

- (void).cxx_destruct;
- (void)_beginBackgroundTaskAssertion;
- (void)_beginObservingIdentityStoreForSignOut;
- (id)_defaultGetTracksRequestWithContext:(id)arg1 radioStation:(id)arg2;
- (void)_detectSignOutForIdentityStore:(id)arg1;
- (void)_detectSignOutForIdentityStoreChangeNotification:(id)arg1;
- (void)_endBackgroundTaskAssertion;
- (void)_endObservingIdentityStoreForSignOut;
- (id)_errorForRequest:(id)arg1 withError:(id)arg2;
- (void)_handleGetTracksResponse:(id)arg1 getTracksError:(id)arg2 fromRequest:(id)arg3 completion:(id /* block */)arg4;
- (void)_handlePersonalizationResponse:(id)arg1 personalizationError:(id)arg2 fromRequest:(id)arg3 completion:(id /* block */)arg4;
- (void)_loadTracksWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)_observePersonalizationResponse:(id)arg1;
- (void)_removeRestrictedTracks;
- (void)_repersonalizeCurrentTracks;
- (void)_responseDidInvalidate;
- (void)_responseDidInvalidateNotification:(id)arg1;
- (void)_savePlaybackHistoryWithCurrentIndex:(long long)arg1;
- (id)_startPlaybackRequestWithPlaybackContext:(id)arg1;
- (void)_updateProactiveCaching;
- (bool)canSkipItem:(id)arg1;
- (bool)containsLiveStream;
- (bool)containsTransportableContent;
- (void)dealloc;
- (void)didSignificantlyChangeItem:(id)arg1;
- (void)getRepresentativeMetadataForPlaybackContext:(id)arg1 completion:(id /* block */)arg2;
- (id)init;
- (long long)itemCount;
- (void)itemDidBeginPlayback:(id)arg1;
- (id)itemForItem:(id)arg1 inSection:(id)arg2;
- (void)loadAdditionalItemsForSection:(id)arg1 completion:(id /* block */)arg2;
- (void)loadPlaybackContext:(id)arg1 completion:(id /* block */)arg2;
- (id)modelPlayEvent;
- (id)placeholderItemForLoadingAdditionalItemsInSection:(id)arg1;
- (void)reloadSection:(id)arg1 completion:(id /* block */)arg2;
- (id)rtcReportingPlayQueueSourceIdentifier;
- (id)rtcReportingSessionAdditionalUserInfo;
- (bool)section:(id)arg1 supportsShuffleType:(long long)arg2;
- (bool)shouldRequestAdditionalItemsWhenReachingTailOfSection:(id)arg1;
- (long long)supplementalPlaybackContextBehavior;
- (id)supplementalPlaybackContextWithReason:(long long)arg1;

@end
