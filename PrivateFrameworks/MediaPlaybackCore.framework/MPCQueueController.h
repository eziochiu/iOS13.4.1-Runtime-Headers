/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
 */

@interface MPCQueueController : NSObject <MPAVQueueController, MPSectionedIdentifierListAnnotationDelegate, MPShuffleableSectionedIdentifierListDelegate, MSVSegmentedCoding> {
    bool  _allowsQueueModifications;
    NSMutableDictionary * _coderVersions;
    MPAVItem * _currentItem;
    NSMutableDictionary * _dataSources;
    NSUserDefaults * _defaults;
    NSString * _deferredNextContentItemAnchorID;
    <MPAVQueueControllerDelegate> * _delegate;
    bool  _hasUserMutations;
    MPShuffleableSectionedIdentifierList * _identifierList;
    NSString * _nextContentItemID;
    long long  _nextContentItemIDReason;
    <MPAVQueueCoordinating> * _queueCoordinator;
    long long  _repeatType;
    NSError * _restorationError;
    long long  _shuffleType;
    long long  _state;
    unsigned long long  _stateHandle;
}

@property (nonatomic) bool allowsQueueModifications;
@property (nonatomic, retain) NSMutableDictionary *coderVersions;
@property (nonatomic, readonly) bool containsTransportableContent;
@property (nonatomic, readonly) MPAVItem *currentItem;
@property (nonatomic, retain) NSMutableDictionary *dataSources;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSString *deferredNextContentItemAnchorID;
@property (nonatomic) <MPAVQueueControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long displayCount;
@property (nonatomic, readonly) bool hasUserMutations;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MPShuffleableSectionedIdentifierList *identifierList;
@property (nonatomic, copy) NSString *nextContentItemID;
@property (nonatomic) long long nextContentItemIDReason;
@property (nonatomic, retain) <MPAVQueueCoordinating> *queueCoordinator;
@property (nonatomic) long long repeatType;
@property (nonatomic, copy) NSError *restorationError;
@property (nonatomic) long long shuffleType;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long supportedInsertionPositions;
@property (nonatomic, readonly) NSString *uniqueIdentifier;
@property (nonatomic, readonly) bool userCanChangeShuffleAndRepeatType;

+ (id)describePlayer:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_addPlaybackContext:(id)arg1 atPosition:(long long)arg2 afterContentItemID:(id)arg3 sectionIdentifier:(id)arg4 actions:(unsigned long long)arg5 completion:(id /* block */)arg6;
- (bool)_allDataSourcesSupportInsertionPositionLast;
- (void)_applyVolumeNormalizationForQueuedItems;
- (id)_firstContentItemID;
- (id)_firstContentItemIDInSectionWithIdentifier:(id)arg1;
- (void)_highQualityMusicStreamingOnCellularDidChange:(id)arg1;
- (id)_itemForContentItemID:(id)arg1 allowReuse:(bool)arg2;
- (id)_itemForPair:(id)arg1;
- (id)_nextValidIdentifierPairStartingAtContentItemID:(id)arg1 wasInvalid:(bool*)arg2;
- (void)_soundCheckEnabledChangedNotification:(id)arg1;
- (id)_stateDictionaryIncludingIdentifierList:(bool)arg1;
- (void)addPlaybackContext:(id)arg1 afterContentItemID:(id)arg2 completion:(id /* block */)arg3;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 completion:(id /* block */)arg3;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 jumpToIt:(bool)arg3 completion:(id /* block */)arg4;
- (void)addPlaybackContext:(id)arg1 atPosition:(long long)arg2 jumpToIt:(bool)arg3 userModification:(bool)arg4 completion:(id /* block */)arg5;
- (bool)allowsQueueModifications;
- (bool)canSkipItem:(id)arg1;
- (id)coderVersions;
- (bool)containsTransportableContent;
- (id)contentItemIDAtIndex:(long long)arg1;
- (id)contentItemIDWithCurrentItemOffset:(long long)arg1 mode:(long long)arg2 didReachEnd:(bool*)arg3;
- (id)contentItemIDsFromOffset:(long long)arg1 toOffset:(long long)arg2 nowPlayingIndex:(long long*)arg3;
- (id)currentItem;
- (id)dataSources;
- (void)dealloc;
- (id)debugDescriptionForItem:(id)arg1 inSection:(id)arg2;
- (id)debugDescriptionForSection:(id)arg1;
- (id)deferredNextContentItemAnchorID;
- (id)delegate;
- (void)didDequeueShuffledItemsInSectionedIdentifierList:(id)arg1;
- (void)didRestoreVersion:(long long)arg1 forSegment:(id)arg2;
- (long long)displayCount;
- (long long)displayIndexForContentItemID:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalizeStateRestorationWithAccountManager:(id)arg1 completion:(id /* block */)arg2;
- (id)firstContentItemIDForItemIntersectingIdentifierSet:(id)arg1;
- (bool)hasUserMutations;
- (id)identifierList;
- (void)incrementVersionForSegment:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isPlaceholderItemForContentItemID:(id)arg1;
- (id)itemForContentItemID:(id)arg1;
- (void)jumpToContentItemID:(id)arg1;
- (void)jumpToFirstContentItem;
- (void)moveContentItemID:(id)arg1 afterContentItemID:(id)arg2 completion:(id /* block */)arg3;
- (id)nextContentItemID;
- (long long)nextContentItemIDReason;
- (void)player:(id)arg1 currentItemDidChangeFromItem:(id)arg2 toItem:(id)arg3;
- (id)queueCoordinator;
- (void)queueCoordinator:(id)arg1 failedToLoadItem:(id)arg2;
- (id)queueCoordinator:(id)arg1 itemToFollowItem:(id)arg2;
- (void)queueCoordinatorDidChangeItems:(id)arg1;
- (void)reloadItemsKeepingCurrentItem:(bool)arg1;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeContentItemID:(id)arg1 completion:(id /* block */)arg2;
- (long long)repeatType;
- (void)reset;
- (void)resetWithIdentifier:(id)arg1;
- (void)reshuffle;
- (id)restorationError;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidAddItems:(id)arg2 toSection:(id)arg3;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidChangeItems:(id)arg2 inSection:(id)arg3;
- (void)sectionedIdentifierList:(id)arg1 dataSourceDidUpdateSection:(id)arg2;
- (id)segmentForCodingKey:(id)arg1;
- (void)setAllowsQueueModifications:(bool)arg1;
- (void)setCoderVersions:(id)arg1;
- (void)setDataSources:(id)arg1;
- (void)setDeferredNextContentItemAnchorID:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIdentifierList:(id)arg1;
- (void)setNextContentItemID:(id)arg1;
- (void)setNextContentItemIDReason:(long long)arg1;
- (void)setQueueCoordinator:(id)arg1;
- (void)setRepeatType:(long long)arg1;
- (void)setRestorationError:(id)arg1;
- (void)setShuffleType:(long long)arg1;
- (void)setState:(long long)arg1;
- (long long)shuffleType;
- (long long)state;
- (unsigned long long)supportedInsertionPositions;
- (id)uniqueIdentifier;
- (void)updateLocationDependentPropertiesForItem:(id)arg1;
- (bool)userCanChangeShuffleAndRepeatType;
- (long long)versionForSegment:(id)arg1;

@end
