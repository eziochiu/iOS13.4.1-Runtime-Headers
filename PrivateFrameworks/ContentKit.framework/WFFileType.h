/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/ContentKit.framework/ContentKit
 */

@interface WFFileType : WFType {
    NSString * _OSType;
    NSString * _pboardType;
    NSString * _string;
    const struct __CFString { } * _utType;
}

@property (nonatomic, readonly) NSString *MIMEType;
@property (nonatomic, readonly) NSString *OSType;
@property (getter=isDeclared, nonatomic, readonly) bool declared;
@property (nonatomic, readonly) NSURL *declaringBundleURL;
@property (nonatomic, readonly) WFImage *documentIcon;
@property (getter=isDynamic, nonatomic, readonly) bool dynamic;
@property (nonatomic, readonly) NSString *fileExtension;
@property (nonatomic, readonly) WFImage *icon;
@property (nonatomic, readonly) NSString *pboardType;
@property (nonatomic, readonly, copy) NSString *string;
@property (nonatomic, readonly) NSDictionary *typeDeclaration;
@property (nonatomic, readonly) NSString *typeDescription;
@property (nonatomic, readonly) NSArray *typesConformedTo;
@property (nonatomic, readonly) const struct __CFString { }*utType;

+ (id)cachedFileTypeForUTType:(const struct __CFString { }*)arg1;
+ (bool)supportsSecureCoding;
+ (id)typeForTagClass:(const struct __CFString { }*)arg1 tag:(const struct __CFString { }*)arg2;
+ (id)typeFromFileExtension:(id)arg1;
+ (id)typeFromFilename:(id)arg1;
+ (id)typeFromMIMEType:(id)arg1;
+ (id)typeFromPasteboardType:(id)arg1;
+ (id)typeWithString:(id)arg1;
+ (id)typeWithUTType:(const struct __CFString { }*)arg1;
+ (id)typeWithUTType:(const struct __CFString { }*)arg1 string:(id)arg2;
+ (id)typesForTagClass:(const struct __CFString { }*)arg1 tag:(const struct __CFString { }*)arg2 conformingToType:(const struct __CFString { }*)arg3;
+ (id)typesFromUTTypes:(id)arg1;
+ (id)typesFromUTTypes:(id)arg1 excludingType:(id)arg2;

- (void).cxx_destruct;
- (id)MIMEType;
- (id)OSType;
- (id)conformingTypesWithFileExtension:(id)arg1;
- (id)conformingTypesWithMIMEType:(id)arg1;
- (id)conformingTypesWithTagClass:(const struct __CFString { }*)arg1 tag:(id)arg2;
- (bool)conformsToType:(id)arg1;
- (bool)conformsToUTType:(const struct __CFString { }*)arg1;
- (bool)conformsToUTTypes:(id)arg1;
- (void)dealloc;
- (id)declaringBundleURL;
- (id)documentIcon;
- (void)encodeWithCoder:(id)arg1;
- (id)fileExtension;
- (unsigned long long)hash;
- (id)icon;
- (id)initWithCoder:(id)arg1;
- (id)initWithUTType:(const struct __CFString { }*)arg1;
- (id)initWithUTType:(const struct __CFString { }*)arg1 string:(id)arg2;
- (bool)isDeclared;
- (bool)isDynamic;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToString:(id)arg1;
- (bool)isEqualToType:(id)arg1;
- (bool)isEqualToUTType:(const struct __CFString { }*)arg1;
- (id)pboardType;
- (id)preferredTagWithClass:(const struct __CFString { }*)arg1;
- (id)string;
- (id)typeDeclaration;
- (id)typeDescription;
- (id)typesConformedTo;
- (const struct __CFString { }*)utType;

@end
