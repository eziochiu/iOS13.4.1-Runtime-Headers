/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo
 */

@interface PAEColorCurveChannelData : NSObject <FxCustomParameterInterpolation, NSCoding, NSCopying> {
    void * _curve_private;
}

+ (id)channelDataWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
+ (id)channelDataWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 curve:(const struct color_t<double> { int (**x1)(); struct point_t<double, false, false> {} *x2; struct point_t<double, false, false> {} *x3; struct __compressed_pair<cc::point_t<double, false, false> *, std::__1::allocator<cc::point_t<double, false, false> > > { struct point_t<double, false, false> {} *x_4_1_1; } x4; int (**x5)(); double x6; double x7; double x8; struct bezier_t<double, false> { int (**x_9_1_1)(); struct point_t<double, false, false> {} *x_9_1_2; struct point_t<double, false, false> {} *x_9_1_3; struct __compressed_pair<cc::point_t<double, false, false> *, std::__1::allocator<cc::point_t<double, false, false> > > { struct point_t<double, false, false> {} *x_4_2_1; } x_9_1_4; int (**x_9_1_5)(); } x9; }*)arg4;

- (double)blue;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (struct color_t<double> { int (**x1)(); struct point_t<double, false, false> {} *x2; struct point_t<double, false, false> {} *x3; struct __compressed_pair<cc::point_t<double, false, false> *, std::__1::allocator<cc::point_t<double, false, false> > > { struct point_t<double, false, false> {} *x_4_1_1; } x4; int (**x5)(); double x6; double x7; double x8; struct bezier_t<double, false> { int (**x_9_1_1)(); struct point_t<double, false, false> {} *x_9_1_2; struct point_t<double, false, false> {} *x_9_1_3; struct __compressed_pair<cc::point_t<double, false, false> *, std::__1::allocator<cc::point_t<double, false, false> > > { struct point_t<double, false, false> {} *x_4_2_1; } x_9_1_4; int (**x_9_1_5)(); } x9; }*)curveRef;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (double)evaluate:(double)arg1;
- (double)green;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 curve:(const struct color_t<double> { int (**x1)(); struct point_t<double, false, false> {} *x2; struct point_t<double, false, false> {} *x3; struct __compressed_pair<cc::point_t<double, false, false> *, std::__1::allocator<cc::point_t<double, false, false> > > { struct point_t<double, false, false> {} *x_4_1_1; } x4; int (**x5)(); double x6; double x7; double x8; struct bezier_t<double, false> { int (**x_9_1_1)(); struct point_t<double, false, false> {} *x_9_1_2; struct point_t<double, false, false> {} *x_9_1_3; struct __compressed_pair<cc::point_t<double, false, false> *, std::__1::allocator<cc::point_t<double, false, false> > > { struct point_t<double, false, false> {} *x_4_2_1; } x_9_1_4; int (**x_9_1_5)(); } x9; }*)arg4;
- (id)interpolateBetween:(id)arg1 withWeight:(float)arg2;
- (bool)isAtDefaults;
- (bool)isEqualTo:(id)arg1;
- (double)red;
- (void)reset;

@end
