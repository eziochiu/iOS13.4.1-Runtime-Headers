/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKDebugTree : NSObject {
    struct DebugTreeNode { 
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { 
            struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { 
                struct __rep { 
                    union { 
                        struct __long { 
                            char *__data_; 
                            unsigned long long __size_; 
                            unsigned long long __cap_; 
                        } __l; 
                        struct __short { 
                            BOOL __data_[23]; 
                            struct { 
                                unsigned char __size_; 
                            } ; 
                        } __s; 
                        struct __raw { 
                            unsigned long long __words[3]; 
                        } __r; 
                    } ; 
                } __value_; 
            } __r_; 
        } _name; 
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { 
            struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { 
                struct __rep { 
                    union { 
                        struct __long { 
                            char *__data_; 
                            unsigned long long __size_; 
                            unsigned long long __cap_; 
                        } __l; 
                        struct __short { 
                            BOOL __data_[23]; 
                            struct { 
                                unsigned char __size_; 
                            } ; 
                        } __s; 
                        struct __raw { 
                            unsigned long long __words[3]; 
                        } __r; 
                    } ; 
                } __value_; 
            } __r_; 
        } _identifier; 
        struct vector<mdc::DebugTreeNode, std::__1::allocator<mdc::DebugTreeNode> > { 
            struct DebugTreeNode {} *__begin_; 
            struct DebugTreeNode {} *__end_; 
            struct __compressed_pair<mdc::DebugTreeNode *, std::__1::allocator<mdc::DebugTreeNode> > { 
                struct DebugTreeNode {} *__value_; 
            } __end_cap_; 
        } _children; 
        struct vector<mdc::DebugTreeProperty, std::__1::allocator<mdc::DebugTreeProperty> > { 
            struct DebugTreeProperty {} *__begin_; 
            struct DebugTreeProperty {} *__end_; 
            struct __compressed_pair<mdc::DebugTreeProperty *, std::__1::allocator<mdc::DebugTreeProperty> > { 
                struct DebugTreeProperty {} *__value_; 
            } __end_cap_; 
        } _properties; 
    }  _debugTree;
    NSArray * _nodes;
    struct bitset<4> { 
        unsigned long long __first_; 
    }  _options;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct optional<mdc::DebugTreeNode> { bool x1; union ValueUnion { unsigned char x_2_1_1[96]; struct DebugTreeNode { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_7_1; unsigned long long x_1_7_2; unsigned long long x_1_7_3; } x_1_6_1; struct __short { BOOL x_2_7_1[23]; struct { unsigned char x_2_8_1; } x_2_7_2; } x_1_6_2; struct __raw { unsigned long long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_1_3_1; } x_2_2_1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_7_1; unsigned long long x_1_7_2; unsigned long long x_1_7_3; } x_1_6_1; struct __short { BOOL x_2_7_1[23]; struct { unsigned char x_2_8_1; } x_2_7_2; } x_1_6_2; struct __raw { unsigned long long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_2_3_1; } x_2_2_2; } x_2_1_2; } x2; })_deserializeNode:(id)arg1;
- (struct optional<mdc::DebugTreeProperty> { bool x1; union ValueUnion { unsigned char x_2_1_1[80]; struct DebugTreeProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_7_1; unsigned long long x_1_7_2; unsigned long long x_1_7_3; } x_1_6_1; struct __short { BOOL x_2_7_1[23]; struct { unsigned char x_2_8_1; } x_2_7_2; } x_1_6_2; struct __raw { unsigned long long x_3_7_1[3]; } x_1_6_3; } x_1_5_1; } x_1_4_1; } x_1_3_1; } x_2_2_1; int x_2_2_2; struct vector<mdc::DebugTreeValue, std::__1::allocator<mdc::DebugTreeValue> > { struct DebugTreeValue {} *x_3_3_1; struct DebugTreeValue {} *x_3_3_2; struct __compressed_pair<mdc::DebugTreeValue *, std::__1::allocator<mdc::DebugTreeValue> > { struct DebugTreeValue {} *x_3_4_1; } x_3_3_3; } x_2_2_3; struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_3_1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_3_2; struct __compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_3_4_1; } x_4_3_3; } x_2_2_4; } x_2_1_2; } x2; })_deserializeProperty:(id)arg1;
- (struct optional<mdc::DebugTreeValue> { bool x1; union ValueUnion { unsigned char x_2_1_1[64]; struct DebugTreeValue { struct ValueStruct { long long x_1_3_1; unsigned long long x_1_3_2; double x_1_3_3; bool x_1_3_4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_8_1; unsigned long long x_1_8_2; unsigned long long x_1_8_3; } x_1_7_1; struct __short { BOOL x_2_8_1[23]; struct { unsigned char x_2_9_1; } x_2_8_2; } x_1_7_2; struct __raw { unsigned long long x_3_8_1[3]; } x_1_7_3; } x_1_6_1; } x_1_5_1; } x_5_4_1; } x_1_3_5; } x_2_2_1; int x_2_2_2; } x_2_1_2; } x2; })_deserializeValue:(id)arg1;
- (void)_outputTree:(struct basic_ostream<char, std::__1::char_traits<char> > { int (**x1)(); int (**x2)(); unsigned int x3; long long x4; long long x5; unsigned int x6; unsigned int x7; void *x8; void *x9; int (**x10)(); int *x11; unsigned long long x12; unsigned long long x13; long long *x14; unsigned long long x15; unsigned long long x16; void **x17; unsigned long long x18; unsigned long long x19; struct basic_ostream<char, std::__1::char_traits<char> > {} *x20; int x21; }*)arg1;
- (void)_populateData;
- (id)_serializeNode:(const struct DebugTreeNode { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; }*)arg1;
- (id)_serializeProperty:(const struct DebugTreeProperty { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; int x2; struct vector<mdc::DebugTreeValue, std::__1::allocator<mdc::DebugTreeValue> > { struct DebugTreeValue {} *x_3_1_1; struct DebugTreeValue {} *x_3_1_2; struct __compressed_pair<mdc::DebugTreeValue *, std::__1::allocator<mdc::DebugTreeValue> > { struct DebugTreeValue {} *x_3_2_1; } x_3_1_3; } x3; struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_1_1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_4_1_2; struct __compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > > { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_3_2_1; } x_4_1_3; } x4; }*)arg1;
- (id)_serializeValue:(const struct DebugTreeValue { struct ValueStruct { long long x_1_1_1; unsigned long long x_1_1_2; double x_1_1_3; bool x_1_1_4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_6_1; unsigned long long x_1_6_2; unsigned long long x_1_6_3; } x_1_5_1; struct __short { BOOL x_2_6_1[23]; struct { unsigned char x_2_7_1; } x_2_6_2; } x_1_5_2; struct __raw { unsigned long long x_3_6_1[3]; } x_1_5_3; } x_1_4_1; } x_1_3_1; } x_5_2_1; } x_1_1_5; } x1; int x2; }*)arg1;
- (void)dealloc;
- (bool)deserializeTree:(id)arg1;
- (bool)deserializeZippedTree:(id)arg1;
- (void)disableAllOptions;
- (void)enableAllOptions;
- (const struct DebugTreeNode { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; }*)internalData;
- (id)logTree;
- (id)nodes;
- (void)populateData:(id)arg1;
- (void)printTree;
- (void)replaceInternalData:(const struct DebugTreeNode { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; }*)arg1;
- (id)serializeTree;
- (id)serializeZippedTree;
- (void)setOption:(unsigned long long)arg1 value:(bool)arg2;
- (void)setOptions:(id)arg1;

@end
