/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKRouteLineObserver : NSObject <VKRouteLineObserverProtocol> {
    VKRouteLine * _routeLine;
    struct LabelTransitSupport { int (**x1)(); int (**x2)(); struct LabelManager {} *x3; struct shared_ptr<md::DataOverrideManager> { struct DataOverrideManager {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; struct _retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_5_1_1)(); id x_5_1_2; struct _retain_objc { } x_5_1_3; struct _release_objc { } x_5_1_4; } x5; struct _retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_6_1_1)(); id x_6_1_2; struct _retain_objc { } x_6_1_3; struct _release_objc { } x_6_1_4; } x6; struct _retain_ptr<VKRouteContextObserverThunk *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_7_1_1)(); id x_7_1_2; struct _retain_objc { } x_7_1_3; struct _release_objc { } x_7_1_4; } x7; bool x8; bool x9; bool x10; bool x11; double x12; struct vector<std::__1::shared_ptr<md::LabelExternalPointFeature>, geo::StdAllocator<std::__1::shared_ptr<md::LabelExternalPointFeature>, mdm::Allocator> > { struct shared_ptr<md::LabelExternalPointFeature> {} *x_13_1_1; struct shared_ptr<md::LabelExternalPointFeature> {} *x_13_1_2; struct __compressed_pair<std::__1::shared_ptr<md::LabelExternalPointFeature> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelExternalPointFeature>, mdm::Allocator> > { struct shared_ptr<md::LabelExternalPointFeature> {} *x_3_2_1; struct StdAllocator<std::__1::shared_ptr<md::LabelExternalPointFeature>, mdm::Allocator> { struct Allocator {} *x_2_3_1; } x_3_2_2; } x_13_1_3; } x13; } * _transitSupport;
}

- (void)dealloc;
- (id)initWithTransitSupport:(struct LabelTransitSupport { int (**x1)(); int (**x2)(); struct LabelManager {} *x3; struct shared_ptr<md::DataOverrideManager> { struct DataOverrideManager {} *x_4_1_1; struct __shared_weak_count {} *x_4_1_2; } x4; struct _retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_5_1_1)(); id x_5_1_2; struct _retain_objc { } x_5_1_3; struct _release_objc { } x_5_1_4; } x5; struct _retain_ptr<VKRouteContext *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_6_1_1)(); id x_6_1_2; struct _retain_objc { } x_6_1_3; struct _release_objc { } x_6_1_4; } x6; struct _retain_ptr<VKRouteContextObserverThunk *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> { int (**x_7_1_1)(); id x_7_1_2; struct _retain_objc { } x_7_1_3; struct _release_objc { } x_7_1_4; } x7; bool x8; bool x9; bool x10; bool x11; double x12; struct vector<std::__1::shared_ptr<md::LabelExternalPointFeature>, geo::StdAllocator<std::__1::shared_ptr<md::LabelExternalPointFeature>, mdm::Allocator> > { struct shared_ptr<md::LabelExternalPointFeature> {} *x_13_1_1; struct shared_ptr<md::LabelExternalPointFeature> {} *x_13_1_2; struct __compressed_pair<std::__1::shared_ptr<md::LabelExternalPointFeature> *, geo::StdAllocator<std::__1::shared_ptr<md::LabelExternalPointFeature>, mdm::Allocator> > { struct shared_ptr<md::LabelExternalPointFeature> {} *x_3_2_1; struct StdAllocator<std::__1::shared_ptr<md::LabelExternalPointFeature>, mdm::Allocator> { struct Allocator {} *x_2_3_1; } x_3_2_2; } x_13_1_3; } x13; }*)arg1 andRouteLine:(id)arg2;
- (void)routeLineDidUpdateSections:(id)arg1;

@end
