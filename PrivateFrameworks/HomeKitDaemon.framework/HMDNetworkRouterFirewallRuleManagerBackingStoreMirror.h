/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDNetworkRouterFirewallRuleManagerBackingStoreMirror : HMFObject <HMBMirrorProtocol, HMDNetworkRouterFirewallRuleManagerBackingStoreMirror, HMFLogging> {
    HMBCloudDatabase * _cloudDatabase;
    HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel * _internalState;
    NAFuture * _lastAsyncFuture;
    HMBLocalDatabase * _localDatabase;
    HMBLocalZone * _localZone;
    NAPromise * _shutdownPromise;
    bool  _shuttingDown;
    NAPromise * _startupPromise;
    bool  _useAnonymousRequests;
    NSSet * _watchedRecordIDs;
    NSObject<OS_dispatch_queue> * _workQueue;
    <NAScheduler> * _workQueueScheduler;
    <HMBLocalZoneID> * _zoneID;
}

@property (nonatomic, readonly) HMBCloudDatabase *cloudDatabase;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel *internalState;
@property (nonatomic, retain) NAFuture *lastAsyncFuture;
@property (nonatomic, readonly) HMBLocalDatabase *localDatabase;
@property (nonatomic, retain) HMBLocalZone *localZone;
@property (getter=isRunning, nonatomic, readonly) bool running;
@property (nonatomic, readonly) NAFuture *shutdownFuture;
@property (nonatomic, readonly) NAPromise *shutdownPromise;
@property (getter=isShuttingDown, nonatomic) bool shuttingDown;
@property (nonatomic, readonly) NAFuture *startUp;
@property (nonatomic, readonly) NAFuture *startupFuture;
@property (nonatomic, readonly) NAPromise *startupPromise;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool useAnonymousRequests;
@property (nonatomic, retain) NSSet *watchedRecordIDs;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (nonatomic, readonly) <NAScheduler> *workQueueScheduler;
@property (nonatomic, readonly) <HMBLocalZoneID> *zoneID;

+ (id)__certificatesRecordID;
+ (id)__createSignatureVerificationPolicy;
+ (bool)__errorIsNotFound:(id)arg1;
+ (unsigned long long)__maxSizeForCKRecordSignatureVerificationCertificateChain;
+ (id)__overrideParentModelID;
+ (id)__publicKeyFromCertificateRecord:(id)arg1 dataKey:(id)arg2 assetKey:(id)arg3;
+ (id)__publicKeysFromCertificateRecord:(id)arg1;
+ (id)__recordKeyCertificatePrefix:(id)arg1;
+ (id)logCategory;

- (void).cxx_destruct;
- (bool)__addOverrides:(id)arg1 replace:(bool)arg2 options:(id)arg3 activity:(id)arg4 error:(id*)arg5;
- (id)__asyncFutureWithActivity:(id)arg1 ignoreErrors:(bool)arg2 block:(id /* block */)arg3;
- (bool)__canRecoverFromFetchDatabaseChangesError:(id)arg1 fetchInfo:(id)arg2;
- (bool)__canRecoverFromVerificationCertificatesError:(id)arg1 fetchInfo:(id)arg2;
- (id)__createCloudZoneIDForZoneID:(id)arg1;
- (bool)__createCloudZonesForFetchInfo:(id)arg1 error:(id*)arg2;
- (void)__fetchCloudRecordsWithFetchInfo:(id)arg1;
- (void)__fetchDatabaseChangesCompleted:(id)arg1 error:(id)arg2;
- (void)__fetchDatabaseChangesWithFetchInfo:(id)arg1;
- (id)__fetchNetworkDeclarationDataForRecordIDs:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (id)__fetchNetworkDeclarationDataForZoneID:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (id)__fetchNetworkDeclarationDataForZoneName:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (id)__fetchOverridesForRecordIDs:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (id)__fetchOverridesForZoneName:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (void)__fetchRecordByID:(id)arg1;
- (void)__fetchRecordsByQuery:(id)arg1;
- (void)__fetchVerificationCertificatesCompleted:(id)arg1 recordsByRecordID:(id)arg2 error:(id)arg3;
- (void)__fetchVerificationCertificatesWithFetchInfo:(id)arg1;
- (void)__fetchZoneChangesWithFetchInfo:(id)arg1;
- (id)__loadOrCreateInternalStateModelWithLocalZone:(id)arg1 activity:(id)arg2;
- (id)__localZonesForRecordIDs:(id)arg1 activity:(id)arg2 error:(id*)arg3;
- (id)__openLocalZoneForCloudZoneID:(id)arg1 error:(id*)arg2;
- (void)__performCloudZonePullsWithFetchInfo:(id)arg1;
- (bool)__removeAllLocalRulesWithOptions:(id)arg1 activity:(id)arg2 error:(id*)arg3;
- (bool)__removeAllOverridesWithOptions:(id)arg1 activity:(id)arg2 error:(id*)arg3;
- (void)__removeDeletedZonesWithFetchInfo:(id)arg1;
- (bool)__removeOverridesForRecordIDs:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (bool)__removeOverridesForZoneName:(id)arg1 options:(id)arg2 activity:(id)arg3 error:(id*)arg4;
- (bool)__removeOverridesForZoneName:(id)arg1 recordName:(id)arg2 options:(id)arg3 activity:(id)arg4 error:(id*)arg5;
- (void)__retryFetchDatabaseChangesWithFetchInfo:(id)arg1;
- (void)__retryFetchVerificationCertificatesWithFetchInfo:(id)arg1;
- (void)__saveInternalStateWithActivity:(id)arg1;
- (bool)__shouldFailCloudRecordFetchError:(id)arg1 error:(id)arg2;
- (void)__shutdownLocalZones:(id)arg1 activity:(id)arg2;
- (void)__shutdownWithActivity:(id)arg1;
- (void)__startQueryOperation:(id)arg1 operation:(id)arg2;
- (void)__startUpCloudZonesWithFetchInfo:(id)arg1;
- (void)__startupWithLocalZone:(id)arg1 activity:(id)arg2;
- (void)__updateChangeTokenWithFetchInfo:(id)arg1;
- (void)_fetchCloudRecordsForZoneID:(id)arg1 recordID:(id)arg2 options:(id)arg3 desiredKeys:(id)arg4 completion:(id /* block */)arg5;
- (id)_fetchNetworkDeclarationDataForZoneName:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)_fetchOverridesForZoneName:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (bool)_removeOverridesForZoneName:(id)arg1 recordName:(id)arg2 options:(id)arg3 error:(id*)arg4;
- (bool)addOverrides:(id)arg1 replace:(bool)arg2 options:(id)arg3 error:(id*)arg4;
- (id)cloudDatabase;
- (id)destroy;
- (id)fetchAllNetworkDeclarationDataWithOptions:(id)arg1 error:(id*)arg2;
- (id)fetchAllOverridesWithOptions:(id)arg1 error:(id*)arg2;
- (void)fetchCloudChangesWithOptions:(id)arg1 ignoreLastFetchedAccessories:(bool)arg2 xpcActivity:(id)arg3 completion:(id /* block */)arg4;
- (void)fetchCloudRecordIDsForZoneID:(id)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (void)fetchCloudRecordsForZoneID:(id)arg1 recordID:(id)arg2 options:(id)arg3 completion:(id /* block */)arg4;
- (id)fetchNetworkDeclarationDataForRecordIDs:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)fetchNetworkDeclarationDataForZoneName:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)fetchOverridesForRecordIDs:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)fetchOverridesForZoneName:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)flush;
- (id)initWithLocalDatabase:(id)arg1 cloudDatabase:(id)arg2 useAnonymousRequests:(bool)arg3 ownerQueue:(id)arg4;
- (id)internalState;
- (bool)isRunning;
- (bool)isShuttingDown;
- (id)lastAsyncFuture;
- (id)localDatabase;
- (id)localZone;
- (bool)removeAllLocalRulesWithOptions:(id)arg1 error:(id*)arg2;
- (bool)removeAllOverridesWithOptions:(id)arg1 error:(id*)arg2;
- (bool)removeOverridesForRecordIDs:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (bool)removeOverridesForZoneName:(id)arg1 recordName:(id)arg2 options:(id)arg3 error:(id*)arg4;
- (void)setInternalState:(id)arg1;
- (void)setLastAsyncFuture:(id)arg1;
- (void)setLocalZone:(id)arg1;
- (void)setShuttingDown:(bool)arg1;
- (void)setWatchedRecordIDs:(id)arg1;
- (id)shutdown;
- (id)shutdownFuture;
- (id)shutdownPromise;
- (id)startUp;
- (void)startUpWithLocalZone:(id)arg1;
- (id)startupFuture;
- (id)startupPromise;
- (id)triggerOutputForOutputRow:(unsigned long long)arg1 options:(id)arg2;
- (bool)useAnonymousRequests;
- (id)watchedRecordIDs;
- (id)workQueue;
- (id)workQueueScheduler;
- (id)zoneID;

@end
