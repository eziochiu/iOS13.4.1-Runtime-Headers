/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@interface FBProcess : NSObject <FBSProcess, FBSProcessInternal, RBSProcessMatching> {
    FBSApplicationInfo * _applicationInfo;
    bool  _attemptedBootstrap;
    long long  _backgroundingPolicy;
    NSError * _bootstrapError;
    NSString * _bundleIdentifier;
    RBSAssertion * _continuousAssertion;
    FBProcessCPUStatistics * _cpuStatistics;
    <FBProcessDelegate> * _delegate;
    bool  _didExit;
    double  _execTime;
    long long  _executableLivesOnSystemPartition;
    NSString * _executablePath;
    FBProcessExecutionContext * _executionContext;
    FBProcessExitContext * _exitContext;
    BSProcessHandle * _handle;
    RBSProcessIdentity * _identity;
    bool  _invalidated;
    RBSAssertion * _launchAssertion;
    NSMutableArray * _launchCompletionBlocks;
    bool  _launchFinalized;
    bool  _launchSuccess;
    NSHashTable * _observers;
    int  _pendingExit;
    int  _pid;
    NSObject<OS_dispatch_queue> * _queue;
    RBSProcessHandle * _rbsHandle;
    RBSProcessState * _rbsState;
    FBProcessState * _state;
    bool  _submittedLaunchRequest;
    RBSTarget * _target;
    bool  _updatingState;
    bool  _waitForDebugger;
    FBWorkspace * _workspace;
}

@property (nonatomic, readonly) FBSApplicationInfo *applicationInfo;
@property (nonatomic, readonly) long long backgroundingPolicy;
@property (getter=isBeingDebugged, nonatomic, readonly) bool beingDebugged;
@property (nonatomic, readonly, copy) NSString *bundleIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double execTime;
@property (nonatomic, readonly) bool executableLivesOnSystemPartition;
@property (nonatomic, readonly, copy) FBProcessExecutionContext *executionContext;
@property (nonatomic, readonly) FBProcessExitContext *exitContext;
@property (nonatomic, readonly) bool finishedLaunching;
@property (getter=isForeground, nonatomic, readonly) bool foreground;
@property (nonatomic, readonly) BSProcessHandle *handle;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) RBSProcessIdentity *identity;
@property (nonatomic, readonly, copy) NSString *name;
@property (getter=isPendingExit, nonatomic, readonly) bool pendingExit;
@property (nonatomic, readonly) int pid;
@property (getter=isRunning, nonatomic, readonly) bool running;
@property (nonatomic, readonly, copy) FBProcessState *state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) RBSTarget *target;
@property (nonatomic, readonly, retain) BSMachPortTaskNameRight *taskNameRight;
@property (nonatomic, readonly) FBWorkspace *workspace;

// Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard

+ (id)calloutQueue;

- (void).cxx_destruct;
- (void)_executeBlockAfterLaunchCompletes:(id /* block */)arg1;
- (void)_notePendingExitForReason:(id)arg1;
- (void)_noteStateDidUpdate:(id)arg1;
- (void)_queue_bootstrapAndExec;
- (id)_queue_createBootstrapContext;
- (void)_queue_dropAssertions;
- (void)_queue_enumerateObserversWithBlock:(id /* block */)arg1;
- (void)_queue_executeLaunchCompletionBlocks:(bool)arg1;
- (void)_queue_launchComplete:(id)arg1;
- (id)_queue_newWatchdogForContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_queue_noteLaunchDidComplete:(bool)arg1;
- (void)_queue_noteLaunchWillComplete;
- (void)_queue_noteProcessDidExit:(id)arg1;
- (void)_queue_processDidExitWithContext:(id)arg1;
- (void)_queue_rebuildState;
- (void)_queue_rebuildState:(id)arg1;
- (void)_queue_sceneLifecycleStateChanged:(id)arg1;
- (void)_queue_setDebugging:(bool)arg1;
- (void)_queue_setPid:(int)arg1;
- (void)_queue_setTaskState:(long long)arg1;
- (void)_queue_setVisibility:(long long)arg1;
- (void)_queue_updateStateWithBlock:(id /* block */)arg1;
- (void)_terminateWithRequest:(id)arg1 forWatchdog:(id)arg2;
- (void)_updateCPUStatistics;
- (bool)_wantsStateUpdates;
- (bool)_watchdog:(id)arg1 shouldTerminateWithDeclineReason:(out id*)arg2;
- (id)_watchdog:(id)arg1 terminationRequestForViolatedProvision:(id)arg2 error:(id)arg3;
- (void)_watchdogStarted:(id)arg1;
- (void)_watchdogStopped:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)applicationInfo;
- (long long)backgroundingPolicy;
- (id)bundleIdentifier;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (double)execTime;
- (bool)executableLivesOnSystemPartition;
- (id)executionContext;
- (id)exitContext;
- (bool)finishedLaunching;
- (id)handle;
- (bool)hasEntitlement:(id)arg1;
- (id)identity;
- (id)init;
- (id)initWithHandle:(id)arg1 identity:(id)arg2 executionContext:(id)arg3;
- (void)invalidate;
- (bool)isApplicationProcess;
- (bool)isBeingDebugged;
- (bool)isExtensionProcess;
- (bool)isForeground;
- (bool)isPendingExit;
- (bool)isRunning;
- (bool)isSystemApplicationProcess;
- (void)launchWithDelegate:(id)arg1;
- (bool)matchesProcess:(id)arg1;
- (id)name;
- (int)pid;
- (id)processPredicate;
- (void)removeObserver:(id)arg1;
- (id)state;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)target;
- (id)taskNameRight;
- (id)valueForEntitlement:(id)arg1;
- (id)workspace;

// Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard

- (id)sb_bundleIdentifierWithFallback;
- (bool)sb_isProbablyUIApplication;

@end
