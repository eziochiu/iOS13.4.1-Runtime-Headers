/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@interface FBApplicationProcess : FBProcess {
    BKSProcessAssertion * _accessoryAssertion;
    BKSProcessAssertion * _audioAssertion;
    bool  _connectedToExternalAccessory;
    RBSAssertion * _gracefulKillAssertion;
    unsigned long long  _htAppIdentifier;
    FBSProcessExecutionProvision * _latestViolatedProvision;
    unsigned long long  _launchToken;
    BKSProcessAssertion * _mediaAssertion;
    bool  _nowPlayingWithAudio;
    NSMutableArray * _queue_terminateRequestCompletionBlocks;
    bool  _recordingAudio;
    FBSProcessWatchdogPolicy * _sceneCreateWatchdogPolicy;
    long long  _terminationReason;
    FBSProcessTerminationRequest * _terminationRequest;
    FBProcessWatchdogEventContext * _terminationWatchdogContext;
    FBProcessWatchdog * _watchdog;
    long long  _watchdogReportType;
}

@property (getter=isConnectedToExternalAccessory, nonatomic) bool connectedToExternalAccessory;
@property (nonatomic, readonly) double elapsedCPUTime;
@property (getter=isNowPlayingWithAudio, nonatomic) bool nowPlayingWithAudio;
@property (getter=isRecordingAudio, nonatomic) bool recordingAudio;

- (void).cxx_destruct;
- (long long)_exceptionCodeForKillReason:(int)arg1;
- (unsigned long long)_queue_activationInfoForEvent:(int)arg1 withToken:(unsigned long long)arg2;
- (void)_queue_cancelWatchdogTimer;
- (id)_queue_composeContextWithValue:(id)arg1 key:(id)arg2;
- (id)_queue_crashReportThermalsInfo;
- (id)_queue_createBootstrapContext;
- (void)_queue_doGracefulKillWithDeliveryConfirmation:(id /* block */)arg1;
- (void)_queue_dropAssertions;
- (void)_queue_executeKillForRequest:(id)arg1;
- (void)_queue_executeTerminateRequestCompletionBlocksIfNecessaryForSucccess:(bool)arg1;
- (id)_queue_internalDebugEnvironmentVariables;
- (void)_queue_killForReason:(long long)arg1 andReport:(bool)arg2 withDescription:(id)arg3 completion:(id /* block */)arg4;
- (id)_queue_newWatchdogForContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_queue_noteLaunchDidComplete:(bool)arg1;
- (void)_queue_noteLaunchWillComplete;
- (void)_queue_noteProcessDidExit:(id)arg1;
- (bool)_queue_shouldWatchdogWithDeclineReason:(id*)arg1;
- (void)_queue_startWatchdogTimerForContext:(id)arg1;
- (void)_queue_terminateWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)_terminateWithRequest:(id)arg1 forWatchdog:(id)arg2;
- (bool)_wantsStateUpdates;
- (bool)_watchdog:(id)arg1 shouldTerminateWithDeclineReason:(out id*)arg2;
- (id)_watchdog:(id)arg1 terminationRequestForViolatedProvision:(id)arg2 error:(id)arg3;
- (id)_watchdogProvider;
- (long long)_watchdogReportType;
- (void)_watchdogStarted:(id)arg1;
- (void)_watchdogStopped:(id)arg1;
- (double)elapsedCPUTime;
- (id)initWithHandle:(id)arg1 identity:(id)arg2 executionContext:(id)arg3;
- (void)invalidate;
- (bool)isApplicationProcess;
- (bool)isConnectedToExternalAccessory;
- (bool)isNowPlayingWithAudio;
- (bool)isRecordingAudio;
- (void)killForReason:(long long)arg1 andReport:(bool)arg2 withDescription:(id)arg3;
- (void)killForReason:(long long)arg1 andReport:(bool)arg2 withDescription:(id)arg3 completion:(id /* block */)arg4;
- (void)setConnectedToExternalAccessory:(bool)arg1;
- (void)setNowPlayingWithAudio:(bool)arg1;
- (void)setRecordingAudio:(bool)arg1;

@end
