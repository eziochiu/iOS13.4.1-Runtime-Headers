/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PSIGroupResult : NSObject <NSCopying> {
    const struct __CFArray { } * _assetIds;
    NSMutableArray * _assetUUIDs;
    const struct __CFArray { } * _collectionIds;
    NSMutableArray * _collectionResults;
    short  _dedupingSkippedCategory;
    <PSIGroupResultDelegate> * _delegate;
    bool  _didFetchOwningContentString;
    NSArray * _groups;
    NSString * _owningContentString;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableSet * _sceneGroupsIds;
    float  _score;
    NSString * _transientToken;
}

@property (nonatomic, retain) const struct __CFArray { }*assetIds;
@property (nonatomic, readonly) unsigned long long assetMatchCount;
@property (readonly) NSArray *assetUUIDs;
@property (nonatomic, retain) const struct __CFArray { }*collectionIds;
@property (nonatomic, readonly) unsigned long long collectionMatchCount;
@property (readonly) NSArray *collectionResults;
@property (nonatomic, readonly) NSArray *contentStrings;
@property (nonatomic) short dedupingSkippedCategory;
@property (nonatomic) <PSIGroupResultDelegate> *delegate;
@property (nonatomic, copy) NSArray *groups;
@property (nonatomic, readonly) NSArray *groupsMatchRanges;
@property (nonatomic, readonly) NSArray *groupsSearchTokens;
@property (nonatomic, readonly) bool hasDateFilterFromImplicitToken;
@property (nonatomic, readonly) bool isDateFilterPartiallyFromFullSearchText;
@property (nonatomic, readonly) NSArray *lookupIdentifiers;
@property (nonatomic, readonly) unsigned long long matchCount;
@property (readonly) NSString *owningContentString;
@property (readonly) NSMutableSet *sceneGroupsIds;
@property (nonatomic) float score;
@property (nonatomic, copy) NSString *transientToken;

- (void).cxx_destruct;
- (id)_prepareForFetchWithAssetCountLimit:(unsigned long long)arg1 collectionCountLimit:(unsigned long long)arg2 outAssetRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg3 outCollectionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg4 outFetchOwningContentString:(bool*)arg5;
- (const struct __CFArray { }*)assetIds;
- (unsigned long long)assetMatchCount;
- (id)assetUUIDs;
- (long long)categoryAtIndex:(long long)arg1;
- (const struct __CFArray { }*)collectionIds;
- (unsigned long long)collectionMatchCount;
- (id)collectionResults;
- (id)contentStringAtIndex:(long long)arg1;
- (id)contentStrings;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateFilterGroupSnapshot;
- (void)dealloc;
- (id)debugDescription;
- (short)dedupingSkippedCategory;
- (id)delegate;
- (id)description;
- (void)fetchNextAssetUUIDs:(bool)arg1 collectionResults:(bool)arg2 assetCountLimit:(unsigned long long)arg3 collectionCountLimit:(unsigned long long)arg4 completionHandler:(id /* block */)arg5;
- (void)fetchNextAssetUUIDs:(bool)arg1 collectionResults:(bool)arg2 count:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (void)fetchNextAssetUUIDs:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (id)firstSearchTextGroupSnapshot;
- (id)fullSearchTextGroupSnapshot;
- (unsigned long long)groupCount;
- (id)groupRangesAtIndex:(long long)arg1;
- (id)groups;
- (id)groupsMatchRanges;
- (id)groupsSearchTokens;
- (bool)hasDateFilterFromImplicitToken;
- (id)initWithQueue:(id)arg1;
- (bool)isContentStringTextSearchableAtIndex:(long long)arg1;
- (bool)isDateFilterPartiallyFromFullSearchText;
- (bool)isMatchedByIdentifierAtIndex:(long long)arg1;
- (id)lookupIdentifiers;
- (unsigned long long)matchCount;
- (id)matchRangesAtIndex:(long long)arg1;
- (id)normalizedStringAtIndex:(long long)arg1;
- (id)normalizedUnitTestDescription;
- (id)owningContentString;
- (void)resolveObjectsWithAssetCache:(id)arg1 collectionCache:(id)arg2;
- (id)sceneGroupsIds;
- (float)score;
- (void)setAssetIds:(const struct __CFArray { }*)arg1;
- (void)setCollectionIds:(const struct __CFArray { }*)arg1;
- (void)setDedupingSkippedCategory:(short)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGroups:(id)arg1;
- (void)setScore:(float)arg1;
- (void)setTransientToken:(id)arg1;
- (id)tokensAtIndex:(long long)arg1;
- (id)transientToken;
- (id)unitTestDescription;

@end
