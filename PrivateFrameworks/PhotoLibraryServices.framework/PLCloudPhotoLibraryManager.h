/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
 */

@interface PLCloudPhotoLibraryManager : NSObject <CPLLibraryManagerDelegate, CPLResourceProgressDelegate, CPLStatusDelegate, PLCloudChangeTrackerDelegate, PLCloudPersistentHistoryMigratorContext, PLCloudUserSessionHandling, PLForegroundMonitorDelegate> {
    id /* block */  __idleStateTransitionOneTimeAction;
    NSNumber * __numberOfOtherItemsDownloaded;
    NSNumber * __numberOfOtherItemsToPush;
    NSNumber * __numberOfPhotosDownloaded;
    NSNumber * __numberOfPhotosToPush;
    NSNumber * __numberOfVideosDownloaded;
    NSNumber * __numberOfVideosToPush;
    unsigned long long  _boundForUploadingOtherItems;
    unsigned long long  _boundForUploadingPhotos;
    unsigned long long  _boundForUploadingVideos;
    PLCacheDeleteSupport * _cacheDeleteSupport;
    <PLCloudChangeTracker> * _changeTracker;
    bool  _checkEnableStateOnIdle;
    PFCoalescer * _coalescer;
    CPLLibraryManager * _cplLibrary;
    PLCloudBatchDownloader * _downloader;
    PLForegroundMonitor * _foregroundMonitor;
    bool  _hasAttemptedMigration;
    bool  _hasSettledInitialBatch;
    bool  _icplEnabled;
    PLCloudInMemoryTaskManager * _inMemoryTaskManager;
    bool  _initializedMaster;
    NSObject<OS_dispatch_queue> * _isolationQueue;
    PLLibraryServicesManager * _libraryServicesManager;
    unsigned long long  _mode;
    bool  _modeChangePending;
    short  _pauseReason;
    int  _pauseRequest;
    long long  _pendingResetSyncType;
    NSMutableDictionary * _placeholderAssetAvailabilityHandlers;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _placeholderAssetAvailabilityHandlersLock;
    bool  _pullOnIdle;
    bool  _pushOnIdle;
    PLCloudResourceManager * _resourceManager;
    NSObject<OS_dispatch_queue> * _serialQueue;
    bool  _significantWork;
    PLCloudPhotoLibraryUserSwitchHandler * _switchHandler;
    PLCloudTaskManager * _taskManager;
    NSObject<OS_dispatch_source> * _unpauseDispatchTimer;
    NSObject<OS_dispatch_queue> * _uploadDownloadCountQueue;
    PLCloudPhotoLibraryUploadTracker * _uploadTracker;
    PLCloudBatchUploader * _uploader;
    NSObject<OS_dispatch_source> * _userUnpauseDispatchTimer;
    bool  _wasRebuild;
    NSObject<OS_dispatch_source> * _workInProgressTimer;
}

@property (setter=_setIdleStateTransitionOneTimeAction:, nonatomic, copy) id /* block */ _idleStateTransitionOneTimeAction;
@property (setter=_setNumberOfOtherItemsDownloaded:, nonatomic, retain) NSNumber *_numberOfOtherItemsDownloaded;
@property (setter=_setNumberOfOtherItemsToPush:, nonatomic, retain) NSNumber *_numberOfOtherItemsToPush;
@property (setter=_setNumberOfPhotosDownloaded:, nonatomic, retain) NSNumber *_numberOfPhotosDownloaded;
@property (setter=_setNumberOfPhotosToPush:, nonatomic, retain) NSNumber *_numberOfPhotosToPush;
@property (setter=_setNumberOfVideosDownloaded:, nonatomic, retain) NSNumber *_numberOfVideosDownloaded;
@property (setter=_setNumberOfVideosToPush:, nonatomic, retain) NSNumber *_numberOfVideosToPush;
@property (getter=isCloudPhotoLibraryEnabled, nonatomic, readonly) bool cloudPhotoLibraryEnabled;
@property (nonatomic, readonly) long long currentResetSyncType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PLLibraryServicesManager *libraryServicesManager;
@property (nonatomic, readonly) PLPhotoLibraryPathManager *pathManager;
@property (nonatomic, readonly) PLPhotoLibrary *photoLibrary;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long totalNumberOfUnpushedMasters;
@property (nonatomic, readonly) unsigned long long totalNumberOfUploadedMasters;
@property (nonatomic, readonly) unsigned long long totalSizeOfUnpushedOriginals;
@property (nonatomic, readonly) unsigned long long totalUploadedOriginalSize;

+ (id)descriptionForResourceType:(unsigned long long)arg1;
+ (bool)needResetSyncErrorType:(id)arg1;

- (void).cxx_destruct;
- (id)_assetResourceForAsset:(id)arg1 resourceType:(unsigned long long)arg2 masterResourceOnly:(bool)arg3 isPhoto:(bool*)arg4;
- (id)_calculateUnpauseTimeForPauseTime:(id)arg1;
- (bool)_canExternallyTransitionToNewLibraryModeIgnoringPause:(bool)arg1;
- (void)_checkAndMarkPurgeableResourcesIfSafe:(id)arg1 checkServerIfNecessary:(bool)arg2 urgency:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)_checkEnableState;
- (void)_checkForPushedMasters;
- (void)_checkForWorkInProgress;
- (void)_clearPurgeableResourcesMatchingPredicate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_constructUnpauseTimerFrom:(id)arg1 to:(id)arg2;
- (void)_createDeletionRecordsIfNecessary;
- (id)_debugNameForMode:(unsigned long long)arg1;
- (void)_disableiCPLWithReason:(id)arg1;
- (void)_doPause;
- (void)_doResetSync:(long long)arg1;
- (void)_doUnpause;
- (void)_downloadFromCloud;
- (void)_enableiCPL;
- (void)_fetchNewEventsFromChangeTracker;
- (void)_finishUploadWithNoBatchesToUpload;
- (void)_fixMasterStatusIn:(id)arg1;
- (void)_handleAccountFlagsChangeIfNecessary;
- (void)_handleFinalizeSessionError:(id)arg1 commitError:(id)arg2 uploadBatchContainer:(id)arg3 needResetSync:(bool)arg4 forTransaction:(id)arg5;
- (void)_handleModeTransistionAfterDisableiCPL;
- (void)_handleOptimizeSettingChange;
- (void)_handleOptimizeSettingChangeWithCompletionHandler:(id /* block */)arg1;
- (bool)_hasAvalancheIncomingWork;
- (bool)_hasIncomingWorkFileMarker;
- (bool)_hasItemToDownload;
- (id)_identifierForResource:(id)arg1;
- (id /* block */)_idleStateTransitionOneTimeAction;
- (void)_initializeMasterAndSizeCalculation;
- (unsigned long long)_inq_numberOfOtherItemsToDownload;
- (unsigned long long)_inq_numberOfOtherItemsToUpload;
- (unsigned long long)_inq_numberOfPhotosToDownload;
- (unsigned long long)_inq_numberOfPhotosToUpload;
- (unsigned long long)_inq_numberOfVideosToDownload;
- (unsigned long long)_inq_numberOfVideosToUpload;
- (bool)_isAssetsdNotReadyToAnswer;
- (bool)_isPausedForDownloadRequestHighPriority:(bool)arg1;
- (void)_linkFileFrom:(id)arg1 to:(id)arg2;
- (void)_markPurgeableResourcesMatchingPredicate:(id)arg1 urgency:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)_markResourceObjectIDsAsPurgeable:(id)arg1 urgency:(long long)arg2;
- (void)_migrateFromChangeHubToCoreDataIfNecessary;
- (id)_numberOfOtherItemsDownloaded;
- (id)_numberOfOtherItemsToPush;
- (id)_numberOfPhotosDownloaded;
- (id)_numberOfPhotosToPush;
- (id)_numberOfVideosDownloaded;
- (id)_numberOfVideosToPush;
- (void)_openCPLLibrary;
- (void)_pause;
- (short)_placeHolderKindFromCPLResourceType:(unsigned long long)arg1;
- (void)_processNextTransaction;
- (void)_processUploadBatch;
- (void)_processUploadBatchWithStartupFailureCount:(unsigned long long)arg1;
- (void)_promptForCameraCaptureSettingChangeWithReason:(int)arg1;
- (void)_reportOptimizeSettingChangeWithCompltionhandler:(id /* block */)arg1;
- (void)_repushMasterWithMissingMediaMetadata;
- (void)_repushVideoAssetsMetadata;
- (void)_resetCPLLibrary;
- (void)_resetCacheDeleteSupport;
- (void)_runAsyncOnIsolationQueueWithTransaction:(id)arg1 afterDelay:(double)arg2 block:(id /* block */)arg3;
- (void)_runAsyncOnIsolationQueueWithTransaction:(id)arg1 block:(id /* block */)arg2;
- (void)_runOneTimeMigrationStepsIfNecessary;
- (void)_runOneTimeMigrationStepsWithoutiCPLIfNecessary;
- (void)_runSyncOnIsolationQueueWithBlock:(id /* block */)arg1;
- (void)_setIdleStateTransitionOneTimeAction:(id /* block */)arg1;
- (void)_setNumberOfOtherItemsDownloaded:(id)arg1;
- (void)_setNumberOfOtherItemsToPush:(id)arg1;
- (void)_setNumberOfPhotosDownloaded:(id)arg1;
- (void)_setNumberOfPhotosToPush:(id)arg1;
- (void)_setNumberOfVideosDownloaded:(id)arg1;
- (void)_setNumberOfVideosToPush:(id)arg1;
- (void)_setToDownloadCountsForImages:(unsigned long long)arg1 videos:(unsigned long long)arg2;
- (void)_setupPLCPLPlist;
- (bool)_setupTimerForUnpause;
- (void)_startWorkInProgressTimer;
- (void)_stopUnpauseTimer;
- (void)_stopWorkInProgressTimer;
- (struct CGSize { double x1; double x2; })_targetSizeForInputSize:(struct CGSize { double x1; double x2; })arg1 maxPixelSize:(unsigned long long)arg2;
- (void)_transitionToState:(unsigned long long)arg1;
- (void)_unpause;
- (void)_updateAsset:(id)arg1 withImageFileURL:(id)arg2;
- (void)_updateLocalStaleResourceWithCPLResource:(id)arg1;
- (void)_updatePendingResetSyncDate;
- (void)_updateThumbnailDataForAsset:(id)arg1 withImageFileURL:(id)arg2;
- (void)_updateTransferCounts;
- (void)_updateWithCPLResource:(id)arg1 isHighPriority:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_uploadFullPhotoLibraryToCloud;
- (void)acceptCPLMomentShare:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)beginsSignificantWorkWithResourcesSize:(unsigned long long)arg1;
- (void)boostPriorityForMomentShareWithScopeIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)callPlaceholderAssetAvailabilityHandlerForAssetUUID:(id)arg1 success:(bool)arg2 error:(id)arg3;
- (void)cancelResourceTransferTaskWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)changeTrackerDidReceiveChanges;
- (bool)connectToChangeTracker;
- (void)cplHasBackgroundDownloadOperationsWithCompletionHandler:(id /* block */)arg1;
- (id)cplStatus;
- (long long)currentResetSyncType;
- (void)dealloc;
- (void)deleteResources:(id)arg1 checkServerIfNecessary:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)disableiCPLSyncWithReason:(id)arg1;
- (void)disableiCPLWithCompletionHandler:(id /* block */)arg1;
- (void)downloadAsset:(id)arg1 resourceType:(unsigned long long)arg2 masterResourceOnly:(bool)arg3 highPriority:(bool)arg4 clientBundleID:(id)arg5 proposedTaskIdentifier:(id)arg6 taskDidBeginHandler:(id /* block */)arg7 progressBlock:(id /* block */)arg8 completionHandler:(id /* block */)arg9;
- (void)downloadResource:(id)arg1 highPriority:(bool)arg2 clientBundleID:(id)arg3 proposedTaskIdentifier:(id)arg4 taskDidBeginHandler:(id /* block */)arg5 progressBlock:(id /* block */)arg6 completionHandler:(id /* block */)arg7;
- (void)downloadResourceInMemoryForAsset:(id)arg1 resourceType:(unsigned long long)arg2 masterResourceOnly:(bool)arg3 proposedTaskIdentifier:(id)arg4 taskDidBeginHandler:(id /* block */)arg5 completionHandler:(id /* block */)arg6;
- (void)dumpStatusIncludingDaemon:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)enableiCPLWithCompletionHandler:(id /* block */)arg1;
- (void)endUserSessionWithCompletionHandler:(id /* block */)arg1;
- (void)endsSignificantWork;
- (void)fetchAdjustmentDataForAsset:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)fetchEventsFromChangeTracker;
- (void)fetchMomentShareFromShareURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)forceSyncMomentShareWithScopeIdentifier:(id)arg1;
- (void)foregroundMonitor:(id)arg1 changedStateToForeground:(bool)arg2 forBundleIdentifier:(id)arg3;
- (id)getCPLState;
- (void)getStreamingURLForAsset:(id)arg1 resourceType:(unsigned long long)arg2 intent:(unsigned long long)arg3 hints:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)getSystemBudgetsWithCompletionHandler:(id /* block */)arg1;
- (id)initWithLibraryServicesManager:(id)arg1;
- (void)invalidate;
- (bool)isCloudPhotoLibraryEnabled;
- (bool)isConnectedToChangeTracker;
- (bool)isResourceTransferTaskAliveWithTaskWithIdentifier:(id)arg1;
- (id)lastKnownCloudVersionFromDisk;
- (void)libraryManager:(id)arg1 backgroundDownloadDidFailForResource:(id)arg2;
- (void)libraryManager:(id)arg1 backgroundDownloadDidFinishForResource:(id)arg2;
- (void)libraryManager:(id)arg1 downloadDidFinishForResourceTransferTask:(id)arg2 withError:(id)arg3;
- (void)libraryManager:(id)arg1 downloadDidProgress:(float)arg2 forResourceTransferTask:(id)arg3;
- (void)libraryManager:(id)arg1 downloadDidStartForResourceTransferTask:(id)arg2;
- (void)libraryManager:(id)arg1 inMemoryDownloadDidFinishForResourceTransferTask:(id)arg2 data:(id)arg3 withError:(id)arg4;
- (void)libraryManager:(id)arg1 provideLocalResource:(id)arg2 recordClass:(Class)arg3 completionHandler:(id /* block */)arg4;
- (void)libraryManager:(id)arg1 uploadDidFinishForResourceTransferTask:(id)arg2 withError:(id)arg3;
- (void)libraryManager:(id)arg1 uploadDidProgress:(float)arg2 forResourceTransferTask:(id)arg3;
- (void)libraryManager:(id)arg1 uploadDidStartForResourceTransferTask:(id)arg2;
- (void)libraryManagerDidStartSynchronization:(id)arg1;
- (void)libraryManagerHasChangesToPull:(id)arg1;
- (void)libraryManagerHasStatusChanges:(id)arg1;
- (void)libraryManagerStatusDidChange:(id)arg1;
- (id)libraryServicesManager;
- (bool)overrideSystemBudgetsForSyncSession:(bool)arg1 forSystemBudgets:(unsigned long long)arg2;
- (id)pathManager;
- (id)photoLibrary;
- (void)processDownloadBatchWithSession:(id)arg1;
- (void)publishCPLMomentShare:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)queryUserIdentitiesWithParticipants:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)rampingRequestForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (id)readLocalVersion;
- (id)readMigrationMarker;
- (id)readTokenObject;
- (void)registerPlaceholderAssetAvailabilityHandler:(id /* block */)arg1 forAssetUUID:(id)arg2;
- (void)reportMiscInformation:(id)arg1;
- (void)resetSyncDueToMigrationMarker;
- (void)saveLastKnownChangeTrackerTokenToDisk;
- (void)saveTokenObject:(id)arg1;
- (void)setLocalVersion:(id)arg1;
- (void)setMigratedLocalVersion:(id)arg1;
- (void)setMigrationMarker:(id)arg1;
- (void)setPause:(bool)arg1 reason:(short)arg2;
- (long long)sizeOfResourcesToUploadByCPL:(id*)arg1;
- (void)sizeOfResourcesToUploadDidChangeForLibraryManager:(id)arg1;
- (void)startAutomaticPrefetchOrPrune;
- (void)statusDidChange:(id)arg1;
- (void)sync;
- (unsigned long long)totalNumberOfUnpushedMasters;
- (unsigned long long)totalNumberOfUploadedMasters;
- (unsigned long long)totalSizeOfUnpushedOriginals;
- (unsigned long long)totalUploadedOriginalSize;
- (void)unregisterPlaceholderAssetAvailabilityHandlerForAssetUUID:(id)arg1;
- (void)updateTransferCountsWithInsertedPhotoCount:(unsigned long long)arg1 insertedVideoCount:(unsigned long long)arg2;
- (void)uploadToCloudForEventsResult:(id)arg1;

@end
