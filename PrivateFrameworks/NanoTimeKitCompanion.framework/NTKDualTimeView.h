/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
 */

@interface NTKDualTimeView : UIView <NTKTimeView> {
    UIView * _analogContainerView;
    NTKAnalogHandsView * _analogHandsView;
    UIView * _analogTickContainerView;
    NSCalendar * _calendar;
    NSNumber * _clockTimerToken;
    unsigned long long  _color;
    CLKDevice * _device;
    UIView * _dialBackgroundView;
    UIView * _dialContainerView;
    UIView * _digitalContainerView;
    CLKFont * _digitalLabelFont;
    NTKDigitalTimeLabelStyle * _digitalStyle;
    NSArray * _digitalTicks;
    CALayer * _digitalTicksContainer;
    NTKDigitalTimeLabel * _digitalTimeLabel;
    bool  _editing;
    bool  _frozen;
    bool  _hideActiveTicks;
    CAReplicatorLayer * _hourTickReplicatorLayer;
    CAReplicatorLayer * _minuteTickReplicatorLayer;
    NSDate * _overrideDate;
    unsigned long long  _style;
    bool  _useMonospacedDigitalNumbers;
}

@property (nonatomic, retain) UIView *analogContainerView;
@property (nonatomic, retain) NTKAnalogHandsView *analogHandsView;
@property (nonatomic, retain) UIView *analogTickContainerView;
@property (nonatomic) unsigned long long color;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CLKDevice *device;
@property (nonatomic, retain) UIView *dialBackgroundView;
@property (nonatomic, retain) UIView *dialContainerView;
@property (nonatomic, readonly) NTKDigitalTimeLabel *digitalTimeLabel;
@property (nonatomic) bool editing;
@property (getter=isFrozen, nonatomic) bool frozen;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideActiveTicks;
@property (nonatomic) unsigned long long style;
@property (readonly) Class superclass;
@property (nonatomic) bool useMonospacedDigitalNumbers;

- (void).cxx_destruct;
- (id)_activeTimeView;
- (double)_analogTickInset;
- (void)_colorizeAnalogTicksWithHourColor:(id)arg1 minuteColor:(id)arg2;
- (void)_colorizeDigitalTicksWithActiveColor:(id)arg1 inactiveColor:(id)arg2 now:(id)arg3 secondFraction:(double)arg4;
- (id)_customDialBackgroundView;
- (id)_dialColorForColor:(unsigned long long)arg1;
- (void)_didFinishTimeViewSetup;
- (id)_digitalLabelFont;
- (double)_digitalTickInset;
- (id)_digitalTimeLabelColorForColor:(unsigned long long)arg1;
- (double)_digitalTimeLabelFontSize;
- (void)_endDigitalTicksTimer;
- (id)_hourMinuteHandFillColorForColor:(unsigned long long)arg1;
- (id)_hourMinuteHandStrokeColorForColor:(unsigned long long)arg1;
- (id)_hourTickColorForColor:(unsigned long long)arg1;
- (unsigned long long)_hourTickCount;
- (struct CGSize { double x1; double x2; })_hourTickSize;
- (id)_minuteTickColorForColor:(unsigned long long)arg1;
- (unsigned long long)_minuteTickCount;
- (struct CGSize { double x1; double x2; })_minuteTickSize;
- (void)_refreshDigitalTicksWithNow:(id)arg1 secondFraction:(double)arg2;
- (id)_secondHandColorForColor:(unsigned long long)arg1;
- (id)_secondTickActiveColorForColor:(unsigned long long)arg1;
- (id)_secondTickInactiveColorForColor:(unsigned long long)arg1;
- (struct CGSize { double x1; double x2; })_secondTickSize;
- (void)_setupAnalogHandsView;
- (void)_setupAnalogTicks;
- (void)_setupAnalogTimeViews;
- (void)_setupDial;
- (void)_setupDigitalTicks;
- (void)_setupDigitalTimeViews;
- (void)_startDigitalTicksTimer;
- (void)_tearDownAnalogContainerView;
- (void)_tearDownDigitalContainerView;
- (void)_updateDigitalLabelFont;
- (id)analogContainerView;
- (id)analogHandsView;
- (id)analogTickContainerView;
- (void)applyTransitionFraction:(double)arg1 fromColor:(unsigned long long)arg2 toColor:(unsigned long long)arg3;
- (void)applyTransitionFraction:(double)arg1 fromColor:(unsigned long long)arg2 toColor:(unsigned long long)arg3 ignoreTimeView:(bool)arg4;
- (void)applyTransitionFraction:(double)arg1 fromStyle:(unsigned long long)arg2 toStyle:(unsigned long long)arg3;
- (unsigned long long)color;
- (void)dealloc;
- (id)device;
- (id)dialBackgroundView;
- (id)dialContainerView;
- (id)digitalTimeLabel;
- (bool)editing;
- (bool)hideActiveTicks;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 style:(unsigned long long)arg2 andDevice:(id)arg3;
- (bool)isFrozen;
- (void)layoutSubviews;
- (void)setAnalogContainerView:(id)arg1;
- (void)setAnalogHandsView:(id)arg1;
- (void)setAnalogTickContainerView:(id)arg1;
- (void)setColor:(unsigned long long)arg1;
- (void)setDevice:(id)arg1;
- (void)setDialBackgroundView:(id)arg1;
- (void)setDialContainerView:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setFrozen:(bool)arg1;
- (void)setHideActiveTicks:(bool)arg1;
- (void)setOverrideDate:(id)arg1 duration:(double)arg2;
- (void)setSecondsHidden:(bool)arg1 animated:(bool)arg2;
- (void)setStyle:(unsigned long long)arg1;
- (void)setTimeOffset:(double)arg1;
- (void)setUseMonospacedDigitalNumbers:(bool)arg1;
- (void)setupTimeViews;
- (bool)shouldUseCustomDialBackground;
- (unsigned long long)style;
- (bool)useMonospacedDigitalNumbers;

@end
