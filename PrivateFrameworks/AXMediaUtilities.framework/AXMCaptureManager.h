/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/AXMediaUtilities.framework/AXMediaUtilities
 */

@interface AXMCaptureManager : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate> {
    long long  _activeScenario;
    AVCaptureDevice * _captureDevice;
    AVCaptureDeviceInput * _captureDeviceInput;
    AVCaptureSession * _captureSession;
    _AXMCaptureManagerDetectionEngine * _detectionEngine;
    long long  _deviceOrientation;
    NSHashTable * _featureDetectionObservers;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _observerLock;
    AVCaptureVideoDataOutput * _videoDataOutput;
    NSHashTable * _videoFrameObservers;
    NSObject<OS_dispatch_queue> * _videoFrameReceiveQueue;
}

@property (nonatomic, readonly) long long activeScenario;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long deviceOrientation;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) AVCaptureSession *session;
@property (readonly) Class superclass;

+ (id)captureSessionReport:(id)arg1;

- (void).cxx_destruct;
- (bool)_configureSessionWithBlock:(id /* block */)arg1 error:(id*)arg2;
- (id)_filteredDevicesAndFormatsForScenario:(long long)arg1;
- (int)_maximumAcceptableFramerateForScenario:(long long)arg1;
- (int)_maximumAcceptableResolutionForScenario:(long long)arg1;
- (int)_minimumAcceptableFramerateForScenario:(long long)arg1;
- (int)_minimumAcceptableResolutionForScenario:(long long)arg1;
- (unsigned int)_pixelFormatForScenario:(long long)arg1;
- (id)_preferredFormatForFormats:(id)arg1;
- (long long)activeScenario;
- (void)addFeatureDetectionObserver:(id)arg1;
- (void)addVideoFrameObserver:(id)arg1;
- (void)beginLiveDetectionWithOptions:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg2 fromConnection:(id)arg3;
- (bool)configureForScenario:(long long)arg1 error:(id*)arg2;
- (long long)deviceOrientation;
- (void)endLiveDetection;
- (id)idealCaptureSettingsForScenario:(long long)arg1;
- (id)init;
- (id)initWithCaptureSession:(id)arg1;
- (void)printAllVideoDevices;
- (void)removeFeatureDetectionObserver:(id)arg1;
- (void)removeVideoFrameObserver:(id)arg1;
- (id)session;
- (void)setDeviceOrientation:(long long)arg1;
- (void)startSessionIfNeeded;
- (void)stopSession;

@end
