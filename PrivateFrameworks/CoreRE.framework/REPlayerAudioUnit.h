/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreRE.framework/CoreRE
 */

@interface REPlayerAudioUnit : AUAudioUnit {
    unsigned long long  _currentPlayTimeParamAddress;
    struct atomic<bool> { 
        struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { 
            _Atomic bool __a_value; 
        } __a_; 
    }  _didHitStop;
    AVAudioEngine * _engine;
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _engineConfigurationMutex;
    bool  _isScheduled;
    struct atomic<bool> { 
        struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { 
            _Atomic bool __a_value; 
        } __a_; 
    }  _looping;
    AUAudioUnitBusArray * _outputBusArray;
    double  _pauseTime;
    struct atomic<REAudioPlaybackState> { 
        struct __cxx_atomic_impl<REAudioPlaybackState, std::__1::__cxx_atomic_base_impl<REAudioPlaybackState> > { 
            _Atomic unsigned long long __a_value; 
        } __a_; 
    }  _playbackState;
    struct atomic<unsigned int> { 
        struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { 
            _Atomic unsigned int __a_value; 
        } __a_; 
    }  _playedFrames;
    AVAudioPlayerNode * _playingNode;
    struct OpaqueAudioComponentInstance { } * _playingNodeAudioUnit;
    id /* block */  _playingNodeRenderBlock;
    struct shared_ptr<AudioStreamRecordingManager::StreamWriter> { 
        struct StreamWriter {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _recordingStreamWriter;
    struct atomic<double> { 
        struct __cxx_atomic_impl<double, std::__1::__cxx_atomic_base_impl<double> > { 
            _Atomic double __a_value; 
        } __a_; 
    }  _renderSampleTime;
    id  _resource;
    AVAudioMixerNode * _sampleRateConverter;
    id /* block */  _sampleRateConverterRenderBlock;
    NSObject<OS_dispatch_queue> * _serialWorkQueue;
    struct atomic<bool> { 
        struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> > { 
            _Atomic bool __a_value; 
        } __a_; 
    }  _shouldDispatchCompletion;
    double  _startTime;
    id /* block */  _streamPlaybackDidComplete;
}

@property (readonly) double assetDuration;
@property (readonly) bool isPrepared;
@property double playbackPosition;
@property (retain) NSObject<OS_dispatch_queue> *serialWorkQueue;
@property (copy) id /* block */ streamPlaybackDidComplete;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_playbackCompletionCallback;
- (bool)allocateRenderResourcesAndReturnError:(id*)arg1;
- (double)assetDuration;
- (id)channelCapabilities;
- (void)deallocateRenderResources;
- (id)initWithComponentDescription:(struct AudioComponentDescription { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; })arg1 options:(unsigned int)arg2 error:(id*)arg3;
- (id /* block */)internalRenderBlock;
- (bool)isPrepared;
- (id)outputBusses;
- (void)pause;
- (void)play;
- (double)playbackPosition;
- (void)prepareToPlayBuffer:(id)arg1 looping:(bool)arg2;
- (void)prepareToPlayFile:(id)arg1 looping:(bool)arg2;
- (void)resume;
- (void)scheduleCurrentResourceOnPlayer:(id)arg1;
- (void)scheduleCurrentResourceOnPlayer:(id)arg1 startingProgress:(double)arg2;
- (id)serialWorkQueue;
- (void)setPlaybackPosition:(double)arg1;
- (void)setSerialWorkQueue:(id)arg1;
- (void)setStreamPlaybackDidComplete:(id /* block */)arg1;
- (void)stop;
- (id /* block */)streamPlaybackDidComplete;

@end
