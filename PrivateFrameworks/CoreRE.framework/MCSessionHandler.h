/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreRE.framework/CoreRE
 */

@interface MCSessionHandler : NSObject <MCSessionPrivateDelegate> {
    struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle> >="m_allocator"^{Allocator {}  _handles;
    NSLock * _handlesLock;
    <MCSessionPrivateDelegate> * _nextDelegate;
    NSMutableDictionary * _peersToHandles;
    NSMutableArray * _pendingData;
    struct MultipeerProtocolLayer { int (**x1)(); struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x_1_2_1; } x_2_1_1; } x2; struct SharedPtr<re::internal::WeakCount> { struct WeakCount {} *x_3_1_1; } x3; struct Allocator {} *x4; struct ProtocolLayerListener {} *x5; struct PacketPool {} *x6; struct ObjCObject { id x_7_1_1; } x7; struct ObjCObject { id x_8_1_1; } x8; struct Address { struct DynamicString { struct Allocator {} *x_1_2_1; char *x_1_2_2; unsigned long long x_1_2_3; unsigned long long x_1_2_4; } x_9_1_1; } x9; struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_10_1_1; } x10; struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_2_1; BOOL x_1_2_2[40]; } x_11_1_1; } x11; } * _protocolLayer;
    MCSession * _session;
    struct DynamicArray<unsigned char> { 
        struct Allocator {} *m_allocator; 
        unsigned long long m_capacity; 
        unsigned long long m_size; 
        unsigned int m_version; 
        char *m_data; 
    }  _tempBuf;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle> >=^{Allocator {}*handles;
@property (nonatomic, retain) NSLock *handlesLock;
@property (readonly) unsigned long long hash;
@property (nonatomic) <MCSessionPrivateDelegate> *nextDelegate;
@property (nonatomic, retain) NSMutableDictionary *peersToHandles;
@property (nonatomic, retain) NSMutableArray *pendingData;
@property (nonatomic) /* Warning: unhandled struct encoding: '{MultipeerProtocolLayer=^^?{atomic<int>={__cxx_atomic_impl<int' */ struct *protocolLayer; /* unknown property attribute:  std::__1::__cxx_atomic_base_impl<int> >=Ai}}{SharedPtr<re::internal::WeakCount>=^{WeakCount}}^{Allocator}^{ProtocolLayerListener}^{PacketPool}{ObjCObject=@}{ObjCObject=@}{Address={DynamicString=^{Allocator}*QQ}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}} */
@property (nonatomic, retain) MCSession *session;
@property (readonly) Class superclass;
@property (nonatomic) struct DynamicArray<unsigned char> { struct Allocator {} *x1; unsigned long long x2; unsigned long long x3; unsigned int x4; char *x5; } tempBuf;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)dataForPacket:(const struct Packet { struct atomic<re::Packet *> { struct __cxx_atomic_impl<re::Packet *, std::__1::__cxx_atomic_base_impl<re::Packet *> > { _Atomic struct Packet {} *x_1_2_1; } x_1_1_1; } x1; void *x2; void *x3; unsigned int x4; unsigned int x5; int x6; void *x7; struct Packet {} *x8; }*)arg1 channel:(unsigned char)arg2;
- (void)dealloc;
- (struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle> >=^{Allocator {}*)handles;
- (id)handlesLock;
- (id)initWithSession:(id)arg1 protocolLayer:(struct MultipeerProtocolLayer { int (**x1)(); struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x_1_2_1; } x_2_1_1; } x2; struct SharedPtr<re::internal::WeakCount> { struct WeakCount {} *x_3_1_1; } x3; struct Allocator {} *x4; struct ProtocolLayerListener {} *x5; struct PacketPool {} *x6; struct ObjCObject { id x_7_1_1; } x7; struct ObjCObject { id x_8_1_1; } x8; struct Address { struct DynamicString { struct Allocator {} *x_1_2_1; char *x_1_2_2; unsigned long long x_1_2_3; unsigned long long x_1_2_4; } x_9_1_1; } x9; struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_10_1_1; } x10; struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_2_1; BOOL x_1_2_2[40]; } x_11_1_1; } x11; }*)arg2;
- (id)nextDelegate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)peersToHandles;
- (id)pendingData;
- (struct MultipeerProtocolLayer { int (**x1)(); struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x_1_2_1; } x_2_1_1; } x2; struct SharedPtr<re::internal::WeakCount> { struct WeakCount {} *x_3_1_1; } x3; struct Allocator {} *x4; struct ProtocolLayerListener {} *x5; struct PacketPool {} *x6; struct ObjCObject { id x_7_1_1; } x7; struct ObjCObject { id x_8_1_1; } x8; struct Address { struct DynamicString { struct Allocator {} *x_1_2_1; char *x_1_2_2; unsigned long long x_1_2_3; unsigned long long x_1_2_4; } x_9_1_1; } x9; struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_10_1_1; } x10; struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_2_1; BOOL x_1_2_2[40]; } x_11_1_1; } x11; }*)protocolLayer;
- (id)session;
- (void)session:(id)arg1 didFinishReceivingResourceWithName:(id)arg2 fromPeer:(id)arg3 atURL:(id)arg4 withError:(id)arg5 propagate:(bool*)arg6;
- (void)session:(id)arg1 didReceiveData:(id)arg2 fromPeer:(id)arg3 propagate:(bool*)arg4;
- (void)session:(id)arg1 didReceiveStream:(id)arg2 withName:(id)arg3 fromPeer:(id)arg4 propagate:(bool*)arg5;
- (void)session:(id)arg1 didStartReceivingResourceWithName:(id)arg2 fromPeer:(id)arg3 withProgress:(id)arg4 propagate:(bool*)arg5;
- (void)session:(id)arg1 peer:(id)arg2 didChangeState:(long long)arg3 propagate:(bool*)arg4;
- (void)setHandles:(struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle> >=^{Allocator {}*)arg1;
- (void)setHandlesLock:(id)arg1;
- (void)setNextDelegate:(id)arg1;
- (void)setPeersToHandles:(id)arg1;
- (void)setPendingData:(id)arg1;
- (void)setProtocolLayer:(struct MultipeerProtocolLayer { int (**x1)(); struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x_1_2_1; } x_2_1_1; } x2; struct SharedPtr<re::internal::WeakCount> { struct WeakCount {} *x_3_1_1; } x3; struct Allocator {} *x4; struct ProtocolLayerListener {} *x5; struct PacketPool {} *x6; struct ObjCObject { id x_7_1_1; } x7; struct ObjCObject { id x_8_1_1; } x8; struct Address { struct DynamicString { struct Allocator {} *x_1_2_1; char *x_1_2_2; unsigned long long x_1_2_3; unsigned long long x_1_2_4; } x_9_1_1; } x9; struct mutex { struct _opaque_pthread_mutex_t { long long x_1_2_1; BOOL x_1_2_2[56]; } x_10_1_1; } x10; struct condition_variable { struct _opaque_pthread_cond_t { long long x_1_2_1; BOOL x_1_2_2[40]; } x_11_1_1; } x11; }*)arg1;
- (void)setSession:(id)arg1;
- (void)setTempBuf:(struct DynamicArray<unsigned char> { struct Allocator {} *x1; unsigned long long x2; unsigned long long x3; unsigned int x4; char *x5; })arg1;
- (struct DynamicArray<unsigned char> { struct Allocator {} *x1; unsigned long long x2; unsigned long long x3; unsigned int x4; char *x5; })tempBuf;

@end
