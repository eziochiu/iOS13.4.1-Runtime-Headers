/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation
 */

@interface MNSessionUpdateManager : NSObject <GEOTransitRouteUpdaterDelegate> {
    GEOApplicationAuditToken * _auditToken;
    <MNSessionUpdateManagerDelegate> * _delegate;
    double  _etaRequestInterval;
    NSTimer * _etaTimer;
    double  _initialRequestDelay;
    bool  _isPaused;
    unsigned long long  _maxAlternateRoutesCount;
    double  _opportunisticRequestTimeWindow;
    GEOETATrafficUpdateRequest * _pendingETARequest;
    NSString * _requestingAppIdentifier;
    NSMutableDictionary * _subscribers;
    GEODataRequestThrottlerToken * _throttleToken;
    GEOTransitRouteUpdater * _transitUpdater;
}

@property (nonatomic, retain) GEOApplicationAuditToken *auditToken;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MNSessionUpdateManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) double etaRequestInterval;
@property (readonly) unsigned long long hash;
@property (nonatomic) double initialRequestDelay;
@property (nonatomic) unsigned long long maxAlternateRoutesCount;
@property (nonatomic) double opportunisticRequestTimeWindow;
@property (nonatomic, copy) NSString *requestingAppIdentifier;
@property (readonly) Class superclass;
@property (nonatomic, retain) GEODataRequestThrottlerToken *throttleToken;

- (void).cxx_destruct;
- (id)_baseETARequest;
- (void)_continueETARequests;
- (void)_handleETAResponse:(id)arg1 forRouteInfo:(id)arg2 request:(id)arg3 error:(id)arg4;
- (bool)_hasAtLeastOneActiveSubscriber;
- (void)_scheduleETATimerWithInterval:(double)arg1;
- (void)_sendETARequest;
- (void)_terminateETARequests;
- (bool)_updateETARequest:(id)arg1 withRouteInfo:(id)arg2 andUserLocation:(id)arg3;
- (void)_updateETAResponse:(id)arg1 withRemainingDistanceFromRequest:(id)arg2;
- (id)auditToken;
- (void)dealloc;
- (id)delegate;
- (double)etaRequestInterval;
- (id)init;
- (double)initialRequestDelay;
- (unsigned long long)maxAlternateRoutesCount;
- (double)opportunisticRequestTimeWindow;
- (void)pauseUpdateRequestsForSubscriber:(id)arg1;
- (id)requestingAppIdentifier;
- (void)restartUpdateTimer;
- (void)resumeUpdateRequestsForSubscriber:(id)arg1;
- (void)setAuditToken:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEtaRequestInterval:(double)arg1;
- (void)setInitialRequestDelay:(double)arg1;
- (void)setMaxAlternateRoutesCount:(unsigned long long)arg1;
- (void)setOpportunisticRequestTimeWindow:(double)arg1;
- (void)setRequestingAppIdentifier:(id)arg1;
- (void)setThrottleToken:(id)arg1;
- (void)startUpdateRequestsForRoutes:(id)arg1 andNavigationType:(int)arg2;
- (void)stopUpdateRequests;
- (id)throttleToken;
- (void)transitRouteUpdater:(id)arg1 didFailUpdateForRouteIDs:(id)arg2 withError:(id)arg3;
- (void)transitRouteUpdater:(id)arg1 didReceiveResponse:(id)arg2;
- (void)transitRouteUpdater:(id)arg1 didUpdateTransitRoutes:(id)arg2;
- (void)transitRouteUpdater:(id)arg1 willSendRequests:(id)arg2;
- (void)transitRouteUpdater:(id)arg1 willUpdateTransitForRouteIDs:(id)arg2;

@end
