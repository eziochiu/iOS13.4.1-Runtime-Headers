/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
 */

@interface TSWPDropCapBackgroundAdornment : NSObject <TSWPLineFragmentAdornment> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _bounds;
    TSUColor * _color;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isBackground;
@property (readonly) Class superclass;

- (void)dealloc;
- (void)drawAdornmentForFragment:(const struct TSWPLineFragment { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned int x4; double x5; double x6; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_7_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_7_1_2; } x7; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_8_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_8_1_2; } x8; struct { double x_9_1_1; double x_9_1_2; double x_9_1_3; double x_9_1_4; double x_9_1_5; double x_9_1_6; double x_9_1_7; double x_9_1_8; } x9; struct TSWPListLabel {} *x10; id x11; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_12_1_1; struct TSWPLineRef {} *x_12_1_2; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_3_2_1; } x_12_1_3; } x12; double x13; struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_14_1_1; struct TSWPLineRef {} *x_14_1_2; struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef> > { struct TSWPLineRef {} *x_3_2_1; } x_14_1_3; } x14; }*)arg1 inContext:(struct CGContext { }*)arg2 withFlags:(unsigned int)arg3 state:(const struct TSWPDrawingState { id x1; id x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; id x4; id x5; unsigned long long x6; struct CGColor {} *x7; double x8; bool x9; bool x10; bool x11; bool x12; bool x13; bool x14; bool x15; struct TSWPRangeVector { struct _NSRange {} *x_16_1_1; struct _NSRange {} *x_16_1_2; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange {} *x_3_2_1; } x_16_1_3; } x16; struct TSWPRangeVector { struct _NSRange {} *x_17_1_1; struct _NSRange {} *x_17_1_2; struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange> > { struct _NSRange {} *x_3_2_1; } x_17_1_3; } x17; struct _NSRange { unsigned long long x_18_1_1; unsigned long long x_18_1_2; } x18; struct TSWPRangeVector {} *x19; struct TSWPRangeVector {} *x20; struct _NSRange { unsigned long long x_21_1_1; unsigned long long x_21_1_2; } x21; struct _NSRange { unsigned long long x_22_1_1; unsigned long long x_22_1_2; } x22; unsigned long long x23; }*)arg4 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5;
- (id)initWithColor:(id)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)isBackground;

@end
