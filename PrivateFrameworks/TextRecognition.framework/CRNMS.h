/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/TextRecognition.framework/TextRecognition
 */

@interface CRNMS : NSObject {
    struct PyramidNMS<unsigned short, float, unsigned char> { 
        int (**_vptr$PyramidNMS)(); 
        struct deque<bool, std::__1::allocator<bool> > { 
            struct __split_buffer<bool *, std::__1::allocator<bool *> > { 
                bool **__first_; 
                bool **__begin_; 
                bool **__end_; 
                struct __compressed_pair<bool **, std::__1::allocator<bool *> > { 
                    bool **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<bool> > { 
                unsigned long long __value_; 
            } __size_; 
        } fullySpecifiedForests; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { 
                unsigned long long __value_; 
            } __size_; 
        } masksValid; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { 
                unsigned long long __value_; 
            } __size_; 
        } masksInvalid; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { 
                unsigned long long __value_; 
            } __size_; 
        } masksPendingInvalid; 
        struct deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > > { 
            struct __split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> > { 
                struct valarray<float> {} **__first_; 
                struct valarray<float> {} **__begin_; 
                struct valarray<float> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> > { 
                    struct valarray<float> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > > { 
                unsigned long long __value_; 
            } __size_; 
        } ipus; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordCoincide; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordCoincide; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordContain; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordContain; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordConstitute; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordConstitute; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordOverlap; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordOverlap; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineCoincide; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineCoincide; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineContain; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineContain; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineConstitute; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineConstitute; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineOverlap; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineOverlap; 
        struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > {} *pForests; 
        struct PyramidNMSConfig { 
            int (**_vptr$PyramidNMSConfig)(); 
            unsigned long long method; 
            unsigned long long ipuNumSamples; 
            double ipuValidMinThreshold; 
            double ipuUniformityMinThreshold; 
            double ipuNegativeHSpacingToWidthRatioMaxThreshold; 
            double ipuNumNegativeHSpacingsMaxThreshold; 
            bool ipuUseNumChars; 
            unsigned long long ipuNumCharsUpperClip; 
            bool ipuUseWidthUniformity; 
            bool ipuUseAreaUniformoity; 
            bool ipuUseHSpacingUniformity; 
            bool ipuUseCenterHeightUniformity; 
            bool ipuUseScaleIndex; 
            double containmentIPUCompetingScaledMinThreshold; 
            unsigned long long containmentNumLowerLevelDatumCompetingMinThreshold; 
            double containmentContainingDatumCrossLevelIntersectionMaxThreshold; 
            double containmentInvalidSubdatumPercentageMaxThreshold; 
            double containmentInvalidDatumContainingIOMinMinThreshold; 
            bool pendingInvalidRejectCompetingDatums; 
            bool filterByIPUAndUniformity; 
            bool processCoincidence; 
            bool processContainment; 
            bool processOverlap; 
            bool useOverlappingWordsInProcessingContainment; 
            bool processPendingInvalid; 
            double lineCoincidenceIOUMinThreshold; 
            double lineCoincidenceIOMinMinThreshold; 
            double lineContainmentIOUMaxThreshold; 
            double lineContainmentIOMinMinThreshold; 
            double lineConstitutionIOUMaxThreshold; 
            double lineConstitutionIOMinMinThreshold; 
            double lineOverlapIOUMinThreshold; 
            double lineOverlapIOUMaxThreshold; 
            double lineOverlapIOMinMinThreshold; 
            double lineOverlapIOMinMaxThreshold; 
            double wordCoincidenceIOUMinThreshold; 
            double wordCoincidenceIOMinMinThreshold; 
            double wordContainmentIOUMaxThreshold; 
            double wordContainmentIOMinMinThreshold; 
            double wordConstitutionIOUMaxThreshold; 
            double wordConstitutionIOMinMinThreshold; 
            double wordOverlapIOUMinThreshold; 
            double wordOverlapIOUMaxThreshold; 
            double wordOverlapIOMinMinThreshold; 
            double wordOverlapIOMinMaxThreshold; 
        } config; 
    }  _lineNMS;
    struct PyramidTokenizer<unsigned short, float> { 
        int (**_vptr$PyramidTokenizer)(); 
        struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > {} *pForests; 
        struct PyramidTokenizerConfig { 
            int (**_vptr$PyramidTokenizerConfig)(); 
            bool isRecursive; 
            double spacingClipMin; 
            double spacingUniformityMinThresholdClipMin; 
            double spacingUniformityMinThresholdClipMax; 
            double spacingUniformityMinThresholdTrueProbability; 
            double spacingRatioMultiplier; 
            bool useAdpativeSpacingRatioMultiplier; 
            unsigned long long adpativeSpacingRatioMultiplierMinNumRects; 
            double adaptiveSpacingRatioMultiplierMinVariationThreshold; 
            double adaptiveSpacingRatioMultiplierLowerBound; 
            unsigned long long singleTokenNumCharsMaxThreshold; 
            unsigned long long singleTokenNumCutpointCandidatesMaxThreshold; 
        } config; 
    }  _lineTokenizer;
    struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > { 
        struct __split_buffer<nms::RectForest<unsigned short, float> *, std::__1::allocator<nms::RectForest<unsigned short, float> *> > { 
            struct RectForest<unsigned short, float> {} **__first_; 
            struct RectForest<unsigned short, float> {} **__begin_; 
            struct RectForest<unsigned short, float> {} **__end_; 
            struct __compressed_pair<nms::RectForest<unsigned short, float> **, std::__1::allocator<nms::RectForest<unsigned short, float> *> > { 
                struct RectForest<unsigned short, float> {} **__value_; 
            } __end_cap_; 
        } __map_; 
        unsigned long long __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, float> > > { 
            unsigned long long __value_; 
        } __size_; 
    }  _postLineNMSForests;
    struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > { 
        struct __split_buffer<nms::RectForest<unsigned short, float> *, std::__1::allocator<nms::RectForest<unsigned short, float> *> > { 
            struct RectForest<unsigned short, float> {} **__first_; 
            struct RectForest<unsigned short, float> {} **__begin_; 
            struct RectForest<unsigned short, float> {} **__end_; 
            struct __compressed_pair<nms::RectForest<unsigned short, float> **, std::__1::allocator<nms::RectForest<unsigned short, float> *> > { 
                struct RectForest<unsigned short, float> {} **__value_; 
            } __end_cap_; 
        } __map_; 
        unsigned long long __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, float> > > { 
            unsigned long long __value_; 
        } __size_; 
    }  _postWordNMSForests;
    struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > { 
        struct __split_buffer<nms::RectForest<unsigned short, float> *, std::__1::allocator<nms::RectForest<unsigned short, float> *> > { 
            struct RectForest<unsigned short, float> {} **__first_; 
            struct RectForest<unsigned short, float> {} **__begin_; 
            struct RectForest<unsigned short, float> {} **__end_; 
            struct __compressed_pair<nms::RectForest<unsigned short, float> **, std::__1::allocator<nms::RectForest<unsigned short, float> *> > { 
                struct RectForest<unsigned short, float> {} **__value_; 
            } __end_cap_; 
        } __map_; 
        unsigned long long __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, float> > > { 
            unsigned long long __value_; 
        } __size_; 
    }  _wordForests;
    struct PyramidNMS<unsigned short, float, unsigned char> { 
        int (**_vptr$PyramidNMS)(); 
        struct deque<bool, std::__1::allocator<bool> > { 
            struct __split_buffer<bool *, std::__1::allocator<bool *> > { 
                bool **__first_; 
                bool **__begin_; 
                bool **__end_; 
                struct __compressed_pair<bool **, std::__1::allocator<bool *> > { 
                    bool **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<bool> > { 
                unsigned long long __value_; 
            } __size_; 
        } fullySpecifiedForests; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { 
                unsigned long long __value_; 
            } __size_; 
        } masksValid; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { 
                unsigned long long __value_; 
            } __size_; 
        } masksInvalid; 
        struct deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > > { 
            struct __split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> > { 
                struct valarray<bool> {} **__first_; 
                struct valarray<bool> {} **__begin_; 
                struct valarray<bool> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> > { 
                    struct valarray<bool> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > > { 
                unsigned long long __value_; 
            } __size_; 
        } masksPendingInvalid; 
        struct deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > > { 
            struct __split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> > { 
                struct valarray<float> {} **__first_; 
                struct valarray<float> {} **__begin_; 
                struct valarray<float> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> > { 
                    struct valarray<float> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > > { 
                unsigned long long __value_; 
            } __size_; 
        } ipus; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordCoincide; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordCoincide; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordContain; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordContain; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordConstitute; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordConstitute; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsWordOverlap; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsWordOverlap; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineCoincide; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineCoincide; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineContain; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineContain; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineConstitute; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineConstitute; 
        struct deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
            struct __split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                struct valarray<unsigned char> {} **__first_; 
                struct valarray<unsigned char> {} **__begin_; 
                struct valarray<unsigned char> {} **__end_; 
                struct __compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> > { 
                    struct valarray<unsigned char> {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > > { 
                unsigned long long __value_; 
            } __size_; 
        } histsLineOverlap; 
        struct deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
            struct __split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__first_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__begin_; 
                struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__end_; 
                struct __compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> > { 
                    struct deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > {} **__value_; 
                } __end_cap_; 
            } __map_; 
            unsigned long long __start_; 
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > > { 
                unsigned long long __value_; 
            } __size_; 
        } idxsLineOverlap; 
        struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > {} *pForests; 
        struct PyramidNMSConfig { 
            int (**_vptr$PyramidNMSConfig)(); 
            unsigned long long method; 
            unsigned long long ipuNumSamples; 
            double ipuValidMinThreshold; 
            double ipuUniformityMinThreshold; 
            double ipuNegativeHSpacingToWidthRatioMaxThreshold; 
            double ipuNumNegativeHSpacingsMaxThreshold; 
            bool ipuUseNumChars; 
            unsigned long long ipuNumCharsUpperClip; 
            bool ipuUseWidthUniformity; 
            bool ipuUseAreaUniformoity; 
            bool ipuUseHSpacingUniformity; 
            bool ipuUseCenterHeightUniformity; 
            bool ipuUseScaleIndex; 
            double containmentIPUCompetingScaledMinThreshold; 
            unsigned long long containmentNumLowerLevelDatumCompetingMinThreshold; 
            double containmentContainingDatumCrossLevelIntersectionMaxThreshold; 
            double containmentInvalidSubdatumPercentageMaxThreshold; 
            double containmentInvalidDatumContainingIOMinMinThreshold; 
            bool pendingInvalidRejectCompetingDatums; 
            bool filterByIPUAndUniformity; 
            bool processCoincidence; 
            bool processContainment; 
            bool processOverlap; 
            bool useOverlappingWordsInProcessingContainment; 
            bool processPendingInvalid; 
            double lineCoincidenceIOUMinThreshold; 
            double lineCoincidenceIOMinMinThreshold; 
            double lineContainmentIOUMaxThreshold; 
            double lineContainmentIOMinMinThreshold; 
            double lineConstitutionIOUMaxThreshold; 
            double lineConstitutionIOMinMinThreshold; 
            double lineOverlapIOUMinThreshold; 
            double lineOverlapIOUMaxThreshold; 
            double lineOverlapIOMinMinThreshold; 
            double lineOverlapIOMinMaxThreshold; 
            double wordCoincidenceIOUMinThreshold; 
            double wordCoincidenceIOMinMinThreshold; 
            double wordContainmentIOUMaxThreshold; 
            double wordContainmentIOMinMinThreshold; 
            double wordConstitutionIOUMaxThreshold; 
            double wordConstitutionIOMinMinThreshold; 
            double wordOverlapIOUMinThreshold; 
            double wordOverlapIOUMaxThreshold; 
            double wordOverlapIOMinMinThreshold; 
            double wordOverlapIOMinMaxThreshold; 
        } config; 
    }  _wordNMS;
    struct PyramidTokenizer<unsigned short, float> { 
        int (**_vptr$PyramidTokenizer)(); 
        struct deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > > {} *pForests; 
        struct PyramidTokenizerConfig { 
            int (**_vptr$PyramidTokenizerConfig)(); 
            bool isRecursive; 
            double spacingClipMin; 
            double spacingUniformityMinThresholdClipMin; 
            double spacingUniformityMinThresholdClipMax; 
            double spacingUniformityMinThresholdTrueProbability; 
            double spacingRatioMultiplier; 
            bool useAdpativeSpacingRatioMultiplier; 
            unsigned long long adpativeSpacingRatioMultiplierMinNumRects; 
            double adaptiveSpacingRatioMultiplierMinVariationThreshold; 
            double adaptiveSpacingRatioMultiplierLowerBound; 
            unsigned long long singleTokenNumCharsMaxThreshold; 
            unsigned long long singleTokenNumCutpointCandidatesMaxThreshold; 
        } config; 
    }  _wordTokenizer;
    unsigned long long  secondRoundNMSOnLines;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)addDocument:(struct Document { int (**x1)(); struct Mat { int (**x_2_1_1)(); char *x_2_1_2; int x_2_1_3; int x_2_1_4; int x_2_1_5; int x_2_1_6[32]; int x_2_1_7[32]; struct SmartPtr { int (**x_8_2_1)(); void *x_8_2_2; int *x_8_2_3; } x_2_1_8; int x_2_1_9; int x_2_1_10; int x_2_1_11[32]; int x_2_1_12[32]; unsigned long long x_2_1_13; } x2; struct vector<TextDetector::Stroke, std::__1::allocator<TextDetector::Stroke> > { struct Stroke {} *x_3_1_1; struct Stroke {} *x_3_1_2; struct __compressed_pair<TextDetector::Stroke *, std::__1::allocator<TextDetector::Stroke> > { struct Stroke {} *x_3_2_1; } x_3_1_3; } x3[2]; struct vector<TextDetector::Character, std::__1::allocator<TextDetector::Character> > { struct Character {} *x_4_1_1; struct Character {} *x_4_1_2; struct __compressed_pair<TextDetector::Character *, std::__1::allocator<TextDetector::Character> > { struct Character {} *x_3_2_1; } x_4_1_3; } x4[2]; struct vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> > { struct Word {} *x_5_1_1; struct Word {} *x_5_1_2; struct __compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> > { struct Word {} *x_3_2_1; } x_5_1_3; } x5; }*)arg1 withIncludedCandidates:(const struct vector<bool, std::__1::allocator<bool> > { unsigned long long *x1; unsigned long long x2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long x_3_1_1; } x3; }*)arg2 options:(id)arg3;
- (bool)addTextFeatures:(id)arg1 options:(id)arg2;
- (bool)buildRectForest:(struct RectForest<unsigned short, float> { int (**x1)(); unsigned long long x2; unsigned long long x3; struct deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > > { struct __split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> > { struct valarray<float> {} **x_1_2_1; struct valarray<float> {} **x_1_2_2; struct valarray<float> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> > { struct valarray<float> {} **x_4_3_1; } x_1_2_4; } x_4_1_1; unsigned long long x_4_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > > { unsigned long long x_3_2_1; } x_4_1_3; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_4_3_1; } x_1_2_4; } x_5_1_1; } x5; }*)arg1 fromDocument:(struct Document { int (**x1)(); struct Mat { int (**x_2_1_1)(); char *x_2_1_2; int x_2_1_3; int x_2_1_4; int x_2_1_5; int x_2_1_6[32]; int x_2_1_7[32]; struct SmartPtr { int (**x_8_2_1)(); void *x_8_2_2; int *x_8_2_3; } x_2_1_8; int x_2_1_9; int x_2_1_10; int x_2_1_11[32]; int x_2_1_12[32]; unsigned long long x_2_1_13; } x2; struct vector<TextDetector::Stroke, std::__1::allocator<TextDetector::Stroke> > { struct Stroke {} *x_3_1_1; struct Stroke {} *x_3_1_2; struct __compressed_pair<TextDetector::Stroke *, std::__1::allocator<TextDetector::Stroke> > { struct Stroke {} *x_3_2_1; } x_3_1_3; } x3[2]; struct vector<TextDetector::Character, std::__1::allocator<TextDetector::Character> > { struct Character {} *x_4_1_1; struct Character {} *x_4_1_2; struct __compressed_pair<TextDetector::Character *, std::__1::allocator<TextDetector::Character> > { struct Character {} *x_3_2_1; } x_4_1_3; } x4[2]; struct vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> > { struct Word {} *x_5_1_1; struct Word {} *x_5_1_2; struct __compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> > { struct Word {} *x_3_2_1; } x_5_1_3; } x5; }*)arg2 withIncludedCandidates:(const struct vector<bool, std::__1::allocator<bool> > { unsigned long long *x1; unsigned long long x2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long> > { unsigned long long x_3_1_1; } x3; }*)arg3 options:(id)arg4;
- (bool)buildRectForest:(struct RectForest<unsigned short, float> { int (**x1)(); unsigned long long x2; unsigned long long x3; struct deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > > { struct __split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> > { struct valarray<float> {} **x_1_2_1; struct valarray<float> {} **x_1_2_2; struct valarray<float> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> > { struct valarray<float> {} **x_4_3_1; } x_1_2_4; } x_4_1_1; unsigned long long x_4_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > > { unsigned long long x_3_2_1; } x_4_1_3; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_4_3_1; } x_1_2_4; } x_5_1_1; } x5; }*)arg1 fromTextFeatures:(id)arg2 options:(id)arg3;
- (id)buildTextFeaturesFromRectForest:(const struct RectForest<unsigned short, float> { int (**x1)(); unsigned long long x2; unsigned long long x3; struct deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > > { struct __split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> > { struct valarray<float> {} **x_1_2_1; struct valarray<float> {} **x_1_2_2; struct valarray<float> {} **x_1_2_3; struct __compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> > { struct valarray<float> {} **x_4_3_1; } x_1_2_4; } x_4_1_1; unsigned long long x_4_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > > { unsigned long long x_3_2_1; } x_4_1_3; } x4; struct deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > > { struct __split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_1; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_2; struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_1_2_3; struct __compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> > { struct deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > {} **x_4_3_1; } x_1_2_4; } x_5_1_1; } x5; }*)arg1 byEdge:(unsigned long long)arg2 options:(id)arg3;
- (unsigned long long)convertSubTextFeatures:(id)arg1 toRects:(struct valarray<float> { float *x1; float *x2; }*)arg2;
- (void)fillRectForestDatum:(struct slice_array<float> { float *x1; unsigned long long x2; unsigned long long x3; }*)arg1 withCGRect:(const struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (bool)fillRectForestDatum:(struct slice_array<float> { float *x1; unsigned long long x2; unsigned long long x3; }*)arg1 withRect:(const struct Rect_<int> { int (**x1)(); int x2; int x3; int x4; int x5; }*)arg2 normalizedByPlaneWidth:(unsigned long long)arg3 andPlaneHeight:(unsigned long long)arg4;
- (void)fillTextFeature:(id)arg1 withRectDatum:(const struct valarray<float> { float *x1; float *x2; }*)arg2;
- (id)generateConsolidatedTextFeatures:(id)arg1;
- (id)initWithOptions:(id)arg1;
- (unsigned long long)tokenizeTextFeature:(id)arg1 intoCutpoints:(struct deque<unsigned short, std::__1::allocator<unsigned short> > { struct __split_buffer<unsigned short *, std::__1::allocator<unsigned short *> > { unsigned short **x_1_1_1; unsigned short **x_1_1_2; unsigned short **x_1_1_3; struct __compressed_pair<unsigned short **, std::__1::allocator<unsigned short *> > { unsigned short **x_4_2_1; } x_1_1_4; } x1; unsigned long long x2; struct __compressed_pair<unsigned long, std::__1::allocator<unsigned short> > { unsigned long long x_3_1_1; } x3; }*)arg2 options:(id)arg3;

@end
