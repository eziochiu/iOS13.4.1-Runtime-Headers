/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
 */

@interface GKMultiplayerViewController : GKCollectionViewController <GKMessageComposeViewControllerDelegate, GKMultiplayerPlayerCountViewControllerDelegate> {
    bool  _addButtonEnabled;
    GKMultiplayerButtonFooterView * _buttonFooterView;
    GKMultiplayerButtonHeaderView * _buttonHeaderView;
    NSString * _defaultInvitationMessage;
    bool  _didAcceptGameInvite;
    bool  _didStartForcedAutomatch;
    GKGame * _game;
    long long  _invitationType;
    GKMessageComposeViewController * _inviteController;
    GKMatchRequest * _matchRequest;
    <GKDashboardNearbyBrowserDelegate> * _nearbyDelegate;
    bool  _needsFloatIn;
    GKMatchRequest * _originalMatchRequest;
    GKDashboardMultiplayerPickerViewController * _picker;
    NSDictionary * _playerNamesToPlayers;
    NSURL * _shareURL;
    bool  _showCancelButton;
    GKDispatchGroup * _urlPreloadGroup;
}

@property (nonatomic) bool addButtonEnabled;
@property (nonatomic, retain) GKMultiplayerButtonFooterView *buttonFooterView;
@property (nonatomic, retain) GKMultiplayerButtonHeaderView *buttonHeaderView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSString *defaultInvitationMessage;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didAcceptGameInvite;
@property (nonatomic) bool didStartForcedAutomatch;
@property (nonatomic, retain) GKGame *game;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long invitationType;
@property (nonatomic, retain) GKMessageComposeViewController *inviteController;
@property (nonatomic, readonly, copy) GKMatchRequest *matchRequest;
@property (nonatomic, readonly) GKMultiplayerDataSource *multiplayerDataSource;
@property (nonatomic) <GKDashboardNearbyBrowserDelegate> *nearbyDelegate;
@property (nonatomic) bool needsFloatIn;
@property (nonatomic, readonly, copy) GKMatchRequest *originalMatchRequest;
@property (nonatomic, retain) GKDashboardMultiplayerPickerViewController *picker;
@property (nonatomic, retain) NSDictionary *playerNamesToPlayers;
@property (nonatomic, retain) NSURL *shareURL;
@property (nonatomic) bool showCancelButton;
@property (readonly) Class superclass;
@property (nonatomic, retain) GKDispatchGroup *urlPreloadGroup;

- (void)addAutomatchPlayer;
- (bool)addButtonEnabled;
- (bool)allowPlayerCountSelection;
- (void)animateBubblesInIfNeeded;
- (id)buttonFooterView;
- (id)buttonHeaderView;
- (bool)canStartForcedAutomatch;
- (void)cancel;
- (void)cancelButtonPressed;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)configureConstraintsForSubviews;
- (void)configureDataSource;
- (void)configureSubviewsForIOS;
- (void)dataSource:(id)arg1 didInsertItemsAtIndexPaths:(id)arg2;
- (void)dataSource:(id)arg1 didRefreshItemsAtIndexPaths:(id)arg2;
- (void)dataSource:(id)arg1 didRemoveItemsAtIndexPaths:(id)arg2;
- (void)dealloc;
- (id)defaultInvitationMessage;
- (void)determineInvitationType;
- (bool)didAcceptGameInvite;
- (void)didEnterLoadedState;
- (void)didFinishPickingPlayers:(id)arg1;
- (void)didSelectPlayerCountHeader:(id)arg1;
- (bool)didStartForcedAutomatch;
- (id)game;
- (void)handleServiceUnavailable:(id)arg1;
- (id)init;
- (id)initWithMatchRequest:(id)arg1;
- (long long)invitationType;
- (void)inviteButtonPressed;
- (id)inviteController;
- (void)invitePlayers:(id)arg1;
- (void)invitePlayers:(id)arg1 contactPlayers:(id)arg2;
- (void)loadShareURLWithCompletion:(id /* block */)arg1;
- (void)loadView;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (id)matchRequest;
- (long long)maxAvailablePlayers;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2 message:(id)arg3 contactPlayers:(id)arg4 friendPlayers:(id)arg5;
- (void)messageComposeViewController:(id)arg1 willPresentPlayerPicker:(id)arg2;
- (id)multiplayerDataSource;
- (void)multiplayerPlayerCountViewController:(id)arg1 didSelectValue:(long long)arg2;
- (id)nearbyDelegate;
- (bool)needsFloatIn;
- (id)originalMatchRequest;
- (id)picker;
- (void)playButtonPressed;
- (void)playNow;
- (id)playerNamesToPlayers;
- (void)playersToInvite:(id)arg1;
- (void)preloadShareURL;
- (void)removeAutomatchPlayer;
- (void)removePlayer:(id)arg1;
- (void)removedPlayer:(id)arg1;
- (void)setAddButtonEnabled:(bool)arg1;
- (void)setButtonFooterView:(id)arg1;
- (void)setButtonHeaderView:(id)arg1;
- (void)setDefaultInvitationMessage:(id)arg1;
- (void)setDidAcceptGameInvite:(bool)arg1;
- (void)setDidStartForcedAutomatch:(bool)arg1;
- (void)setGame:(id)arg1;
- (void)setInvitationType:(long long)arg1;
- (void)setInviteController:(id)arg1;
- (void)setInvitesFailedWithError:(id)arg1;
- (void)setNearbyDelegate:(id)arg1;
- (void)setNeedsFloatIn:(bool)arg1;
- (void)setPicker:(id)arg1;
- (void)setPlayerNamesToPlayers:(id)arg1;
- (void)setShareURL:(id)arg1;
- (void)setShowCancelButton:(bool)arg1;
- (void)setUrlPreloadGroup:(id)arg1;
- (void)setupCancelButton;
- (void)share;
- (void)shareButtonPressed;
- (void)shareFinishedWithContactPlayers:(id)arg1 legacyPlayers:(id)arg2;
- (id)shareURL;
- (bool)showCancelButton;
- (void)showCollectionView;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateButtonViewsWithStatus:(id)arg1;
- (void)updateUIActionsEnabled:(bool)arg1;
- (void)updateVisibleRemoveButtons;
- (id)urlPreloadGroup;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillAppear:(bool)arg1;
- (void)willPresentPlayerPicker:(id)arg1;
- (void)willQueryGKIDs;
- (void)willShare;

@end
