/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PodcastsKit.framework/PodcastsKit
 */

@interface IMPlayerItem : NSObject {
    NSString * _album;
    bool  _areChaptersLoaded;
    bool  _areChaptersLoading;
    AVURLAsset * _asset;
    NSString * _author;
    NSObject<OS_dispatch_queue> * _chapterLoadingQueue;
    NSArray * _chapters;
    MPNowPlayingContentItem * _contentItem;
    double  _duration;
    NSUUID * _instanceIdentifier;
    IMPlayerManifest * _manifest;
    unsigned long long  _manifestIndex;
    double  _playhead;
    NSString * _title;
    NSURL * _url;
    bool  _video;
}

@property (nonatomic, copy) NSString *album;
@property (nonatomic) bool areChaptersLoaded;
@property (nonatomic) bool areChaptersLoading;
@property (nonatomic, readonly) AVURLAsset *asset;
@property (nonatomic, copy) NSString *author;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *chapterLoadingQueue;
@property (nonatomic, retain) NSArray *chapters;
@property (nonatomic, retain) MPNowPlayingContentItem *contentItem;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSUUID *instanceIdentifier;
@property (getter=isLocal, nonatomic, readonly) bool local;
@property (nonatomic) IMPlayerManifest *manifest;
@property (nonatomic) unsigned long long manifestIndex;
@property (nonatomic, readonly) NSArray *metadataChapters;
@property (getter=isPlayable, nonatomic, readonly) bool playable;
@property (nonatomic) double playhead;
@property (nonatomic, readonly) NSArray *timeChapters;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) NSURL *url;
@property (getter=isVideo, setter=setIsVideo:, nonatomic) bool video;

+ (id)createAssetForUrl:(id)arg1;

- (void).cxx_destruct;
- (bool)_isContentItemLoaded;
- (id)album;
- (bool)areChaptersLoaded;
- (bool)areChaptersLoading;
- (id)artworkIdentifier;
- (id)asset;
- (id)author;
- (void)beginLoadingArtworkForAVPlayerItem:(id)arg1;
- (id)chapterLoadingQueue;
- (id)chapters;
- (id)contentItem;
- (id)contentItemIdentifier;
- (double)duration;
- (id)externalMetadata;
- (unsigned long long)hash;
- (id)init;
- (id)initWithAsset:(id)arg1;
- (id)initWithUrl:(id)arg1;
- (id)instanceIdentifier;
- (void)invalidateAsset;
- (bool)isAssetLoaded;
- (bool)isEqual:(id)arg1;
- (bool)isLocal;
- (bool)isPlayable;
- (bool)isVideo;
- (void)loadChapters;
- (id)manifest;
- (unsigned long long)manifestIndex;
- (id)metadataChapters;
- (bool)notifyUserIsNotPlayable;
- (double)playhead;
- (void)recreateContentItem;
- (void)reset;
- (void)retrieveArtwork:(id /* block */)arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
- (void)retrieveArtwork:(id /* block */)arg1 withSize:(struct CGSize { double x1; double x2; })arg2 atTime:(double)arg3;
- (void)setAlbum:(id)arg1;
- (void)setAreChaptersLoaded:(bool)arg1;
- (void)setAreChaptersLoading:(bool)arg1;
- (void)setAuthor:(id)arg1;
- (void)setChapterLoadingQueue:(id)arg1;
- (void)setChapters:(id)arg1;
- (void)setContentItem:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setInstanceIdentifier:(id)arg1;
- (void)setIsVideo:(bool)arg1;
- (void)setManifest:(id)arg1;
- (void)setManifestIndex:(unsigned long long)arg1;
- (void)setPlayhead:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setUrl:(id)arg1;
- (id)subtitle;
- (id)timeChapters;
- (id)title;
- (void)updateActivity:(id)arg1;
- (void)updateContentItem;
- (id)url;

@end
