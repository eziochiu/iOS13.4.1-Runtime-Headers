/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/NotesUI.framework/NotesUI
 */

@interface NoteContentLayer : UIView <NoteHTMLEditorViewActionDelegate, NoteHTMLEditorViewDelegate, NoteHTMLEditorViewLayoutDelegate, UIScrollViewDelegate> {
    bool  _allowsAttachments;
    <NoteContentLayerAttachmentPresentationDelegate> * _attachmentPresentationDelegate;
    bool  _containsCJK;
    NoteDateLabel * _dateLabel;
    <NoteContentLayerDelegate> * _delegate;
    NSArray * _horizontalConstraints;
    NoteHTMLEditorView * _noteHTMLEditorView;
    bool  _showsDateLabel;
    <NotesTextureScrolling> * _textureScrollingDelegate;
    bool  _tracksMaximumContentLength;
    bool  _updatedTitleRange;
}

@property (nonatomic) bool allowsAttachments;
@property (nonatomic) <NoteContentLayerAttachmentPresentationDelegate> *attachmentPresentationDelegate;
@property (nonatomic) bool containsCJK;
@property (nonatomic, readonly) bool contentContainsValuableContent;
@property (nonatomic) struct CGPoint { double x1; double x2; } contentOffset;
@property (nonatomic, retain) NoteDateLabel *dateLabel;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NoteContentLayerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEditable, nonatomic) bool editable;
@property (nonatomic, readonly) bool hasFullHeight;
@property (nonatomic, readonly) bool hasFullWidth;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSArray *horizontalConstraints;
@property (nonatomic, retain) NoteHTMLEditorView *noteHTMLEditorView;
@property (nonatomic) bool showsDateLabel;
@property (readonly) Class superclass;
@property (nonatomic) <NotesTextureScrolling> *textureScrollingDelegate;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic) bool tracksMaximumContentLength;
@property (nonatomic) bool updatedTitleRange;

- (void).cxx_destruct;
- (bool)allowsAttachments;
- (bool)allowsAttachmentsInNoteHTMLEditorView:(id)arg1;
- (id)attachmentPresentationDelegate;
- (bool)becomeFirstResponder;
- (bool)canBecomeFirstResponder;
- (bool)canInsertImagesInNoteHTMLEditorView:(id)arg1;
- (bool)canResignFirstResponder;
- (void)chosenUTI:(id*)arg1 andChosenMIMEType:(id*)arg2 forItemProvider:(id)arg3;
- (bool)containsCJK;
- (id)contentAsPlainText:(bool)arg1;
- (bool)contentContainsValuableContent;
- (struct CGPoint { double x1; double x2; })contentOffset;
- (void)copyNoteHTMLToPasteboard;
- (id)dateLabel;
- (void)dealloc;
- (id)delegate;
- (void)didChangeFullSizeClass;
- (void)flashScrollIndicators;
- (void)forcedSetContainsCJK:(bool)arg1;
- (bool)hasFullHeight;
- (bool)hasFullWidth;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)horizontalConstraints;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertDateLabel;
- (void)insertImageInNoteHTMLEditorView:(id)arg1;
- (void)invalidateSizeRelatedConstraints;
- (bool)isEditable;
- (bool)isFirstResponder;
- (bool)isNoteHTMLEditorViewVisible:(id)arg1;
- (bool)isNoteManagedForNoteHTMLEditorView:(id)arg1;
- (id)keyCommands;
- (void)layoutMarginsDidChange;
- (id)noteHTMLEditorView;
- (bool)noteHTMLEditorView:(id)arg1 acceptContentsFromPasteboard:(id)arg2;
- (void)noteHTMLEditorView:(id)arg1 addAttachmentItemProviders:(id)arg2;
- (id)noteHTMLEditorView:(id)arg1 attachmentPresentationForContentID:(id)arg2;
- (bool)noteHTMLEditorView:(id)arg1 canAddAttachmentItemProviders:(id)arg2;
- (id)noteHTMLEditorView:(id)arg1 createAttachmentPresentationWithFileWrapper:(id)arg2 mimeType:(id)arg3;
- (void)noteHTMLEditorView:(id)arg1 didAddAttachmentForMimeType:(id)arg2 filename:(id)arg3 data:(id)arg4;
- (void)noteHTMLEditorView:(id)arg1 didInvokeFormattingCalloutOption:(long long)arg2;
- (void)noteHTMLEditorView:(id)arg1 didInvokeStyleFormattingOption:(long long)arg2;
- (id)noteHTMLEditorView:(id)arg1 fileURLForAttachmentWithContentID:(id)arg2;
- (void)noteHTMLEditorView:(id)arg1 openURL:(id)arg2;
- (void)noteHTMLEditorView:(id)arg1 showShareSheetForAttachment:(id)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3;
- (id)noteHTMLEditorView:(id)arg1 updateAttachments:(id)arg2;
- (void)noteHTMLEditorView:(id)arg1 webScrollViewDidScroll:(id)arg2;
- (void)noteHTMLEditorViewDidBeginEditing:(id)arg1;
- (void)noteHTMLEditorViewDidChange:(id)arg1;
- (void)noteHTMLEditorViewDidEndEditing:(id)arg1;
- (void)noteHTMLEditorViewNeedsContentReload:(id)arg1;
- (bool)noteHTMLEditorViewShouldBeginEditing:(id)arg1 isUserInitiated:(bool)arg2;
- (bool)noteHTMLEditorViewShouldPaste:(id)arg1;
- (void)noteHTMLEditorViewWillChange:(id)arg1;
- (void)processAttachmentItemProviders:(id)arg1;
- (bool)processMapAttachmentItemProvider:(id)arg1;
- (id)readerDelegateInNoteHTMLEditorView:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForDOMNode:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectForSelection;
- (void)reloadInterface;
- (void)replaceSelectionWithAttachmentPresentation:(id)arg1;
- (bool)resignFirstResponder;
- (void)scrollSelectionToVisible:(bool)arg1;
- (void)scrollToTopAnimated:(bool)arg1;
- (void)setAllowsAttachments:(bool)arg1;
- (void)setAttachmentPresentationDelegate:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContainsCJK:(bool)arg1;
- (void)setContent:(id)arg1 isPlainText:(bool)arg2 isCJK:(bool)arg3 attachments:(id)arg4;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDateLabel:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditable:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHorizontalConstraints:(id)arg1;
- (void)setNoteHTMLEditorView:(id)arg1;
- (void)setScrollIndicatorInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSelectionToStart;
- (void)setShowsDateLabel:(bool)arg1;
- (void)setTextureScrollingDelegate:(id)arg1;
- (void)setTimestampDate:(id)arg1;
- (void)setTracksMaximumContentLength:(bool)arg1;
- (void)setUpdatedTitleRange:(bool)arg1;
- (bool)shouldRenderAsAttachment:(id)arg1;
- (bool)showsDateLabel;
- (bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementText:(id)arg3;
- (id)textureScrollingDelegate;
- (id)title;
- (bool)tracksMaximumContentLength;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateConstraints;
- (void)updateDateLabel;
- (void)updateHorizontalConstraints;
- (void)updateMarginConstraints;
- (bool)updatedTitleRange;
- (id)viewPrintFormatter;
- (id)webArchive;

@end
