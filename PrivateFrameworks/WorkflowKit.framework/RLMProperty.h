/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
 */

@interface RLMProperty : NSObject {
    bool  _array;
    NSString * _columnName;
    NSString * _getterName;
    SEL  _getterSel;
    unsigned long long  _index;
    bool  _indexed;
    bool  _isPrimary;
    NSString * _linkOriginPropertyName;
    NSString * _name;
    NSString * _objectClassName;
    bool  _optional;
    NSString * _setterName;
    SEL  _setterSel;
    struct objc_ivar { } * _swiftIvar;
    int  _type;
}

@property (nonatomic, readonly) bool array;
@property (nonatomic, retain) NSString *columnName;
@property (nonatomic, copy) NSString *getterName;
@property (nonatomic) SEL getterSel;
@property (nonatomic) unsigned long long index;
@property (nonatomic) bool indexed;
@property (nonatomic) bool isPrimary;
@property (nonatomic, readonly, copy) NSString *linkOriginPropertyName;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, copy) NSString *objectClassName;
@property (nonatomic) bool optional;
@property (nonatomic, copy) NSString *setterName;
@property (nonatomic) SEL setterSel;
@property (nonatomic) struct objc_ivar { }*swiftIvar;
@property (nonatomic) int type;

+ (id)propertyForObjectStoreProperty:(const struct Property { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; }*)arg1;

- (void).cxx_destruct;
- (bool)array;
- (id)columnName;
- (id)copyWithNewName:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)getterName;
- (SEL)getterSel;
- (unsigned long long)index;
- (bool)indexed;
- (id)initSwiftLinkingObjectsPropertyWithName:(id)arg1 ivar:(struct objc_ivar { }*)arg2 objectClassName:(id)arg3 linkOriginPropertyName:(id)arg4;
- (id)initSwiftListPropertyWithName:(id)arg1 instance:(id)arg2;
- (id)initSwiftOptionalPropertyWithName:(id)arg1 indexed:(bool)arg2 ivar:(struct objc_ivar { }*)arg3 propertyType:(int)arg4;
- (id)initSwiftPropertyWithName:(id)arg1 indexed:(bool)arg2 linkPropertyDescriptor:(id)arg3 property:(struct objc_property { }*)arg4 instance:(id)arg5;
- (id)initWithName:(id)arg1 indexed:(bool)arg2 linkPropertyDescriptor:(id)arg3 property:(struct objc_property { }*)arg4;
- (id)initWithName:(id)arg1 type:(int)arg2 objectClassName:(id)arg3 linkOriginPropertyName:(id)arg4 indexed:(bool)arg5 optional:(bool)arg6;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToProperty:(id)arg1;
- (bool)isPrimary;
- (id)linkOriginPropertyName;
- (id)name;
- (id)objectClassName;
- (struct Property { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; })objectStoreCopy:(id)arg1;
- (bool)optional;
- (void)parseObjcProperty:(struct objc_property { }*)arg1 readOnly:(bool*)arg2 computed:(bool*)arg3 rawType:(id*)arg4;
- (void)setColumnName:(id)arg1;
- (void)setGetterName:(id)arg1;
- (void)setGetterSel:(SEL)arg1;
- (void)setIndex:(unsigned long long)arg1;
- (void)setIndexed:(bool)arg1;
- (void)setIsPrimary:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setObjectClassName:(id)arg1;
- (void)setOptional:(bool)arg1;
- (void)setSetterName:(id)arg1;
- (void)setSetterSel:(SEL)arg1;
- (void)setSwiftIvar:(struct objc_ivar { }*)arg1;
- (void)setType:(int)arg1;
- (bool)setTypeFromRawType:(id)arg1;
- (id)setterName;
- (SEL)setterSel;
- (struct objc_ivar { }*)swiftIvar;
- (int)type;
- (void)updateAccessors;

@end
