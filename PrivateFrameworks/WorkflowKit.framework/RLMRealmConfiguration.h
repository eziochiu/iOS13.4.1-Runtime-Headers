/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
 */

@interface RLMRealmConfiguration : NSObject <NSCopying> {
    bool  _cache;
    struct Config { 
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { 
            struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { 
                struct __rep { 
                    union { 
                        struct __long { 
                            char *__data_; 
                            unsigned long long __size_; 
                            unsigned long long __cap_; 
                        } __l; 
                        struct __short { 
                            BOOL __data_[23]; 
                            struct { 
                                unsigned char __size_; 
                            } ; 
                        } __s; 
                        struct __raw { 
                            unsigned long long __words[3]; 
                        } __r; 
                    } ; 
                } __value_; 
            } __r_; 
        } path; 
        struct BinaryData { 
            char *m_data; 
            unsigned long long m_size; 
        } realm_data; 
        struct vector<char, std::__1::allocator<char> > { 
            char *__begin_; 
            char *__end_; 
            struct __compressed_pair<char *, std::__1::allocator<char> > { 
                char *__value_; 
            } __end_cap_; 
        } encryption_key; 
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { 
            struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { 
                struct __rep { 
                    union { 
                        struct __long { 
                            char *__data_; 
                            unsigned long long __size_; 
                            unsigned long long __cap_; 
                        } __l; 
                        struct __short { 
                            BOOL __data_[23]; 
                            struct { 
                                unsigned char __size_; 
                            } ; 
                        } __s; 
                        struct __raw { 
                            unsigned long long __words[3]; 
                        } __r; 
                    } ; 
                } __value_; 
            } __r_; 
        } fifo_files_fallback_path; 
        bool in_memory; 
        unsigned char schema_mode; 
        struct Optional<realm::Schema> { 
            union { 
                struct Schema { 
                    struct ObjectSchema {} *__begin_; 
                    struct ObjectSchema {} *__end_; 
                    struct __compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> > { 
                        struct ObjectSchema {} *__value_; 
                    } __end_cap_; 
                } m_value; 
                BOOL m_null_state; 
            } ; 
            bool m_engaged; 
        } schema; 
        unsigned long long schema_version; 
        struct function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>="__f_"{__value_func<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>="__buf_"{type="__lx"[24C] {} migration_function; 
        struct __base<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> {} *__f_; 
    }  _config;
    RLMSchema * _customSchema;
    bool  _dynamic;
    id /* block */  _migrationBlock;
    NSString * _pathOnDisk;
    id /* block */  _shouldCompactOnLaunch;
}

@property (nonatomic, readonly) NSArray *allRealmFileURLs;
@property (nonatomic) bool cache;
@property (nonatomic, copy) RLMSchema *customSchema;
@property (nonatomic) bool deleteRealmIfMigrationNeeded;
@property (nonatomic) bool disableFormatUpgrade;
@property (nonatomic) bool dynamic;
@property (nonatomic, copy) NSData *encryptionKey;
@property (nonatomic, copy) NSURL *fileURL;
@property (nonatomic, copy) NSString *inMemoryIdentifier;
@property (nonatomic, copy) id /* block */ migrationBlock;
@property (nonatomic, copy) NSArray *objectClasses;
@property (nonatomic, copy) NSString *pathOnDisk;
@property (nonatomic) bool readOnly;
@property (nonatomic) unsigned long long schemaVersion;
@property (nonatomic, copy) id /* block */ shouldCompactOnLaunch;

+ (id)defaultConfiguration;
+ (id)rawDefaultConfiguration;
+ (void)resetRealmConfigurationState;
+ (void)setDefaultConfiguration:(id)arg1;
+ (id)wf_appStoreShortcutsConfiguration;
+ (id)wf_configurationWithAppGroupIdentifier:(id)arg1 filename:(id)arg2;
+ (id)wf_configurationWithDirectoryURL:(id)arg1 filename:(id)arg2;
+ (id)wf_inMemoryConfiguration;
+ (id)wf_inMemoryConfigurationWithIdentifier:(id)arg1;
+ (id)wf_shortcutsDirectoryURL;
+ (id)wf_systemShortcutsConfiguration;
+ (id)wf_workflowConfiguration;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)allRealmFileURLs;
- (bool)cache;
- (struct Config { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct BinaryData { char *x_2_1_1; unsigned long long x_2_1_2; } x2; struct vector<char, std::__1::allocator<char> > { char *x_3_1_1; char *x_3_1_2; struct __compressed_pair<char *, std::__1::allocator<char> > { char *x_3_2_1; } x_3_1_3; } x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_4_1_1; } x4; }*)config;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customSchema;
- (bool)deleteRealmIfMigrationNeeded;
- (id)description;
- (bool)disableFormatUpgrade;
- (bool)dynamic;
- (id)encryptionKey;
- (id)fileURL;
- (id)inMemoryIdentifier;
- (id)init;
- (id /* block */)migrationBlock;
- (id)objectClasses;
- (id)pathOnDisk;
- (bool)readOnly;
- (unsigned char)schemaMode;
- (unsigned long long)schemaVersion;
- (void)setCache:(bool)arg1;
- (void)setCustomSchema:(id)arg1;
- (void)setCustomSchemaWithoutCopying:(id)arg1;
- (void)setDeleteRealmIfMigrationNeeded:(bool)arg1;
- (void)setDisableFormatUpgrade:(bool)arg1;
- (void)setDynamic:(bool)arg1;
- (void)setEncryptionKey:(id)arg1;
- (void)setFileURL:(id)arg1;
- (void)setInMemoryIdentifier:(id)arg1;
- (void)setMigrationBlock:(id /* block */)arg1;
- (void)setObjectClasses:(id)arg1;
- (void)setPathOnDisk:(id)arg1;
- (void)setReadOnly:(bool)arg1;
- (void)setSchemaMode:(unsigned char)arg1;
- (void)setSchemaVersion:(unsigned long long)arg1;
- (void)setShouldCompactOnLaunch:(id /* block */)arg1;
- (id /* block */)shouldCompactOnLaunch;
- (id)syncConfiguration;

@end
