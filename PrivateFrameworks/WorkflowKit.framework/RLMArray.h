/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
 */

@interface RLMArray : NSObject <NSFastEnumeration, RLMCollection, RLMThreadConfined_Private> {
    NSMutableArray * _backingArray;
    NSString * _key;
    NSString * _objectClassName;
    bool  _optional;
    RLMObjectBase * _parentObject;
    int  _type;
}

@property (nonatomic, readonly) unsigned long long count;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isInvalidated, nonatomic, readonly) bool invalidated;
@property (nonatomic, readonly, copy) NSString *objectClassName;
@property (nonatomic, readonly) id objectiveCMetadata;
@property (getter=isOptional, nonatomic, readonly) bool optional;
@property (nonatomic, readonly) RLMRealm *realm;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int type;

+ (id)objectWithThreadSafeReference:(struct unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase> > { struct __compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase> > { struct ThreadSafeReferenceBase {} *x_1_1_1; } x1; })arg1 metadata:(id)arg2 realm:(id)arg3;

- (void).cxx_destruct;
- (id)addNotificationBlock:(id /* block */)arg1;
- (void)addObject:(id)arg1;
- (void)addObjects:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4;
- (id)aggregateProperty:(id)arg1 operation:(id)arg2 method:(SEL)arg3;
- (id)averageOfProperty:(id)arg1;
- (unsigned long long)count;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x1; id *x2; unsigned long long *x3; unsigned long long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3;
- (id)description;
- (id)descriptionWithMaxDepth:(unsigned long long)arg1;
- (void)exchangeObjectAtIndex:(unsigned long long)arg1 withObjectAtIndex:(unsigned long long)arg2;
- (id)firstObject;
- (unsigned long long)indexOfObject:(id)arg1;
- (unsigned long long)indexOfObjectWhere:(id)arg1;
- (unsigned long long)indexOfObjectWhere:(id)arg1 args:(char *)arg2;
- (unsigned long long)indexOfObjectWithPredicate:(id)arg1;
- (id)initWithObjectClassName:(id)arg1;
- (id)initWithObjectType:(int)arg1 optional:(bool)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (bool)isInvalidated;
- (bool)isOptional;
- (id)lastObject;
- (struct unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase> > { struct __compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase> > { struct ThreadSafeReferenceBase {} *x_1_1_1; } x1; })makeThreadSafeReference;
- (id)maxOfProperty:(id)arg1;
- (id)minOfProperty:(id)arg1;
- (void)moveObjectAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)objectClassName;
- (id)objectiveCMetadata;
- (id)objectsAtIndexes:(id)arg1;
- (id)objectsWhere:(id)arg1;
- (id)objectsWhere:(id)arg1 args:(char *)arg2;
- (id)objectsWithPredicate:(id)arg1;
- (id)realm;
- (void)removeAllObjects;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)sortedResultsUsingDescriptors:(id)arg1;
- (id)sortedResultsUsingKeyPath:(id)arg1 ascending:(bool)arg2;
- (id)sumOfProperty:(id)arg1;
- (int)type;
- (int)typeForProperty:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;

@end
