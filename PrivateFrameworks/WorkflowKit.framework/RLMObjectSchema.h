/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit
 */

@interface RLMObjectSchema : NSObject <NSCopying> {
    Class  _accessorClass;
    NSDictionary * _allPropertiesByName;
    NSString * _className;
    NSArray * _computedProperties;
    bool  _isSwiftClass;
    Class  _objectClass;
    RLMProperty * _primaryKeyProperty;
    NSArray * _properties;
    NSArray * _swiftGenericProperties;
    Class  _unmanagedClass;
}

@property (nonatomic) Class accessorClass;
@property (nonatomic, retain) NSDictionary *allPropertiesByName;
@property (nonatomic, retain) NSString *className;
@property (nonatomic, copy) NSArray *computedProperties;
@property (nonatomic) bool isSwiftClass;
@property (nonatomic) Class objectClass;
@property (nonatomic, readonly) NSString *objectName;
@property (nonatomic, retain) RLMProperty *primaryKeyProperty;
@property (nonatomic, copy) NSArray *properties;
@property (nonatomic, readonly) NSArray *swiftGenericProperties;
@property (nonatomic) Class unmanagedClass;

+ (void)addSwiftProperties:(id)arg1 objectUtil:(Class)arg2 instance:(id)arg3 indexed:(id)arg4 nameMap:(id)arg5;
+ (id)objectSchemaForObjectStoreSchema:(const struct ObjectSchema { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct vector<realm::Property, std::__1::allocator<realm::Property> > { struct Property {} *x_2_1_1; struct Property {} *x_2_1_2; struct __compressed_pair<realm::Property *, std::__1::allocator<realm::Property> > { struct Property {} *x_3_2_1; } x_2_1_3; } x2; struct vector<realm::Property, std::__1::allocator<realm::Property> > { struct Property {} *x_3_1_1; struct Property {} *x_3_1_2; struct __compressed_pair<realm::Property *, std::__1::allocator<realm::Property> > { struct Property {} *x_3_2_1; } x_3_1_3; } x3; }*)arg1;
+ (id)propertiesForClass:(Class)arg1 isSwift:(bool)arg2;
+ (id)schemaForObjectClass:(Class)arg1;

- (void).cxx_destruct;
- (void)_propertiesDidChange;
- (Class)accessorClass;
- (id)allPropertiesByName;
- (id)className;
- (id)computedProperties;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)initWithClassName:(id)arg1 objectClass:(Class)arg2 properties:(id)arg3;
- (bool)isEqualToObjectSchema:(id)arg1;
- (bool)isSwiftClass;
- (Class)objectClass;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectName;
- (struct ObjectSchema { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct vector<realm::Property, std::__1::allocator<realm::Property> > { struct Property {} *x_2_1_1; struct Property {} *x_2_1_2; struct __compressed_pair<realm::Property *, std::__1::allocator<realm::Property> > { struct Property {} *x_3_2_1; } x_2_1_3; } x2; struct vector<realm::Property, std::__1::allocator<realm::Property> > { struct Property {} *x_3_1_1; struct Property {} *x_3_1_2; struct __compressed_pair<realm::Property *, std::__1::allocator<realm::Property> > { struct Property {} *x_3_2_1; } x_3_1_3; } x3; })objectStoreCopy:(id)arg1;
- (id)primaryKeyProperty;
- (id)properties;
- (void)setAccessorClass:(Class)arg1;
- (void)setAllPropertiesByName:(id)arg1;
- (void)setClassName:(id)arg1;
- (void)setComputedProperties:(id)arg1;
- (void)setIsSwiftClass:(bool)arg1;
- (void)setObjectClass:(Class)arg1;
- (void)setPrimaryKeyProperty:(id)arg1;
- (void)setProperties:(id)arg1;
- (void)setUnmanagedClass:(Class)arg1;
- (id)swiftGenericProperties;
- (Class)unmanagedClass;

@end
