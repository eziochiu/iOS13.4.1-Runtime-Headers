/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/TrialServer.framework/TrialServer
 */

@interface TRITaskQueue : NSObject <TRITaskQueuing> {
    TRIClient * _client;
    NSDate * _nextScheduledTaskStartTime;
    NSOperationQueue * _queue;
    NSMutableDictionary * _queuedTasks;
    bool  _stopRequested;
    <TRITaskPersisting> * _taskStore;
    NSMutableDictionary * _xpcActivities;
}

@property (readonly) TRIClient *client;

+ (id)instanceWithClient:(id)arg1;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (bool)_addTask:(id)arg1 taskIds:(id)arg2;
- (id)_addTask:(id)arg1 withDependencies:(id)arg2;
- (bool)_queueScheduledTasks:(id)arg1 nextTaskStartTime:(id*)arg2;
- (bool)addTask:(id)arg1;
- (bool)cancelTask:(id)arg1;
- (bool)cancelTasksWithTag:(id)arg1;
- (id)client;
- (bool)containsTaskId:(id)arg1;
- (unsigned long long)count;
- (id)createOperationWithTask:(id)arg1 withId:(id)arg2 dependencies:(id)arg3 taskMap:(id)arg4;
- (void)dealloc;
- (void)finishedTask:(id)arg1 withId:(id)arg2 status:(int)arg3;
- (id)immediateExecutionTasksForDate:(id)arg1 nextStartTime:(id*)arg2 tasks:(id)arg3;
- (id)initWithTaskStore:(id)arg1 queue:(id)arg2 client:(id)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (bool)queueAllScheduledTasks;
- (bool)queueScheduledTasks:(id)arg1;
- (bool)queueTasks:(id)arg1;
- (void)registerXPCActivityForDate:(id)arg1;
- (bool)removeTaskWithId:(id)arg1;
- (bool)resumeWithXPCActivityDescriptor:(id)arg1 executeWhenSuspended:(id /* block */)arg2;
- (bool)runActivity:(id)arg1;
- (bool)shouldContinue;
- (void)stop;
- (bool)stopRequested;
- (id)topoSortedTasks:(id)arg1;
- (bool)updateActivity:(id)arg1 withStartDate:(id)arg2;

@end
