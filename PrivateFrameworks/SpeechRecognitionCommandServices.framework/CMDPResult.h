/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpeechRecognitionCommandServices.framework/SpeechRecognitionCommandServices
 */

@interface CMDPResult : NSObject {
    struct unique_ptr<CMDPNormalizer, std::__1::default_delete<CMDPNormalizer> > { 
        struct __compressed_pair<CMDPNormalizer *, std::__1::default_delete<CMDPNormalizer> > { 
            struct CMDPNormalizer {} *__value_; 
        } __ptr_; 
    }  _normalizer;
    struct unique_ptr<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > >, std::__1::default_delete<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > > > { 
        struct __compressed_pair<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > *, std::__1::default_delete<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > > > { 
            struct VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > {} *__value_; 
        } __ptr_; 
    }  _resultEditFst;
    struct unique_ptr<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > >, std::__1::default_delete<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > > > { 
        struct __compressed_pair<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > *, std::__1::default_delete<fst::VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > > > { 
            struct VectorFst<fst::ArcTpl<fst::TropicalWeightTpl<float> >, fst::VectorState<fst::ArcTpl<fst::TropicalWeightTpl<float> >, std::__1::allocator<fst::ArcTpl<fst::TropicalWeightTpl<float> > > > > {} *__value_; 
        } __ptr_; 
    }  _resultFst;
    struct vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > { 
        struct unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > {} *__begin_; 
        struct unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > {} *__end_; 
        struct __compressed_pair<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > *, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > { 
            struct unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > {} *__value_; 
        } __end_cap_; 
    }  _resultNodes;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > > { 
        struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __value_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > > { 
                unsigned long long __value_; 
            } __pair3_; 
        } __tree_; 
    }  _symbol_set;
}

+ (struct vector<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x1; struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x2; struct __compressed_pair<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x_3_1_1; } x3; })CMDPTokenSausageFromAFSpeechPhraseArray:(id)arg1;
+ (struct vector<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x1; struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x2; struct __compressed_pair<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x_3_1_1; } x3; })CMDPTokenSausageFromCFTokenSausage:(struct __CFArray { }*)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)createArrayFromNBestResults:(const struct vector<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > >, std::__1::allocator<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > { struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > {} *x1; struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > {} *x2; struct __compressed_pair<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > *, std::__1::allocator<std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > > > { struct vector<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char> > > > {} *x_3_1_1; } x3; }*)arg1 withGrammarData:(id)arg2;
- (id)initWithAFSpeechPhraseArray:(id)arg1 forLocaleIdentifier:(id)arg2;
- (id)initWithTokenSausage:(struct __CFArray { }*)arg1 forLocaleIdentifier:(id)arg2;
- (id)initWithTokenSausageVec:(struct vector<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > >, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x1; struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x2; struct __compressed_pair<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > > > { struct vector<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > >, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> >, std::__1::allocator<std::__1::unique_ptr<CMDPToken, std::__1::default_delete<CMDPToken> > > > > > {} *x_3_1_1; } x3; }*)arg1 forLocaleIdentifier:(id)arg2;
- (id)matchWithGrammars:(id)arg1 winningIndex:(int*)arg2 winningDistance:(float*)arg3;

@end
