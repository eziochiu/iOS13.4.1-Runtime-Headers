/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
 */

@interface REMAccountChangeItem : NSObject <REMConflictResolving, REMExternalSyncMetadataWritableProviding, REMSaveRequestTrackedValue> {
    REMChangedKeysObserver * _changedKeysObserver;
    REMSaveRequest * _saveRequest;
    REMAccountStorage * _storage;
}

@property (nonatomic, readonly) REMAccountCapabilities *capabilities;
@property (nonatomic, retain) REMChangedKeysObserver *changedKeysObserver;
@property (nonatomic) bool daAllowsCalendarAddDeleteModify;
@property (nonatomic, retain) NSString *daConstraintsDescriptionPath;
@property (nonatomic, copy) NSString *daPushKey;
@property (nonatomic) bool daSupportsSharedCalendars;
@property (nonatomic, copy) NSString *daSyncToken;
@property (nonatomic) bool daWasMigrated;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didChooseToMigrate;
@property (nonatomic) bool didChooseToMigrateLocally;
@property (nonatomic) bool didFinishMigration;
@property (nonatomic, copy) NSString *externalIdentifier;
@property (nonatomic, copy) NSString *externalModificationTag;
@property (nonatomic, readonly) REMAccountGroupContextChangeItem *groupContext;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inactive;
@property (nonatomic, readonly) REMCRMergeableOrderedSet *listIDsMergeableOrdering;
@property (nonatomic, retain) NSSet *listIDsToUndelete;
@property (nonatomic) bool listsDADisplayOrderChanged;
@property (nonatomic) bool markedForRemoval;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) REMObjectID *objectID;
@property (nonatomic, readonly) REMObjectID *remObjectID;
@property (nonatomic, retain) REMResolutionTokenMap *resolutionTokenMap;
@property (nonatomic, readonly) REMSaveRequest *saveRequest;
@property (nonatomic, readonly, copy) REMAccountStorage *storage;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long type;

+ (id)_emptyListIDsOrderingWithAccountID:(id)arg1;
+ (void)initialize;

- (void).cxx_destruct;
- (void)_editListIDsOrderingUsingBlock:(id /* block */)arg1;
- (void)_lowLevelAddListChangeItemToOrdering:(id)arg1 atIndexOfSibling:(id)arg2 isAfter:(bool)arg3 withParentListChangeItem:(id)arg4;
- (void)_lowLevelApplyUndoToOrdering:(id)arg1;
- (void)_reassignListChangeItem:(id)arg1 withParentListChangeItem:(id)arg2;
- (void)addListChangeItem:(id)arg1;
- (id)capabilities;
- (id)changedKeys;
- (id)changedKeysObserver;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)groupContext;
- (id)initWithObjectID:(id)arg1 type:(long long)arg2 name:(id)arg3 insertIntoSaveRequest:(id)arg4;
- (id)initWithSaveRequest:(id)arg1 storage:(id)arg2 capabilities:(id)arg3 changedKeysObserver:(id)arg4;
- (id)initWithSaveRequest:(id)arg1 storage:(id)arg2 capabilities:(id)arg3 observeInitialValues:(bool)arg4;
- (void)insertListChangeItem:(id)arg1 adjacentToListChangeItem:(id)arg2 isAfter:(bool)arg3 withParentListChangeItem:(id)arg4;
- (void)insertListChangeItem:(id)arg1 afterListChangeItem:(id)arg2;
- (void)insertListChangeItem:(id)arg1 beforeListChangeItem:(id)arg2;
- (id)listChangeItemsByOrderingListChangeItems:(id)arg1;
- (void)lowLevelAddListIDToOrdering:(id)arg1 withParentListChangeItem:(id)arg2;
- (id)lowLevelRemoveListIDFromOrdering:(id)arg1;
- (void)removeFromStore;
- (id)resolutionTokenKeyForChangedKey:(id)arg1;
- (bool)respondsToSelector:(SEL)arg1;
- (id)saveRequest;
- (void)setChangedKeysObserver:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)shallowCopyWithSaveRequest:(id)arg1;
- (id)storage;
- (void)undeleteListWithID:(id)arg1 usingUndo:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;

@end
