/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/NewsArticles.framework/NewsArticles
 */

@interface NewsArticles.ArticleViewController : UIViewController <FCBundleSubscriptionChangeObserver, NAArticleFooterDelegate, NAZoomable, NUArticleHardPaywallPresentationReporting, NUArticleViewControllerLoadingListener, NULoadingDelegate, TSTabBarSplitViewAutoObserver, UIScrollViewDelegate> {
    void articleViewController;
    void contentBackgroundColor;
    void deferredHardPaywallHeightProvider;
    void deferredHardPaywallIsVisible;
    void deferredHardPaywallViewController;
    void destinationViewSize;
    void documentSectionBlueprintProvider;
    void eventHandler;
    void footerProvider;
    void footers;
    void hardPaywallViewController;
    void headerProvider;
    void headline;
    void isImpressionable;
    void keyCommandManager;
    void modalHostStyle;
    void model;
    void observableScrollView;
    void pageDelegate;
    void paywallPreparationEventManager;
    void presentationContext;
    void scrollDebounce;
    void styler;
    void urlHandler;
    void viewingSessionID;
}

@property (nonatomic, readonly) bool canBecomeFirstResponder;
@property (nonatomic, readonly) NSArray *keyCommands;

- (void).cxx_destruct;
- (bool)accessibilityShouldScroll:(id)arg1;
- (bool)accessibilityShouldScroll:(id)arg1 defaultValue:(bool)arg2;
- (bool)becomeFirstResponder;
- (void)bundleSubscriptionDidSubscribe:(id)arg1;
- (bool)canBecomeFirstResponder;
- (bool)canDecreaseTextSize;
- (bool)canIncreaseTextSize;
- (bool)canResetZoom;
- (bool)canZoomIn;
- (bool)canZoomOut;
- (void)decreaseTextSize;
- (void)didLoadArticle:(id)arg1 withContext:(id)arg2;
- (void)footerNeedsLayout:(id)arg1;
- (void)footerResignsAsFirstResponder:(id)arg1;
- (void)handleKeyCommandWithKeyCommand:(id)arg1;
- (void)increaseTextSize;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isPreviewing;
- (bool)isShowingHardPaywall;
- (id)keyCommands;
- (void)loadingDidFinishWithError:(id)arg1;
- (void)resetZoom;
- (bool)resignFirstResponder;
- (void)scrollViewDidScroll:(id)arg1;
- (bool)shouldOccludeAccessibilityElement:(id)arg1;
- (void)tabBarSplitViewDidChangeFocusToFocus:(long long)arg1 action:(long long)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)zoomIn;
- (void)zoomOut;

@end
