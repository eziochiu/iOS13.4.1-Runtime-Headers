/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI
 */

@interface HUCameraPlayerAccessoryViewController : UIViewController <HFCameraPlaybackEngineObserver> {
    UIVisualEffectView * _blurView;
    bool  _canShowOverlayContent;
    unsigned long long  _currentAccessMode;
    UIActivityIndicatorView * _loadingActivityIndicator;
    UILabel * _noActivityLabel;
    UIImageView * _noResponseView;
    HFCameraPlaybackEngine * _playbackEngine;
    UILabel * _primaryErrorLabel;
    UILabel * _secondaryErrorLabel;
    bool  _shouldShowLoadingIndicatorForClipPlayback;
    bool  _showingBlur;
    bool  _showingError;
    bool  _showingLoadingIndicator;
    bool  _showingNoActivity;
}

@property (nonatomic, retain) UIVisualEffectView *blurView;
@property (nonatomic) bool canShowOverlayContent;
@property (nonatomic) unsigned long long currentAccessMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIActivityIndicatorView *loadingActivityIndicator;
@property (nonatomic, retain) UILabel *noActivityLabel;
@property (nonatomic, retain) UIImageView *noResponseView;
@property (nonatomic) HFCameraPlaybackEngine *playbackEngine;
@property (nonatomic, retain) UILabel *primaryErrorLabel;
@property (nonatomic, retain) UILabel *secondaryErrorLabel;
@property (nonatomic) bool shouldShowLoadingIndicatorForClipPlayback;
@property (nonatomic) bool showingBlur;
@property (nonatomic) bool showingError;
@property (nonatomic) bool showingLoadingIndicator;
@property (nonatomic) bool showingNoActivity;
@property (readonly) Class superclass;

+ (id)_newLabel;

- (void).cxx_destruct;
- (id)_errorStringDetailsForError:(id)arg1;
- (bool)_shouldShortCircuitBlurEffect;
- (bool)_shouldShortCircuitLoadingIndicator;
- (void)_updateAllOverlayStateAnimated:(bool)arg1;
- (void)_updateBlurVisibilityAnimated:(bool)arg1;
- (void)_updateErrorStateAnimated:(bool)arg1;
- (void)_updateLoadingStateAnimated:(bool)arg1;
- (void)_updateNoActivityStateAnimated:(bool)arg1;
- (void)_updateStateAnimated:(bool)arg1 usingBlock:(id /* block */)arg2;
- (id)blurView;
- (bool)canShowOverlayContent;
- (unsigned long long)currentAccessMode;
- (void)hu_reloadData;
- (id)initWithPlaybackEngine:(id)arg1;
- (id)loadingActivityIndicator;
- (id)noActivityLabel;
- (id)noResponseView;
- (id)playbackEngine;
- (void)playbackEngine:(id)arg1 didUpdatePlaybackError:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdatePlaybackPosition:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateTimeControlStatus:(unsigned long long)arg2;
- (id)primaryErrorLabel;
- (id)secondaryErrorLabel;
- (void)setBlurView:(id)arg1;
- (void)setCanShowOverlayContent:(bool)arg1;
- (void)setCurrentAccessMode:(unsigned long long)arg1;
- (void)setLoadingActivityIndicator:(id)arg1;
- (void)setNoActivityLabel:(id)arg1;
- (void)setNoResponseView:(id)arg1;
- (void)setPlaybackEngine:(id)arg1;
- (void)setPrimaryErrorLabel:(id)arg1;
- (void)setSecondaryErrorLabel:(id)arg1;
- (void)setShouldShowLoadingIndicatorForClipPlayback:(bool)arg1;
- (void)setShowingBlur:(bool)arg1;
- (void)setShowingError:(bool)arg1;
- (void)setShowingLoadingIndicator:(bool)arg1;
- (void)setShowingNoActivity:(bool)arg1;
- (bool)shouldShowLoadingIndicatorForClipPlayback;
- (bool)showingBlur;
- (bool)showingError;
- (bool)showingLoadingIndicator;
- (bool)showingNoActivity;
- (void)viewDidLoad;

@end
