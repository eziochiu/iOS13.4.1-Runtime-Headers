/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI
 */

@interface HUCameraPlayerViewController : AVPlayerViewController <AVPlayerViewControllerDelegate, AVPlayerViewControllerDelegatePrivate, HFCameraPlaybackEngineObserver, HFItemManagerDelegate, HUCameraPlayerAVBehaviorDelegate, HUItemPresentationContainer, HUPresentationDelegate, HUPresentationDelegateHost> {
    HUCameraPlayerAccessoryViewController * _accessoryViewController;
    UIAlertController * _airplaneAlertController;
    bool  _applicationIsActive;
    HUCameraPlayerAVBehavior * _behavior;
    NAUILayoutConstraintSet * _calendarConstraintSet;
    HUCalendarScrubberContainerViewController * _calendarContainerViewController;
    <HUCameraPlayerViewControllerDelegate> * _cameraDelegate;
    HFCameraItem * _cameraItem;
    HUCameraStatusOverlayView * _cameraStatusView;
    NSLayoutConstraint * _cameraStatusViewTopConstraint;
    HUClipScrubberViewController * _clipScrubberViewController;
    double  _cornerRadius;
    HULegibilityLabel * _dayLabel;
    NSLayoutConstraint * _dayLabelTopConstraint;
    AVQueuePlayer * _demoModeQueuePlayer;
    HUCameraRecordingPlayerView * _demoPlayerView;
    bool  _enteringFullScreen;
    HUCameraPlayerFooterViewController * _footerViewController;
    HFItemManager * _itemManager;
    HUCameraPlayerLiveContentViewController * _liveContentViewController;
    NSTimer * _liveTimer;
    AVPlayerLooper * _looper;
    AVControlItem * _microphoneControlItem;
    HUCameraMiniScrubberViewController * _miniScrubberViewController;
    AVHomeLoadingButtonControlItem * _nextControlItem;
    bool  _observingReadyForDisplay;
    HUCameraPlayerPlaceholderContentViewController * _placeholderContentViewController;
    HFCameraPlaybackEngine * _playbackEngine;
    HUCameraPlayerConfiguration * _playerConfiguration;
    bool  _recordedClipInterfaceAvailable;
    NSArray * _savedControlItems;
    NAUILayoutConstraintSet * _scrubberConstraintSet;
    bool  _shouldResumePlaying;
    NAUILayoutConstraintSet * _staticConstraintSet;
    NAUILayoutConstraintSet * _statusIndicatorConstraintSet;
    HULegibilityLabel * _timeLabel;
    bool  _viewDisappearing;
    bool  _viewVisible;
    <HUPresentationDelegate> * presentationDelegate;
}

@property (nonatomic, retain) HUCameraPlayerAccessoryViewController *accessoryViewController;
@property (nonatomic, readonly) UIViewController<HUCameraPlayerScrubbing> *activeScrubberViewController;
@property (nonatomic) UIAlertController *airplaneAlertController;
@property (nonatomic) bool applicationIsActive;
@property (nonatomic, retain) HUCameraPlayerAVBehavior *behavior;
@property (nonatomic, retain) NAUILayoutConstraintSet *calendarConstraintSet;
@property (nonatomic, retain) HUCalendarScrubberContainerViewController *calendarContainerViewController;
@property (nonatomic) <HUCameraPlayerViewControllerDelegate> *cameraDelegate;
@property (nonatomic, retain) HFCameraItem *cameraItem;
@property (nonatomic, readonly) HMCameraProfile *cameraProfile;
@property (nonatomic, retain) HUCameraStatusOverlayView *cameraStatusView;
@property (nonatomic, retain) NSLayoutConstraint *cameraStatusViewTopConstraint;
@property (nonatomic, retain) HUClipScrubberViewController *clipScrubberViewController;
@property (nonatomic) double cornerRadius;
@property (nonatomic, retain) HULegibilityLabel *dayLabel;
@property (nonatomic, retain) NSLayoutConstraint *dayLabelTopConstraint;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) AVQueuePlayer *demoModeQueuePlayer;
@property (nonatomic, retain) HUCameraRecordingPlayerView *demoPlayerView;
@property (readonly, copy) NSString *description;
@property (getter=isEnteringFullScreen, nonatomic) bool enteringFullScreen;
@property (nonatomic, retain) HUCameraPlayerFooterViewController *footerViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMHome *home;
@property (nonatomic, readonly) HFItem *hu_presentedItem;
@property (nonatomic, retain) HFItemManager *itemManager;
@property (nonatomic, retain) HUCameraPlayerLiveContentViewController *liveContentViewController;
@property (nonatomic, retain) NSTimer *liveTimer;
@property (nonatomic, retain) AVPlayerLooper *looper;
@property (nonatomic, retain) AVControlItem *microphoneControlItem;
@property (nonatomic, retain) HUCameraMiniScrubberViewController *miniScrubberViewController;
@property (nonatomic, retain) AVHomeLoadingButtonControlItem *nextControlItem;
@property (getter=isObservingReadyForDisplay, nonatomic) bool observingReadyForDisplay;
@property (nonatomic, retain) HUCameraPlayerPlaceholderContentViewController *placeholderContentViewController;
@property (nonatomic, retain) HFCameraPlaybackEngine *playbackEngine;
@property (nonatomic, retain) HUCameraPlayerConfiguration *playerConfiguration;
@property (nonatomic) <HUPresentationDelegate> *presentationDelegate;
@property (nonatomic) bool recordedClipInterfaceAvailable;
@property (nonatomic, retain) NSArray *savedControlItems;
@property (nonatomic, retain) NAUILayoutConstraintSet *scrubberConstraintSet;
@property (nonatomic) bool shouldResumePlaying;
@property (nonatomic, retain) NAUILayoutConstraintSet *staticConstraintSet;
@property (nonatomic, retain) NAUILayoutConstraintSet *statusIndicatorConstraintSet;
@property (readonly) Class superclass;
@property (nonatomic, retain) HULegibilityLabel *timeLabel;
@property (getter=isViewDisappearing, nonatomic) bool viewDisappearing;
@property (getter=isViewVisible, nonatomic) bool viewVisible;

+ (id)_legibilityLabelFactory;

- (void).cxx_destruct;
- (void)_addFooterConstraints;
- (double)_cameraStatusViewConstantForTraitCollection;
- (void)_cleanUpIdleTimerState;
- (void)_configureCalendarContainerViewControllerIfNeeded;
- (void)_configureClipScrubberViewController;
- (void)_configureClipScrubberViewControllerIfNeeded;
- (void)_configureFooterViewController;
- (void)_dismissEditInterface;
- (void)_displayAirplaneModeAlert;
- (void)_displayAudioControlsIfAvailable;
- (void)_displayPlaybackUIWithUpdate:(bool)arg1;
- (void)_handleApplicationDidBecomeActive;
- (void)_handleApplicationWillResignActive;
- (bool)_homeHasSingleCameraProfile;
- (id)_imageConfigurationForScrubberType;
- (long long)_imageScaleForScrubberType;
- (id)_microphoneGlyphForState:(bool)arg1;
- (void)_presentDetailsViewController;
- (void)_presentInternalViewController:(id)arg1;
- (void)_presentNearbyAccessoriesViewController;
- (void)_reloadClipsWithUpdate:(bool)arg1;
- (void)_removePlaybackHistoryUI;
- (id)_settingsImage;
- (void)_setupConstraintSets;
- (void)_setupPlaybackEngine;
- (bool)_shouldAutoPlayOnViewAppearance;
- (bool)_shouldDisableLiveStreamAfterCameraStatusChange;
- (void)_updateCameraStatus;
- (void)_updateCanShowOverlayState;
- (void)_updateDayLabelWithDate:(id)arg1;
- (void)_updateIdleTimer;
- (void)_updateIndicatorColor;
- (void)_updateLivePreviewAspectRatio;
- (void)_updateMicrophoneButtonState;
- (void)_updatePlaceholderContent;
- (void)_updatePlayerVolumeSliderState;
- (void)_updateStateForPlaybackPosition:(id)arg1 animated:(bool)arg2;
- (void)_updateStateForScrubbingStatus:(bool)arg1 animated:(bool)arg2;
- (void)_updateTimeLabelWithDate:(id)arg1 showingTime:(bool)arg2;
- (void)_updatedRecordedClipInterfaceAvailabilityAnimated:(bool)arg1;
- (id)accessoryViewController;
- (id)activeScrubberViewController;
- (id)airplaneAlertController;
- (bool)applicationIsActive;
- (id)behavior;
- (id)calendarConstraintSet;
- (id)calendarContainerViewController;
- (id)cameraDelegate;
- (id)cameraItem;
- (id)cameraProfile;
- (id)cameraStatusView;
- (id)cameraStatusViewTopConstraint;
- (void)cancelLiveTimer;
- (id)clipScrubberViewController;
- (double)cornerRadius;
- (double)currentScrubberResolutionForBehavior:(id)arg1;
- (id)dayLabel;
- (id)dayLabelTopConstraint;
- (void)dealloc;
- (id)demoModeQueuePlayer;
- (id)demoPlayerView;
- (id)finishPresentation:(id)arg1 animated:(bool)arg2;
- (id)footerViewController;
- (bool)hasRecordedClips;
- (id)home;
- (id)hu_presentedItem;
- (id)initWithCameraPlayerConfiguration:(id)arg1;
- (bool)isEnteringFullScreen;
- (bool)isObservingReadyForDisplay;
- (bool)isViewDisappearing;
- (bool)isViewVisible;
- (id)itemManager;
- (void)itemManager:(id)arg1 didUpdateResultsForSourceItem:(id)arg2;
- (id)liveContentViewController;
- (id)liveTimer;
- (id)looper;
- (id)microphoneControlItem;
- (id)miniScrubberViewController;
- (id)nextControlItem;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pauseEngineIfNeeded;
- (void)pictureInPictureDidToggleMicrophone;
- (id)placeholderContentViewController;
- (void)playbackControlsDidChangePlayerVolume:(float)arg1;
- (void)playbackControlsDidToggleMuted:(bool)arg1;
- (void)playbackControlsDidUpdateVisibilityOfLoadingIndicator:(bool)arg1;
- (id)playbackEngine;
- (void)playbackEngine:(id)arg1 didRemoveClips:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateClipPlayer:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateClips:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateLiveCameraSource:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdatePlaybackError:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdatePlaybackPosition:(id)arg2;
- (void)playbackEngine:(id)arg1 didUpdateScrubbingStatus:(bool)arg2;
- (void)playbackEngine:(id)arg1 didUpdateTimeControlStatus:(unsigned long long)arg2;
- (id)playerConfiguration;
- (void)playerViewController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)playerViewController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(id /* block */)arg2;
- (void)playerViewController:(id)arg1 willBeginFullScreenPresentationWithAnimationCoordinator:(id)arg2;
- (void)playerViewController:(id)arg1 willEndFullScreenPresentationWithAnimationCoordinator:(id)arg2;
- (void)playerViewController:(id)arg1 willTransitionToVisibilityOfPlaybackControls:(bool)arg2 withAnimationCoordinator:(id)arg3;
- (void)playerViewControllerDidStartPictureInPicture:(id)arg1;
- (void)playerViewControllerDidStopPictureInPicture:(id)arg1;
- (bool)playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:(id)arg1;
- (void)playerViewControllerWillStartPictureInPicture:(id)arg1;
- (void)playerViewControllerWillStopPictureInPicture:(id)arg1;
- (id)presentationDelegate;
- (bool)recordedClipInterfaceAvailable;
- (id)savedControlItems;
- (id)scrubberConstraintSet;
- (void)setAccessoryViewController:(id)arg1;
- (void)setAirplaneAlertController:(id)arg1;
- (void)setApplicationIsActive:(bool)arg1;
- (void)setBehavior:(id)arg1;
- (void)setCalendarConstraintSet:(id)arg1;
- (void)setCalendarContainerViewController:(id)arg1;
- (void)setCameraDelegate:(id)arg1;
- (void)setCameraItem:(id)arg1;
- (void)setCameraStatusView:(id)arg1;
- (void)setCameraStatusViewTopConstraint:(id)arg1;
- (void)setClipScrubberViewController:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setDayLabel:(id)arg1;
- (void)setDayLabelTopConstraint:(id)arg1;
- (void)setDemoModeQueuePlayer:(id)arg1;
- (void)setDemoPlayerView:(id)arg1;
- (void)setEnteringFullScreen:(bool)arg1;
- (void)setFooterViewController:(id)arg1;
- (void)setItemManager:(id)arg1;
- (void)setLiveContentViewController:(id)arg1;
- (void)setLiveTimer:(id)arg1;
- (void)setLooper:(id)arg1;
- (void)setMicrophoneControlItem:(id)arg1;
- (void)setMiniScrubberViewController:(id)arg1;
- (void)setNextControlItem:(id)arg1;
- (void)setObservingReadyForDisplay:(bool)arg1;
- (void)setPlaceholderContentViewController:(id)arg1;
- (void)setPlaybackEngine:(id)arg1;
- (void)setPlayerConfiguration:(id)arg1;
- (void)setPresentationDelegate:(id)arg1;
- (void)setRecordedClipInterfaceAvailable:(bool)arg1;
- (void)setSavedControlItems:(id)arg1;
- (void)setScrubberConstraintSet:(id)arg1;
- (void)setShouldResumePlaying:(bool)arg1;
- (void)setStaticConstraintSet:(id)arg1;
- (void)setStatusIndicatorConstraintSet:(id)arg1;
- (void)setTimeLabel:(id)arg1;
- (void)setViewDisappearing:(bool)arg1;
- (void)setViewVisible:(bool)arg1;
- (bool)shouldResumePlaying;
- (void)showCameraPicker;
- (void)startLiveTimer;
- (id)staticConstraintSet;
- (id)statusIndicatorConstraintSet;
- (bool)supportsRecordedClips;
- (id)timeLabel;
- (void)toggleDemoModeLiveStreamVideo:(bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateViewConstraints;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;

@end
