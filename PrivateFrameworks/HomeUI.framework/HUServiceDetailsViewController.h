/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI
 */

@interface HUServiceDetailsViewController : HUItemTableViewController <HFAccessoryObserver, HFHomeObserver, HUAccessorySettingsItemModuleControllerDelegate, HUChildServiceModuleControllerDelegate, HUContainedMediaAccessoriesGridViewControllerDelegate, HUContainedServiceGridViewControllerDelegate, HUControlPanelControllerDelegate, HUDetailsPresentationDelegateHost, HUEditRoomViewControllerPresentationDelegate, HUHomeAssistantDeviceSplitAccountActionDelegate, HUMediaSystemEditorViewControllerDelegate, HUPickerCellDelegate, HUPresentationDelegate, HUServiceDetailsItemManagerDelegate, HUServiceGroupEditorViewControllerDelegate, HUServiceLikeItemDetailsViewControllerProtocol, HUSoftwareUpdateItemModuleControllerDelegate, HUSwitchCellDelegate, HUTriggerEditorDelegate, UIGestureRecognizerDelegate, UINavigationControllerDelegate> {
    HUChildServiceItemModuleController * _accessoryServicesEditorItemModuleController;
    HUAccessorySettingsItemModuleController * _accessorySettingsItemModuleController;
    NAFuture * _accountFuture;
    HUCameraSettingsModuleController * _cameraSettingsModuleController;
    UIButton * _closeButton;
    HUControlPanelController * _controlPanelController;
    HUServiceDetailsItemManager * _detailsItemManager;
    NSHashTable * _expandedControlPanelItems;
    HMHome * _home;
    HUChildServiceItemModuleController * _inputSourceItemModuleController;
    bool  _isItemGroup;
    bool  _isMultiServiceAccessory;
    bool  _isPresentingRoomsList;
    UILongPressGestureRecognizer * _longPressRecognizer;
    HUNameItemModuleController * _nameItemModuleController;
    HFNamingComponents * _namingComponent;
    HUQuickControlSummaryNavigationBarTitleView * _navigationBarTitleView;
    <HUPresentationDelegate> * _presentationDelegate;
    bool  _requiresPresentingViewControllerDismissal;
    HUAssociatedSceneAndTriggerModuleController * _sceneAndTriggerModuleController;
    bool  _shouldTrackProgrammableSwitchActivations;
    HUSoftwareUpdateItemModuleController * _softwareUpdateItemModuleController;
    bool  _supportsCustomIconEditing;
    HUTelevisionSettingsItemModuleController * _televisionSettingsItemModuleController;
    HUServiceDetailsTextViewDelegate * _textViewDelegate;
    HUChildServiceItemModuleController * _valveEditorItemModuleController;
}

@property (nonatomic, retain) HUChildServiceItemModuleController *accessoryServicesEditorItemModuleController;
@property (nonatomic, retain) HUAccessorySettingsItemModuleController *accessorySettingsItemModuleController;
@property (nonatomic, retain) NAFuture *accountFuture;
@property (nonatomic, retain) HUCameraSettingsModuleController *cameraSettingsModuleController;
@property (nonatomic, retain) UIButton *closeButton;
@property (nonatomic, readonly) HUControlPanelController *controlPanelController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) HUServiceDetailsItemManager *detailsItemManager;
@property (nonatomic, readonly) NSHashTable *expandedControlPanelItems;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMHome *home;
@property (nonatomic, retain) HUChildServiceItemModuleController *inputSourceItemModuleController;
@property (nonatomic, readonly) bool isItemGroup;
@property (nonatomic, readonly) bool isMultiServiceAccessory;
@property (nonatomic) bool isPresentingRoomsList;
@property (nonatomic, readonly) HFItem<HFServiceLikeItem> *item;
@property (nonatomic, retain) UILongPressGestureRecognizer *longPressRecognizer;
@property (nonatomic, retain) HUNameItemModuleController *nameItemModuleController;
@property (nonatomic, retain) HFNamingComponents *namingComponent;
@property (nonatomic, retain) HUQuickControlSummaryNavigationBarTitleView *navigationBarTitleView;
@property (nonatomic) <HUPresentationDelegate> *presentationDelegate;
@property (nonatomic) bool requiresPresentingViewControllerDismissal;
@property (nonatomic, retain) HUAssociatedSceneAndTriggerModuleController *sceneAndTriggerModuleController;
@property (nonatomic) bool shouldTrackProgrammableSwitchActivations;
@property (nonatomic, retain) HUSoftwareUpdateItemModuleController *softwareUpdateItemModuleController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsCustomIconEditing;
@property (nonatomic, retain) HUTelevisionSettingsItemModuleController *televisionSettingsItemModuleController;
@property (nonatomic, retain) HUServiceDetailsTextViewDelegate *textViewDelegate;
@property (nonatomic, retain) HUChildServiceItemModuleController *valveEditorItemModuleController;

+ (id)acceptableItemClasses;

- (void).cxx_destruct;
- (bool)_allowRowHighlightForItem:(id)arg1;
- (bool)_allowRowSelectionForItem:(id)arg1;
- (id)_characteristicsAffectedByControlItem:(id)arg1;
- (void)_closeButtonPressed:(id)arg1;
- (id)_commitBuilder;
- (void)_didRemoveHomeKitObject:(id)arg1;
- (void)_didSelectRoomItem:(id)arg1;
- (void)_executeSilentSoftwareUpdateCheck;
- (bool)_isCameraItem;
- (void)_longPressRecognized:(id)arg1;
- (id)_magicallyUpdateNavigationStackForNewRootItem:(id)arg1 topViewController:(id)arg2;
- (void)_notifyOfHomePodPairingIfNecessary;
- (void)_presentContainedItems;
- (void)_presentGroupPicker;
- (void)_presentRemoveConfirmation:(id)arg1;
- (void)_presentRemoveRouterConfirmation;
- (void)_presentResetHomePodConfirmation:(id)arg1;
- (void)_presentTriggerEditorForProgrammableSwitchEventOptionItem:(id)arg1;
- (id)_primaryStatusTextForLatestResults:(id)arg1 showingSecondaryStatus:(bool)arg2;
- (id)_recoverItemBuilder:(id)arg1 fromError:(id)arg2;
- (id)_removeItem;
- (void)_restartGroupedHomePodAccessory;
- (void)_restartHomePod;
- (id)_secondaryStatusTextForLatestResults:(id)arg1;
- (void)_separateOrUnifyTile;
- (void)_setDismissedHomePodHasNonMemberMediaAccountWarning:(bool)arg1;
- (void)_setupProgrammableSwitchCell:(id)arg1 forItem:(id)arg2;
- (bool)_shouldPresentRemoveRouterConfirmation;
- (bool)_shouldShowAddButtonForOptionItem:(id)arg1;
- (bool)_shouldShowDetailDisclosureForItem:(id)arg1;
- (void)_updateAssociatedServiceTypeCells;
- (void)_updateCheckedStateForAssociatedServiceTypeCell:(id)arg1 item:(id)arg2;
- (void)_updateControlStatusText;
- (void)_updateIconDescriptorAnimated:(bool)arg1;
- (void)accessory:(id)arg1 service:(id)arg2 didUpdateValueForCharacteristic:(id)arg3;
- (void)accessoryDidUpdateServices:(id)arg1;
- (id)accessoryServicesEditorItemModuleController;
- (id)accessorySettingsItemModuleController;
- (id)accountFuture;
- (void)addRoomButtonPressed:(id)arg1;
- (unsigned long long)automaticDisablingReasonsForItem:(id)arg1;
- (bool)automaticallyUpdatesViewControllerTitle;
- (id)buildItemModuleControllerForModule:(id)arg1;
- (id)cameraSettingsModuleController;
- (Class)cellClassForItem:(id)arg1 indexPath:(id)arg2;
- (void)checkForAccessoriesNeedingReprovisioning;
- (id)childServiceEditorModuleController:(id)arg1 didSelectItem:(id)arg2;
- (id)closeButton;
- (void)commitChanges;
- (id)controlPanelController;
- (void)controlPanelController:(id)arg1 didEndPossibleWritesForControlItem:(id)arg2;
- (void)controlPanelController:(id)arg1 willBeginPossibleWritesForControlItem:(id)arg2;
- (void)dealloc;
- (id)detailsItemManager;
- (id)detailsViewControllerForContainedMediaAccessoryGridViewController:(id)arg1 item:(id)arg2;
- (id)detailsViewControllerForContainedServiceGridViewController:(id)arg1 item:(id)arg2;
- (void)didSelectHeaderWarningAction:(id)arg1;
- (void)didSelectHomeAssistantDeviceSplitAccountAction:(unsigned long long)arg1;
- (void)dismissPrivacyController;
- (void)dismissTriggerActionEditorViewController:(id)arg1;
- (void)editRoomViewControllerDidFinish:(id)arg1 withNewRoom:(id)arg2;
- (id)expandedControlPanelItems;
- (id)finishPresentation:(id)arg1 animated:(bool)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)hasDetailsActionForContainedServiceGridViewController:(id)arg1 item:(id)arg2;
- (id)home;
- (void)home:(id)arg1 didRemoveAccessory:(id)arg2;
- (void)home:(id)arg1 didRemoveMediaSystem:(id)arg2;
- (void)home:(id)arg1 didRemoveServiceGroup:(id)arg2;
- (id)initWithItemManager:(id)arg1 tableViewStyle:(long long)arg2;
- (id)initWithServiceLikeItem:(id)arg1;
- (id)inputSourceItemModuleController;
- (bool)isItemGroup;
- (bool)isMultiServiceAccessory;
- (bool)isPresentingRoomsList;
- (id)item;
- (void)itemManager:(id)arg1 didUpdateResultsForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 performUpdateRequest:(id)arg2;
- (id)itemManager:(id)arg1 sectionFooterForControlPanelItem:(id)arg2 forServiceItem:(id)arg3;
- (id)itemManager:(id)arg1 sectionTitleForControlPanelItem:(id)arg2 forServiceItem:(id)arg3;
- (bool)itemManager:(id)arg1 shouldShowControlPanelItem:(id)arg2;
- (bool)itemManager:(id)arg1 shouldShowSectionTitleForControlPanelItem:(id)arg2;
- (id)itemModuleControllers;
- (id)longPressRecognizer;
- (void)mediaSystemEditor:(id)arg1 didAbortMediaSystemCreationDueToAccessoryNeedingUpdate:(id)arg2;
- (void)mediaSystemEditor:(id)arg1 didCreateMediaSystem:(id)arg2;
- (id)nameItemModuleController;
- (id)namingComponent;
- (id)navigationBarTitleView;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(bool)arg3;
- (long long)numberOfValuesForPickerViewCell:(id)arg1;
- (void)pickerViewCell:(id)arg1 didSelectValueAtIndex:(long long)arg2;
- (id)pickerViewCell:(id)arg1 titleForValueAtIndex:(long long)arg2;
- (id)presentationDelegate;
- (bool)requiresPresentingViewControllerDismissal;
- (id)sceneAndTriggerModuleController;
- (void)serviceGroupEditor:(id)arg1 didCreateServiceGroup:(id)arg2;
- (void)setAccessoryServicesEditorItemModuleController:(id)arg1;
- (void)setAccessorySettingsItemModuleController:(id)arg1;
- (void)setAccountFuture:(id)arg1;
- (void)setCameraSettingsModuleController:(id)arg1;
- (void)setCloseButton:(id)arg1;
- (void)setDetailsItemManager:(id)arg1;
- (void)setHome:(id)arg1;
- (void)setInputSourceItemModuleController:(id)arg1;
- (void)setIsPresentingRoomsList:(bool)arg1;
- (void)setLongPressRecognizer:(id)arg1;
- (void)setNameItemModuleController:(id)arg1;
- (void)setNamingComponent:(id)arg1;
- (void)setNavigationBarTitleView:(id)arg1;
- (void)setPresentationDelegate:(id)arg1;
- (void)setRequiresPresentingViewControllerDismissal:(bool)arg1;
- (void)setSceneAndTriggerModuleController:(id)arg1;
- (void)setShouldTrackProgrammableSwitchActivations:(bool)arg1;
- (void)setSoftwareUpdateItemModuleController:(id)arg1;
- (void)setTelevisionSettingsItemModuleController:(id)arg1;
- (void)setTextViewDelegate:(id)arg1;
- (void)setValveEditorItemModuleController:(id)arg1;
- (void)setupCell:(id)arg1 forItem:(id)arg2 indexPath:(id)arg3;
- (bool)shouldHideFooterBelowSection:(long long)arg1;
- (bool)shouldHideHeaderAboveSection:(long long)arg1;
- (bool)shouldHideSeparatorsForCell:(id)arg1 indexPath:(id)arg2;
- (bool)shouldTrackProgrammableSwitchActivations;
- (id)softwareUpdateItemModuleController;
- (id)softwareUpdateModuleController:(id)arg1 dismissViewController:(id)arg2;
- (id)softwareUpdateModuleController:(id)arg1 navigateToViewController:(id)arg2;
- (id)softwareUpdateModuleController:(id)arg1 presentViewController:(id)arg2;
- (bool)supportsCustomIconEditing;
- (void)switchCell:(id)arg1 didTurnOn:(bool)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)televisionSettingsItemModuleController;
- (void)textDidChange:(id)arg1 forTextField:(id)arg2 item:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1 item:(id)arg2;
- (id)textViewDelegate;
- (void)triggerEditor:(id)arg1 didFinishWithTriggerBuilder:(id)arg2;
- (bool)triggerEditor:(id)arg1 shouldCommitTriggerBuilder:(id)arg2;
- (void)updateCell:(id)arg1 forItem:(id)arg2 indexPath:(id)arg3 animated:(bool)arg4;
- (id)valveEditorItemModuleController;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
