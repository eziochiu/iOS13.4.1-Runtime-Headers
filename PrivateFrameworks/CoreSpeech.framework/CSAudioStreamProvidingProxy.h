/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreSpeech.framework/CoreSpeech
 */

@interface CSAudioStreamProvidingProxy : NSObject <CSAudioStreamProvidingDelegate, CSXPCConnectionDelegate> {
    CSAudioStream * _audioStream;
    <CSAudioStreamProviding> * _audioStreamProviding;
    NSDictionary * _lastRTSTriggerInfo;
    NSDictionary * _lastVoiceTriggerInfo;
    CSAudioRecordContext * _recordContext;
    NSString * _recordEventUUID;
    unsigned long long  _streamClientType;
    <CSTriggerInfoProviding> * _triggerInfoProviding;
    CSXPCConnection * _xpcConnection;
}

@property (nonatomic, retain) CSAudioStream *audioStream;
@property (setter=setAudioStreamProvidingForProxy:, nonatomic) <CSAudioStreamProviding> *audioStreamProviding;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy) NSDictionary *lastRTSTriggerInfo;
@property (copy) NSDictionary *lastVoiceTriggerInfo;
@property (nonatomic, retain) CSAudioRecordContext *recordContext;
@property (nonatomic, retain) NSString *recordEventUUID;
@property (nonatomic) unsigned long long streamClientType;
@property (readonly) Class superclass;
@property (nonatomic) <CSTriggerInfoProviding> *triggerInfoProviding;
@property (nonatomic) CSXPCConnection *xpcConnection;

- (void).cxx_destruct;
- (void)CSXPCConnectionReceivedClientError:(id)arg1 clientError:(id)arg2 client:(id)arg3;
- (void)_handleAudioStreamPrepareMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleAudioStreamRequestMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleIsNarrowband:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleIsRecordingMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handlePlaybackRouteMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleRecordDeviceInfo:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleRecordRouteMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleRecordSettings:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleSetCurrentConextMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleStartAudioStreamMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleStopAudioStreamMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_handleVoiceTriggerInfoMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (void)_sendDelegateMessageToClient:(id)arg1;
- (void)_sendReply:(id)arg1 client:(id)arg2 result:(bool)arg3 error:(id)arg4;
- (void)_setAllowMixableAudioWhileRecording:(bool)arg1;
- (id)audioStream;
- (void)audioStreamProvider:(id)arg1 audioBufferAvailable:(id)arg2;
- (void)audioStreamProvider:(id)arg1 audioChunkForTVAvailable:(id)arg2;
- (void)audioStreamProvider:(id)arg1 didHardwareConfigurationChange:(long long)arg2;
- (void)audioStreamProvider:(id)arg1 didStopStreamUnexpectly:(long long)arg2;
- (id)audioStreamProviding;
- (void)handleXPCMessage:(id)arg1 messageBody:(id)arg2 client:(id)arg3;
- (id)initWithXPCConnection:(id)arg1;
- (id)lastRTSTriggerInfo;
- (id)lastVoiceTriggerInfo;
- (id)recordContext;
- (id)recordEventUUID;
- (void)setAudioStream:(id)arg1;
- (void)setAudioStreamProvidingForProxy:(id)arg1;
- (void)setInitialContext:(id)arg1;
- (void)setLastRTSTriggerInfo:(id)arg1;
- (void)setLastVoiceTriggerInfo:(id)arg1;
- (void)setRecordContext:(id)arg1;
- (void)setRecordEventUUID:(id)arg1;
- (void)setStreamClientType:(unsigned long long)arg1;
- (void)setTriggerInfoProviding:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (unsigned long long)streamClientType;
- (id)triggerInfoProviding;
- (id)xpcConnection;

@end
