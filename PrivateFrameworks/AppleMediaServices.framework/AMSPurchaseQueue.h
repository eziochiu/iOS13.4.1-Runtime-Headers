/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
 */

@interface AMSPurchaseQueue : NSObject <AMSBagConsumer> {
    NSOperationQueue * _backgroundQueue;
    NSMutableArray * _batches;
    AMSPurchaseQueueConfiguration * _config;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    NSObject<OS_dispatch_queue> * _enqueue;
    bool  _isSuspeneded;
    NSLock * _lock;
    AMSPurchaseProtocolHandler * _protocolHandler;
    AMSURLSession * _session;
}

@property (nonatomic, retain) NSOperationQueue *backgroundQueue;
@property (nonatomic, retain) NSMutableArray *batches;
@property (nonatomic, retain) AMSPurchaseQueueConfiguration *config;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *enqueue;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isSuspeneded;
@property (nonatomic, retain) NSLock *lock;
@property (nonatomic, retain) AMSPurchaseProtocolHandler *protocolHandler;
@property (nonatomic, retain) AMSURLSession *session;
@property (readonly) Class superclass;

+ (id)bagKeySet;
+ (id)bagSubProfile;
+ (id)bagSubProfileVersion;

- (void).cxx_destruct;
- (void)_handleNextPurchase;
- (void)_handlePurchaseCompleted:(id)arg1 result:(id)arg2 error:(id)arg3;
- (void)_processPurchase:(id)arg1;
- (id)_processURLRequest:(id)arg1 error:(id*)arg2;
- (id)_purchaseContextForPurchase:(id)arg1;
- (id)backgroundQueue;
- (id)batches;
- (id)config;
- (id)contextForPurchaseId:(id)arg1;
- (id)dispatchQueue;
- (id)enquePurchases:(id)arg1;
- (id)enqueue;
- (bool)finishPurchaseId:(id)arg1 withError:(id)arg2;
- (id)initWithConfiguration:(id)arg1;
- (bool)isSuspeneded;
- (id)lock;
- (id)protocolHandler;
- (id)session;
- (void)setBackgroundQueue:(id)arg1;
- (void)setBatches:(id)arg1;
- (void)setConfig:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setEnqueue:(id)arg1;
- (void)setIsSuspeneded:(bool)arg1;
- (void)setLock:(id)arg1;
- (void)setProtocolHandler:(id)arg1;
- (void)setSession:(id)arg1;
- (void)setSuspended:(bool)arg1 logUUID:(id)arg2;

@end
