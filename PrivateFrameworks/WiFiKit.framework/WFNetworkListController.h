/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit
 */

@interface WFNetworkListController : NSObject <WFAirportViewControllerDelegate, WFGasQueryControllerDelegate, WFHealthManagerDelegate, WFHotspotInterfaceDelegate, WFNetworkListDelegate, WFScanManagerDelegate> {
    bool  _HS20Supported;
    <WFNetworkListRecord> * _associatingNetwork;
    bool  _associatingToOtherNetwork;
    WFAssociationContext * _associationContext;
    NSOperationQueue * _backgroundQueue;
    bool  _canScanForPersonalHotspots;
    WFCertificateContext * _certificateContext;
    WFCredentialsContext * _credentialsContext;
    WFDetailsContext * _detailsContext;
    WFGasQueryController * _gasController;
    WFHealthManager * _healthManager;
    WFHealthIssueOverrides * _healthRecommendationOverrides;
    WFHotspotInterface * _hotspotInterface;
    WFInterface * _interface;
    WFKnownNetworkStore * _knownNetworkStore;
    WFKnownNetworksListController * _knownNetworksListController;
    WFLinkQuality * _latestLinkQuality;
    NSSet * _networks;
    UIViewController<WFOtherNetworkProvider> * _otherNetworkVC;
    bool  _powered;
    bool  _refreshedKnownNetworks;
    bool  _scanForPersonalHotspots;
    WFScanManager * _scanManager;
    WFScanMetricsManager * _scanMetricsManager;
    bool  _scanning;
    WFWiFiStateMonitor * _stateMonitor;
    UIViewController<WFNetworkListing> * _viewController;
    bool  _viewControllerSupportsCurrentNetworkSubtitle;
    <WFNetworkViewProvider> * _viewProvider;
    <WFContextPresenting> * _visibleContext;
    WFClient * _wifiClient;
}

@property (getter=isHS20Supported, nonatomic) bool HS20Supported;
@property (nonatomic, retain) <WFNetworkListRecord> *associatingNetwork;
@property bool associatingToOtherNetwork;
@property (nonatomic, retain) WFAssociationContext *associationContext;
@property (nonatomic, retain) NSOperationQueue *backgroundQueue;
@property (nonatomic) bool canScanForPersonalHotspots;
@property (nonatomic, retain) WFCertificateContext *certificateContext;
@property (nonatomic, retain) WFCredentialsContext *credentialsContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) WFDetailsContext *detailsContext;
@property (nonatomic, retain) WFGasQueryController *gasController;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) WFHealthManager *healthManager;
@property (nonatomic, retain) WFHealthIssueOverrides *healthRecommendationOverrides;
@property (nonatomic, retain) WFHotspotInterface *hotspotInterface;
@property (nonatomic, retain) WFInterface *interface;
@property (nonatomic, retain) WFKnownNetworkStore *knownNetworkStore;
@property (nonatomic, retain) WFKnownNetworksListController *knownNetworksListController;
@property (nonatomic, retain) WFLinkQuality *latestLinkQuality;
@property (nonatomic, retain) NSSet *networks;
@property (nonatomic, retain) UIViewController<WFOtherNetworkProvider> *otherNetworkVC;
@property (nonatomic) bool powered;
@property (nonatomic) bool refreshedKnownNetworks;
@property (nonatomic) bool scanForPersonalHotspots;
@property (nonatomic, retain) WFScanManager *scanManager;
@property (nonatomic, retain) WFScanMetricsManager *scanMetricsManager;
@property (getter=isScanning, nonatomic, readonly) bool scanning;
@property (nonatomic, retain) WFWiFiStateMonitor *stateMonitor;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIViewController<WFNetworkListing> *viewController;
@property (nonatomic) bool viewControllerSupportsCurrentNetworkSubtitle;
@property (nonatomic, retain) <WFNetworkViewProvider> *viewProvider;
@property (nonatomic, retain) <WFContextPresenting> *visibleContext;
@property (nonatomic, retain) WFClient *wifiClient;

- (void).cxx_destruct;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_associateToEnterpriseNetwork:(id)arg1 profile:(id)arg2;
- (void)_associateToHS20Network:(id)arg1;
- (void)_associateToHotspotDevice:(id)arg1;
- (void)_associateToNetwork:(id)arg1 profile:(id)arg2;
- (void)_associateToScanRecord:(id)arg1;
- (void)_associateToScanRecord:(id)arg1 profile:(id)arg2;
- (void)_associateToUnconfiguredAccessory:(id)arg1;
- (void)_associateToUserSuppliedNetwork:(id)arg1;
- (void)_associationDidFinish:(bool)arg1 error:(id)arg2;
- (void)_associationWillStart:(id)arg1;
- (bool)_canPromptForCarPlay;
- (bool)_canPromptForInstantHotspot;
- (bool)_canStartAssociationToNetwork:(id)arg1;
- (bool)_canStartAssociationToUserSuppliedNetwork:(id)arg1;
- (void)_cleanUpStatesForDismissal;
- (void)_clientRestartedNotification:(id)arg1;
- (long long)_defaultAuthTraits;
- (bool)_disablePersonalHotspot;
- (void)_dismissCredentialsViewControllerWithContext:(id)arg1;
- (void)_dismissDetailsViewControllerWithContext:(id)arg1;
- (void)_dismissErrorViewControllerWithContext:(id)arg1;
- (void)_dismissOtherNetworkViewControllerWithContext:(id)arg1;
- (void)_dismissTrustViewControllerWithContext:(id)arg1;
- (void)_dismissViewControllerForContext:(id)arg1;
- (void)_dismissVisibleContext;
- (void)_downloadHomeApp;
- (void)_handleAssociationError:(id)arg1 network:(id)arg2 profile:(id)arg3;
- (void)_handleAssociationResult:(bool)arg1 error:(id)arg2 network:(id)arg3 profile:(id)arg4 shouldSaveProfile:(bool)arg5;
- (bool)_handleCurrentNetworkDetailsURL;
- (void)_interfaceDidBecomeAvailable:(id)arg1;
- (void)_ipStateDidChange:(id)arg1;
- (bool)_isActiveCarPlaySession;
- (void)_managedAppleIDStateDidChange:(id)arg1;
- (void)_networkDidChangeNotification:(id)arg1;
- (void)_networkHealthIssuesDidChange:(id)arg1;
- (void)_networkLinkQualityDidChangeNotification:(id)arg1;
- (void)_networkRestrictionStateDidChange:(id)arg1;
- (void)_openHomeAppForNetwork:(id)arg1;
- (void)_pauseScanning;
- (void)_powerDidChangeNotification:(id)arg1;
- (void)_powerModificationDisableStateDidChange:(id)arg1;
- (void)_powerStateChanged;
- (void)_preferredNetworksDidChange:(id)arg1;
- (void)_presentErrorContext:(id)arg1;
- (void)_presentHotspotErrorContextWithDevice:(id)arg1 hotspotError:(id)arg2 failure:(long long)arg3;
- (void)_promptCredentialsForNetwork:(id)arg1 profile:(id)arg2;
- (void)_promptForSecureWACDevice:(id)arg1;
- (void)_promptToDisableCarPlayForNetworkName:(id)arg1 handler:(id /* block */)arg2;
- (void)_promptTrustCertificateForNetwork:(id)arg1 certificateChain:(id)arg2 profile:(id)arg3 autoJoin:(bool)arg4;
- (void)_registerForApplicationNotifications;
- (void)_resumeScanning;
- (void)_runUnconfiguredJoinOperationForNetwork:(id)arg1;
- (void)_saveLogsWithComment:(id)arg1 diagnosticsViewController:(id)arg2;
- (void)_scanNetworkForAssociation:(id)arg1 profile:(id)arg2;
- (void)_setupGASControllerWithInterface:(id)arg1;
- (void)_setupWithInterface:(id)arg1;
- (void)_setupWithoutInterface;
- (bool)_shouldPauseScanning;
- (id)_sortedHealthRecommendations;
- (void)_startHotspotScan;
- (void)_stateMonitorChangedStates:(long long)arg1 oldState:(long long)arg2;
- (void)_stopHotspotScan;
- (bool)_supportsWiFiPasswordSharing;
- (void)_updateCurrentNetworkIPState;
- (void)_updateHealthSubtitle;
- (void)_updatePowerState;
- (void)_updateViewControllerConnectedNetwork;
- (void)_updateViewControllerDisabled;
- (void)_updateViewControllerScanResults;
- (void)_updateViewsForNetworks:(id)arg1;
- (bool)_useLegacySettingsUI;
- (void)_wifiPropertyDidChanged:(id)arg1;
- (void)airportSettingsViewController:(id)arg1 setAskToJoinMode:(long long)arg2;
- (id)airportSettingsViewController:(id)arg1 unconfiguredAccessoriesGroupHeaderTitle:(id)arg2;
- (long long)airportSettingsViewControllerAskToJoinMode:(id)arg1;
- (bool)airportSettingsViewControllerCurrentNetworkConnectionIsProblematic:(id)arg1;
- (void)airportSettingsViewControllerDidTapDataUsage:(id)arg1;
- (void)airportSettingsViewControllerDidTapDiagnosticsMode:(id)arg1;
- (void)airportSettingsViewControllerDidTapKnownNetworks:(id)arg1;
- (bool)airportSettingsViewControllerShouldShowDiagnosticsMode:(id)arg1;
- (bool)airportSettingsViewControllerShouldShowKnownNetworks:(id)arg1;
- (void)associateToEnterpriseNetwork:(id)arg1 profile:(id)arg2;
- (id)associatingNetwork;
- (bool)associatingToOtherNetwork;
- (id)associationContext;
- (id)backgroundQueue;
- (bool)canScanForPersonalHotspots;
- (id)certificateContext;
- (id)credentialsContext;
- (void)dealloc;
- (id)detailsContext;
- (id)existingProfileWithSSID:(id)arg1;
- (id)gasController;
- (void)gasQueryController:(id)arg1 didUpdateProfiles:(id)arg2;
- (bool)handleURL:(id)arg1;
- (id)healthManager;
- (id)healthManager:(id)arg1 existingProfileForNetwork:(id)arg2;
- (id)healthRecommendationOverrides;
- (id)healthRecommendations;
- (id)hotspotInterface;
- (void)hotspotInterfaceDidUpdateNetworks:(id)arg1;
- (id)init;
- (id)initWithViewController:(id)arg1;
- (id)initWithViewController:(id)arg1 viewProvider:(id)arg2;
- (id)initWithViewController:(id)arg1 viewProvider:(id)arg2 client:(id)arg3;
- (id)interface;
- (bool)isAirPortSettings;
- (bool)isAssociating;
- (bool)isHS20Supported;
- (bool)isScanning;
- (bool)isSetup;
- (id)keyValueDictionaryForURL:(id)arg1;
- (id)knownNetworkStore;
- (id)knownNetworksListController;
- (id)latestLinkQuality;
- (void)networkListViewController:(id)arg1 didTapRecord:(id)arg2;
- (void)networkListViewController:(id)arg1 setAutoInstantOption:(long long)arg2;
- (void)networkListViewController:(id)arg1 setWAPIEnabled:(bool)arg2;
- (void)networkListViewController:(id)arg1 showSettingsForNetwork:(id)arg2;
- (void)networkListViewController:(id)arg1 userDidChangePower:(bool)arg2;
- (long long)networkListViewControllerAutoInstantHotspotOption:(id)arg1;
- (bool)networkListViewControllerCurrentPowerState:(id)arg1;
- (void)networkListViewControllerDidAppear:(id)arg1;
- (void)networkListViewControllerDidDisappear:(id)arg1;
- (void)networkListViewControllerDidFinish:(id)arg1;
- (void)networkListViewControllerDidTapOtherNetwork:(id)arg1;
- (bool)networkListViewControllerIsManagedAppleID:(id)arg1;
- (bool)networkListViewControllerNetworkRestrictionActive:(id)arg1;
- (bool)networkListViewControllerPowerModificationDisabled:(id)arg1;
- (bool)networkListViewControllerWAPIEnabled:(id)arg1;
- (id)networks;
- (id)otherNetworkVC;
- (bool)powered;
- (void)presentTrustCertificateForNetwork:(id)arg1 profile:(id)arg2;
- (void)pushDataUsageViewController;
- (bool)refreshedKnownNetworks;
- (void)removeScanCache;
- (bool)scanForPersonalHotspots;
- (id)scanManager;
- (void)scanManager:(id)arg1 didFindHotspotHelperNetworks:(id)arg2;
- (id)scanManager:(id)arg1 filterScanResults:(id)arg2;
- (void)scanManager:(id)arg1 stateDidChange:(long long)arg2;
- (void)scanManager:(id)arg1 updatedPartialResults:(id)arg2;
- (id)scanManagerKnownNetworks:(id)arg1;
- (void)scanManagerScanningDidFinish:(id)arg1 withResults:(id)arg2 error:(id)arg3;
- (void)scanManagerScanningWillStart:(id)arg1;
- (bool)scanManagerShouldSupportHotspotHelper:(id)arg1;
- (bool)scanManagerShouldSupportUnfilteredScanning:(id)arg1;
- (id)scanMetricsManager;
- (void)setAssociatingNetwork:(id)arg1;
- (void)setAssociatingToOtherNetwork:(bool)arg1;
- (void)setAssociationContext:(id)arg1;
- (void)setBackgroundQueue:(id)arg1;
- (void)setCanScanForPersonalHotspots:(bool)arg1;
- (void)setCertificateContext:(id)arg1;
- (void)setCredentialsContext:(id)arg1;
- (void)setDetailsContext:(id)arg1;
- (void)setGasController:(id)arg1;
- (void)setHS20Supported:(bool)arg1;
- (void)setHealthManager:(id)arg1;
- (void)setHealthRecommendationOverrides:(id)arg1;
- (void)setHotspotInterface:(id)arg1;
- (void)setInterface:(id)arg1;
- (void)setKnownNetworkStore:(id)arg1;
- (void)setKnownNetworksListController:(id)arg1;
- (void)setLatestLinkQuality:(id)arg1;
- (void)setNetworks:(id)arg1;
- (void)setOtherNetworkVC:(id)arg1;
- (void)setPowered:(bool)arg1;
- (void)setRefreshedKnownNetworks:(bool)arg1;
- (void)setScanForPersonalHotspots:(bool)arg1;
- (void)setScanManager:(id)arg1;
- (void)setScanMetricsManager:(id)arg1;
- (void)setStateMonitor:(id)arg1;
- (void)setViewController:(id)arg1;
- (void)setViewControllerSupportsCurrentNetworkSubtitle:(bool)arg1;
- (void)setViewProvider:(id)arg1;
- (void)setVisibleContext:(id)arg1;
- (void)setWifiClient:(id)arg1;
- (void)startScanning;
- (id)stateMonitor;
- (void)stopScanning;
- (id)viewController;
- (bool)viewControllerSupportsCurrentNetworkSubtitle;
- (id)viewProvider;
- (id)visibleContext;
- (id)wifiClient;

@end
