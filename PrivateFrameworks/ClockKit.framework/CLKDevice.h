/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/ClockKit.framework/ClockKit
 */

@interface CLKDevice : NSObject {
    int  _cachedKeybagLockState;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _capabilitiesLock;
    unsigned long long  _collectionType;
    bool  _hasRichMediaComplications;
    bool  _isBridgeActive;
    bool  _isExplorer;
    bool  _isLuxo;
    bool  _isZeusBlack;
    bool  _limitedToPreGlory;
    unsigned long long  _materialType;
    NRDevice * _nrDevice;
    int  _pairedDeviceCapabilitiesChangeNotificationToken;
    bool  _runningGraceOrLater;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _screenBounds;
    double  _screenCornerRadius;
    double  _screenScale;
    unsigned long long  _sizeClass;
    NSCache * _supportedCapabilitiesCache;
    bool  _supportsTritium;
    bool  _supportsUrsa;
    unsigned long long  _version;
}

@property (nonatomic) int cachedKeybagLockState;
@property (nonatomic, readonly) bool canCustomize;
@property (nonatomic, readonly) struct os_unfair_lock_s { unsigned int x1; } capabilitiesLock;
@property (nonatomic) unsigned long long collectionType;
@property (nonatomic) bool hasRichMediaComplications;
@property (nonatomic, readonly) bool isBridgeActive;
@property (nonatomic) bool isBridgeActive;
@property (nonatomic, readonly) bool isEcgPhoneComplicationEnabled;
@property (nonatomic) bool isExplorer;
@property (nonatomic, readonly) bool isLocked;
@property (nonatomic) bool isLuxo;
@property (nonatomic, readonly) bool isPaired;
@property (nonatomic, readonly) bool isRadioPhoneComplicationEnabled;
@property (nonatomic, readonly) bool isZeusBlack;
@property (nonatomic, readonly) bool limitedToPreGlory;
@property (nonatomic) unsigned long long materialType;
@property (nonatomic, retain) NRDevice *nrDevice;
@property (nonatomic, readonly) NSUUID *nrDeviceUUID;
@property (nonatomic, readonly) unsigned int nrDeviceVersion;
@property (nonatomic, readonly) int pairedDeviceCapabilitiesChangeNotificationToken;
@property (getter=isRunningGraceOrLater, nonatomic, readonly) bool runningGraceOrLater;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } screenBounds;
@property (nonatomic) double screenCornerRadius;
@property (nonatomic) double screenScale;
@property (nonatomic) unsigned long long sizeClass;
@property (nonatomic, retain) NSCache *supportedCapabilitiesCache;
@property (nonatomic, readonly) bool supportsTritium;
@property (nonatomic) bool supportsUrsa;
@property (nonatomic, readonly) bool unlockedSinceBoot;
@property (nonatomic, readonly) unsigned long long version;

// Image: /System/Library/PrivateFrameworks/ClockKit.framework/ClockKit

+ (id)_cachedDeviceForUUID:(id)arg1;
+ (void)_deviceDidBecomeActive;
+ (void)_resetCurrentDevice;
+ (id)activeNRDevice;
+ (id)currentDevice;
+ (id)deviceForNRDevice:(id)arg1;
+ (id)deviceForNRDevice:(id)arg1 forced:(bool)arg2;
+ (id)deviceForNRDeviceUUID:(id)arg1;
+ (void)initialize;
+ (id)nrDeviceForNRDeviceUUID:(id)arg1;
+ (void)setCurrentDevice:(id)arg1;

- (void).cxx_destruct;
- (void)_loadDeviceInfo;
- (bool)_queryAndCacheNanoRegistryDeviceCapabilities;
- (int)cachedKeybagLockState;
- (struct os_unfair_lock_s { unsigned int x1; })capabilitiesLock;
- (unsigned long long)collectionType;
- (void)dealloc;
- (bool)hasRichMediaComplications;
- (id)initWithNRDevice:(id)arg1;
- (bool)isBridgeActive;
- (bool)isEqual:(id)arg1;
- (bool)isExplorer;
- (bool)isLocked;
- (bool)isLuxo;
- (bool)isRunningGraceOrLater;
- (bool)isZeusBlack;
- (bool)limitedToPreGlory;
- (unsigned long long)materialType;
- (id)nrDevice;
- (id)nrDeviceUUID;
- (unsigned int)nrDeviceVersion;
- (int)pairedDeviceCapabilitiesChangeNotificationToken;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })screenBounds;
- (double)screenCornerRadius;
- (double)screenScale;
- (void)setCachedKeybagLockState:(int)arg1;
- (void)setCollectionType:(unsigned long long)arg1;
- (void)setHasRichMediaComplications:(bool)arg1;
- (void)setIsBridgeActive:(bool)arg1;
- (void)setIsExplorer:(bool)arg1;
- (void)setIsLuxo:(bool)arg1;
- (void)setMaterialType:(unsigned long long)arg1;
- (void)setNrDevice:(id)arg1;
- (void)setScreenBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScreenCornerRadius:(double)arg1;
- (void)setScreenScale:(double)arg1;
- (void)setSizeClass:(unsigned long long)arg1;
- (void)setSupportedCapabilitiesCache:(id)arg1;
- (void)setSupportsUrsa:(bool)arg1;
- (unsigned long long)sizeClass;
- (id)supportedCapabilitiesCache;
- (bool)supportsCapability:(id)arg1;
- (bool)supportsTritium;
- (bool)supportsUrsa;
- (bool)unlockedSinceBoot;
- (void)updateKeybagLockStateCacheWithState:(int)arg1;
- (unsigned long long)version;

// Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion

+ (void)setBridgeActiveNRDevice:(id)arg1;

- (bool)canCustomize;
- (bool)isEcgPhoneComplicationEnabled;
- (bool)isPaired;
- (bool)isRadioPhoneComplicationEnabled;

@end
