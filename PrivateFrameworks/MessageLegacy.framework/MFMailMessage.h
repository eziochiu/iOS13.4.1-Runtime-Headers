/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Message.framework/Message
 */

@interface MFMailMessage : MFMessage <EDIndexableMessage, MFBaseMessage, NSItemProviderWriting> {
    NSURL * _globalMessageURL;
    MFMessageInfo * _info;
    unsigned long long  _messageFlags;
    unsigned long long  _modSequenceNumber;
    bool  _shouldUseMailDrop;
    bool  _sourceIsManaged;
    bool  _useInternalSourceIsManaged;
}

@property (nonatomic, readonly) MailAccount *account;
@property (nonatomic, readonly, copy) NSArray *bcc;
@property (nonatomic, readonly) <ECMimePart> *bodyPart;
@property (nonatomic, readonly, copy) NSArray *cc;
@property (nonatomic, readonly) long long conversationHash;
@property (nonatomic, readonly) long long conversationID;
@property (nonatomic, readonly) NSDate *dateReceived;
@property (nonatomic, readonly) unsigned int dateReceivedInterval;
@property (nonatomic, readonly) NSDate *dateSent;
@property (nonatomic, readonly) unsigned int dateSentInterval;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) bool deleted;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSUUID *documentID;
@property (nonatomic, readonly) unsigned long long fileSize;
@property (nonatomic, readonly) bool flagged;
@property (nonatomic, readonly) ECMessageFlags *flags;
@property (nonatomic, readonly, copy) NSArray *from;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) MFMessageHeaders *headers;
@property (nonatomic, readonly, copy) NSDictionary *headersDictionary;
@property (nonatomic, readonly) bool isServerSearchResult;
@property (getter=isKnownToHaveAttachments, nonatomic, readonly) bool knownToHaveAttachments;
@property (readonly) NSSet *labels;
@property (nonatomic, readonly) long long libraryID;
@property (getter=isLibraryMessage, nonatomic, readonly) bool libraryMessage;
@property (nonatomic, readonly) ECAngleBracketIDHash *listIDHash;
@property (nonatomic, readonly, copy) NSArray *listUnsubscribe;
@property (nonatomic, readonly) MFMailboxUid *mailbox;
@property (nonatomic, readonly) long long mailboxID;
@property (nonatomic) unsigned long long messageFlags;
@property (nonatomic, readonly) long long messageIDHash;
@property (nonatomic, readonly, copy) NSString *messageIDHeader;
@property (nonatomic, readonly) ECAngleBracketIDHash *messageIDHeaderHash;
@property unsigned long long modSequenceNumber;
@property (nonatomic, readonly) unsigned long long numberOfAttachments;
@property (nonatomic, readonly) EMMessageObjectID *objectID;
@property (getter=isPartOfExistingThread, nonatomic, readonly) bool partOfExistingThread;
@property (nonatomic, readonly, copy) NSString *persistentID;
@property (nonatomic, readonly) bool read;
@property (nonatomic, readonly, copy) NSArray *references;
@property (nonatomic, readonly, copy) NSString *remoteID;
@property (nonatomic, readonly) bool senderVIP;
@property (nonatomic, readonly, copy) NSArray *senders;
@property (nonatomic) bool shouldUseMailDrop;
@property (nonatomic) bool sourceIsManaged;
@property (nonatomic, readonly, copy) ECSubject *subject;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSArray *to;
@property (nonatomic, readonly) unsigned int uid;
@property (nonatomic, readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;

// Image: /System/Library/PrivateFrameworks/Message.framework/Message

+ (Class)dataMessageStoreToUse;
+ (unsigned int)displayablePriorityForPriority:(int)arg1;
+ (id)forwardedMessagePrefixWithSpacer:(bool)arg1;
+ (unsigned int)validatePriority:(int)arg1;

- (void).cxx_destruct;
- (id)URL;
- (id)account;
- (bool)answered;
- (id)bestAlternativePart;
- (id)bestAlternativePart:(bool*)arg1;
- (id)bodyPart;
- (unsigned long long)conversationFlags;
- (long long)conversationHash;
- (bool)conversationMuted;
- (bool)conversationVIP;
- (id)copyMessageInfo;
- (bool)deleted;
- (id)externalConversationID;
- (bool)flagged;
- (id)flags;
- (id)from;
- (id)globalMessageURL;
- (id)headersDictionary;
- (bool)isKnownToHaveAttachments;
- (bool)isPartOfExistingThread;
- (bool)isSearchResultWithBogusRemoteId;
- (bool)isServerSearchResult;
- (bool)junk;
- (id)labels;
- (long long)libraryID;
- (id)listUnsubscribe;
- (void)loadCachedHeaderValuesFromHeaders:(id)arg1;
- (id)loadMeetingData;
- (id)loadMeetingExternalID;
- (id)loadMeetingMetadata;
- (id)mailMessageStore;
- (id)mailbox;
- (void)markAsFlagged;
- (void)markAsForwarded;
- (void)markAsNotFlagged;
- (void)markAsNotViewed;
- (void)markAsReplied;
- (void)markAsViewed;
- (unsigned long long)messageFlags;
- (id)messageStore;
- (unsigned long long)modSequenceNumber;
- (unsigned long long)numberOfAttachments;
- (id)objectID;
- (id)originalMailboxURL;
- (id)preferredAccountToUseForReplying;
- (id)preferredEmailAddressToReplyWith;
- (int)priority;
- (bool)read;
- (id)references;
- (id)remoteMailboxURL;
- (bool)senderVIP;
- (void)setConversationFlags:(unsigned long long)arg1;
- (void)setMessageFlags:(unsigned long long)arg1;
- (void)setMessageFlagsWithoutCommitting:(unsigned long long)arg1;
- (void)setModSequenceNumber:(unsigned long long)arg1;
- (void)setMutableInfoFromMessage:(id)arg1;
- (void)setPriorityFromHeaders:(id)arg1;
- (void)setShouldUseMailDrop:(bool)arg1;
- (void)setSourceIsManaged:(bool)arg1;
- (void)setSubject:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceived:(double)arg6 dateSent:(double)arg7 summary:(id)arg8 withOptions:(unsigned int)arg9;
- (void)setSummary:(id)arg1;
- (bool)shouldSetSummary;
- (bool)shouldUseMailDrop;
- (bool)sourceIsManaged;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

+ (bool)dragItemsAreAllMessages:(id)arg1;
+ (id)writableTypeIdentifiersForItemProvider;

- (id)_attributedSubject;
- (id)_loadFileRepresentationOfTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(id /* block */)arg2;
- (void)_loadMessageDataWithCompletion:(id /* block */)arg1;
- (long long)_preferredRepresentationForItemProviderWritableTypeIdentifier:(id)arg1;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals

+ (void)sg_loadMailCoreFramework;
+ (id)sg_messageWithRFC822Data:(id)arg1;

- (id)sg_bestAlternativePart;

@end
