/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/RenderBox.framework/RenderBox
 */

@interface RBDevice : NSObject {
    struct refcounted_ptr<RB::Device> { 
        struct Device {} *_p; 
    }  _device;
    struct atomic<unsigned int> { 
        struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { 
            _Atomic unsigned int __a_value; 
        } __a_; 
    }  _pending_collect;
    struct objc_ptr<NSObject<OS_dispatch_queue> *> { 
        NSObject<OS_dispatch_queue> *_p; 
    }  _queue;
}

@property (nonatomic, readonly) <MTLCaptureScope> *captureScope;
@property (nonatomic, readonly) <MTLDevice> *device;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, readonly) struct Device { int (**x1)(); unsigned int x2; struct objc_ptr<id<MTLDevice> > { id x_3_1_1; } x3; struct objc_ptr<id<MTLLibrary> > { id x_4_1_1; } x4; struct objc_ptr<id<MTLCommandQueue> > { id x_5_1_1; } x5; struct objc_ptr<id<MTLCaptureScope> > { id x_6_1_1; } x6; struct BufferRegion { struct Buffer {} *x_7_1_1; unsigned long long x_7_1_2; unsigned long long x_7_1_3; } x7; struct BufferRegion { struct Buffer {} *x_8_1_1; unsigned long long x_8_1_2; unsigned long long x_8_1_3; } x8; struct BufferRegion { struct Buffer {} *x_9_1_1; unsigned long long x_9_1_2; unsigned long long x_9_1_3; } x9; struct objc_ptr<id<MTLTexture> > { id x_10_1_1; } x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned long long x14; unsigned long long x15; struct Heap { unsigned long long x_16_1_1; struct Page {} *x_16_1_2; char *x_16_1_3; unsigned long long x_16_1_4; } x16; /* Warning: unhandled struct encoding: '{list<RB::refcounted_ptr<RB::Buffer>' */ struct x17; }*rb_device; /* unknown property attribute:  std::__1::default_delete<RB::GlyphPathCache> >=^{GlyphPathCache}}}^{CGGlyphLock}} */

+ (bool)isSupported;
+ (id)sharedDefaultDevice;
+ (id)sharedDevice:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)captureScope;
- (void)collectResources;
- (void)dealloc;
- (id)device;
- (id)initWithDevice:(id)arg1;
- (id)queue;
- (struct Device { int (**x1)(); unsigned int x2; struct objc_ptr<id<MTLDevice> > { id x_3_1_1; } x3; struct objc_ptr<id<MTLLibrary> > { id x_4_1_1; } x4; struct objc_ptr<id<MTLCommandQueue> > { id x_5_1_1; } x5; struct objc_ptr<id<MTLCaptureScope> > { id x_6_1_1; } x6; struct BufferRegion { struct Buffer {} *x_7_1_1; unsigned long long x_7_1_2; unsigned long long x_7_1_3; } x7; struct BufferRegion { struct Buffer {} *x_8_1_1; unsigned long long x_8_1_2; unsigned long long x_8_1_3; } x8; struct BufferRegion { struct Buffer {} *x_9_1_1; unsigned long long x_9_1_2; unsigned long long x_9_1_3; } x9; struct objc_ptr<id<MTLTexture> > { id x_10_1_1; } x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned long long x14; unsigned long long x15; struct Heap { unsigned long long x_16_1_1; struct Page {} *x_16_1_2; char *x_16_1_3; unsigned long long x_16_1_4; } x16; struct list<RB::refcounted_ptr<RB::Buffer>, std::__1::allocator<RB::refcounted_ptr<RB::Buffer> > > { struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> { struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> {} *x_1_2_1; struct __list_node_base<RB::refcounted_ptr<RB::Buffer>, void *> {} *x_1_2_2; } x_17_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<RB::refcounted_ptr<RB::Buffer>, void *> > > { unsigned long long x_2_2_1; } x_17_1_2; } x17; }*)rb_device;

@end
