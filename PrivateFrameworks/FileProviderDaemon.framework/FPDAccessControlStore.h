/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/FileProviderDaemon.framework/FileProviderDaemon
 */

@interface FPDAccessControlStore : NSObject {
    NSURL * _databaseBaseURL;
    PQLConnection * _dbConnection;
    bool  _dbIsOpen;
    NSObject<OS_dispatch_queue> * _syncQueue;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *syncQueue;

+ (id)sharedStore;

- (void).cxx_destruct;
- (id)_bundleKeyForBundleIdentifier:(id)arg1 db:(id)arg2 create:(bool)arg3;
- (id)_fileKeyForProviderKey:(id)arg1 domain:(id)arg2 identifier:(id)arg3 db:(id)arg4 create:(bool)arg5;
- (void)allowProviderWithIdentifier:(id)arg1 toProvideItemID:(id)arg2 toConsumerWithIdentifier:(id)arg3;
- (void)dealloc;
- (void)disallowProviderWithIdentifier:(id)arg1 fromProvidingItemWithID:(id)arg2 toConsumerWithIdentifier:(id)arg3;
- (id)dumpForBundleIdentifier:(id)arg1;
- (id)init;
- (id)initWithDatabaseBaseURL:(id)arg1;
- (bool)isProviderIdentifier:(id)arg1 allowedToProvideItemID:(id)arg2 toConsumerWithIdentifier:(id)arg3;
- (bool)isProviderWithIdentifier:(id)arg1 allowedToProvideItemID:(id)arg2 toConsumerWithIdentifier:(id)arg3;
- (bool)migrate:(id)arg1 fromLegacyDatabase:(id)arg2;
- (void)openDatabase;
- (void)performWithDBConnection:(id /* block */)arg1;
- (void)reopenDatabaseAfterUnlock;
- (void)setSyncQueue:(id)arg1;
- (id)syncQueue;
- (void)validateDatabase:(id)arg1;

@end
