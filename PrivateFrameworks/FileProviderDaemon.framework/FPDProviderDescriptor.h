/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/FileProviderDaemon.framework/FileProviderDaemon
 */

@interface FPDProviderDescriptor : NSObject <NSSecureCoding> {
    NSString * _bundleVersion;
    bool  _canToggleDomainVisibility;
    bool  _defaultDomainVisible;
    bool  _enabledByDefault;
    NSURL * _extensionBundleURL;
    NSString * _extensionPointVersion;
    NSArray * _extensionStorageURLs;
    bool  _hasExplicitExtensionStorageURLs;
    NSString * _identifier;
    bool  _isAvailableSystemWide;
    NSString * _localizedName;
    bool  _owningApplicationIsManaged;
    NSString * _purposeIdentifier;
    bool  _readonly;
    NSArray * _requestedExtendedAttributes;
    bool  _shouldHideExtensionName;
    NSArray * _supportedFileTypes;
    NSArray * _supportedSearchFilters;
    bool  _supportsEnumeration;
    bool  _supportsPickingFolders;
    bool  _supportsUnzippedPackages;
    NSString * _topLevelBundleIdentifier;
    bool  _usesUniqueItemIdentifiersAcrossDevices;
}

@property (nonatomic, retain) NSString *bundleVersion;
@property (nonatomic) bool canToggleDomainVisibility;
@property (nonatomic) bool defaultDomainVisible;
@property (nonatomic) bool enabledByDefault;
@property (nonatomic, retain) NSURL *extensionBundleURL;
@property (nonatomic, retain) NSString *extensionPointVersion;
@property (nonatomic, retain) NSArray *extensionStorageURLs;
@property (nonatomic) bool hasExplicitExtensionStorageURLs;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic) bool isAvailableSystemWide;
@property (nonatomic, retain) NSString *localizedName;
@property (nonatomic) bool owningApplicationIsManaged;
@property (nonatomic, retain) NSString *purposeIdentifier;
@property (nonatomic) bool readonly;
@property (nonatomic, retain) NSArray *requestedExtendedAttributes;
@property (nonatomic) bool shouldHideExtensionName;
@property (nonatomic, retain) NSArray *supportedFileTypes;
@property (nonatomic, retain) NSArray *supportedSearchFilters;
@property (nonatomic) bool supportsEnumeration;
@property (nonatomic) bool supportsPickingFolders;
@property (nonatomic) bool supportsUnzippedPackages;
@property (nonatomic, retain) NSString *topLevelBundleIdentifier;
@property (nonatomic) bool usesUniqueItemIdentifiersAcrossDevices;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)bundleVersion;
- (bool)canToggleDomainVisibility;
- (bool)defaultDomainVisible;
- (bool)enabledByDefault;
- (void)encodeWithCoder:(id)arg1;
- (id)extensionBundleURL;
- (id)extensionPointVersion;
- (id)extensionStorageURLs;
- (bool)hasExplicitExtensionStorageURLs;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithExtension:(id)arg1;
- (bool)isAvailableSystemWide;
- (id)localizedName;
- (bool)owningApplicationIsManaged;
- (id)purposeIdentifier;
- (bool)readonly;
- (id)requestedExtendedAttributes;
- (void)setBundleVersion:(id)arg1;
- (void)setCanToggleDomainVisibility:(bool)arg1;
- (void)setDefaultDomainVisible:(bool)arg1;
- (void)setEnabledByDefault:(bool)arg1;
- (void)setExtensionBundleURL:(id)arg1;
- (void)setExtensionPointVersion:(id)arg1;
- (void)setExtensionStorageURLs:(id)arg1;
- (void)setHasExplicitExtensionStorageURLs:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsAvailableSystemWide:(bool)arg1;
- (void)setLocalizedName:(id)arg1;
- (void)setOwningApplicationIsManaged:(bool)arg1;
- (void)setPurposeIdentifier:(id)arg1;
- (void)setReadonly:(bool)arg1;
- (void)setRequestedExtendedAttributes:(id)arg1;
- (void)setShouldHideExtensionName:(bool)arg1;
- (void)setSupportedFileTypes:(id)arg1;
- (void)setSupportedSearchFilters:(id)arg1;
- (void)setSupportsEnumeration:(bool)arg1;
- (void)setSupportsPickingFolders:(bool)arg1;
- (void)setSupportsUnzippedPackages:(bool)arg1;
- (void)setTopLevelBundleIdentifier:(id)arg1;
- (void)setUsesUniqueItemIdentifiersAcrossDevices:(bool)arg1;
- (bool)shouldHideExtensionName;
- (id)supportedFileTypes;
- (id)supportedSearchFilters;
- (bool)supportsEnumeration;
- (bool)supportsPickingFolders;
- (bool)supportsUnzippedPackages;
- (id)topLevelBundleIdentifier;
- (bool)usesUniqueItemIdentifiersAcrossDevices;

@end
