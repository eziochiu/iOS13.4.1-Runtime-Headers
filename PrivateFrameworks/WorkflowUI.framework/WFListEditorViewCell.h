/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WorkflowUI.framework/WorkflowUI
 */

@interface WFListEditorViewCell : UITableViewCell <WFListEditorViewDelegate, WFTextTokenEditorViewDelegate, WFVariableUIDelegate> {
    NSSet * _allowedVariableTypes;
    <WFListEditorViewCellDelegate> * _delegate;
    <WFComponentNavigationContext> * _navigationContext;
    UIViewController * _presentedViewController;
    bool  _standaloneVariablesAsContentItems;
    WFTextTokenChooser * _textTokenChooser;
    id /* block */  _updateBlock;
    id /* block */  _updateStateBlock;
    <NSObject> * _value;
    UIButton * _valueButton;
    WFTextTokenEditorView * _valueEditor;
    <WFVariableProvider> * _variableProvider;
    <WFVariableUIDelegate> * _variableUIDelegate;
    WFVariableConfigurationButton * _variableValueButton;
    bool  _variablesDisabled;
}

@property (nonatomic, copy) NSSet *allowedVariableTypes;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <WFListEditorViewCellDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) <WFComponentNavigationContext> *navigationContext;
@property (nonatomic) UIViewController *presentedViewController;
@property (nonatomic) bool standaloneVariablesAsContentItems;
@property (readonly) Class superclass;
@property (nonatomic, retain) WFTextTokenChooser *textTokenChooser;
@property (nonatomic, copy) id /* block */ updateBlock;
@property (nonatomic, copy) id /* block */ updateStateBlock;
@property (nonatomic, copy) <NSObject> *value;
@property (nonatomic, readonly) UIButton *valueButton;
@property (nonatomic, readonly) WFTextTokenEditorView *valueEditor;
@property (nonatomic, readonly) WFPropertyListParameterValue *valueEditorValue;
@property (nonatomic) <WFVariableProvider> *variableProvider;
@property (nonatomic) <WFVariableUIDelegate> *variableUIDelegate;
@property (nonatomic, readonly) WFVariableConfigurationButton *variableValueButton;
@property (nonatomic) bool variablesDisabled;

- (void).cxx_destruct;
- (id)allowedVariableTypes;
- (bool)becomeFirstResponder;
- (void)beginEditingWithContext:(id)arg1;
- (void)collectionValueUpdatedWithCount:(unsigned long long)arg1;
- (void)configureEditorViewController:(id)arg1;
- (id)delegate;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)layoutSubviews;
- (void)listEditorView:(id)arg1 didUpdateWithItem:(id)arg2;
- (id)navigationContext;
- (void)notifyDelegateTextUpdated;
- (void)notifyDelegateTextUpdatedThrottled;
- (id)presentedViewController;
- (void)revealAction:(id)arg1 fromSourceView:(id)arg2 preScrollHandler:(id /* block */)arg3 goBackHandler:(id /* block */)arg4 scrolledAwayHandler:(id /* block */)arg5;
- (void)setAllowedVariableTypes:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setNavigationContext:(id)arg1;
- (void)setPresentedViewController:(id)arg1;
- (void)setStandaloneVariablesAsContentItems:(bool)arg1;
- (void)setTextTokenChooser:(id)arg1;
- (void)setUpdateBlock:(id /* block */)arg1;
- (void)setUpdateStateBlock:(id /* block */)arg1;
- (void)setValue:(id)arg1;
- (void)setValueButtonTitle:(id)arg1;
- (void)setVariableProvider:(id)arg1;
- (void)setVariableUIDelegate:(id)arg1;
- (void)setVariablesDisabled:(bool)arg1;
- (void)showActionOutputPickerFromSourceResponder:(id)arg1 allowExtensionInput:(bool)arg2 variableProvider:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)standaloneVariablesAsContentItems;
- (id)textTokenChooser;
- (void)textTokenEditorTextDidChange:(id)arg1;
- (void)textTokenEditorTextDidEndEditing:(id)arg1;
- (id /* block */)updateBlock;
- (void)updateEditorBlocks;
- (id /* block */)updateStateBlock;
- (void)updateValueEditorResultType;
- (void)updateValueEditorWithValue:(id)arg1;
- (void)updateWithValueState:(id)arg1;
- (id)value;
- (id)valueButton;
- (void)valueButtonTapped:(id)arg1;
- (id)valueEditor;
- (id)valueEditorValue;
- (id)valueTitle;
- (id)variableProvider;
- (id)variableUIDelegate;
- (id)variableValueButton;
- (void)variableValueChanged:(id)arg1;
- (void)variableValueCleared:(id)arg1;
- (bool)variablesDisabled;

@end
