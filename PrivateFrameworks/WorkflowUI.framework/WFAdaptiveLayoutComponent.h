/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WorkflowUI.framework/WorkflowUI
 */

@interface WFAdaptiveLayoutComponent : CKComponent {
    /* Warning: unhandled struct encoding: '{vector<CKComponent *, std::__1::allocator<CKComponent *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *> >="__value_"^@}}' */ struct vector<CKComponent *, std::__1::allocator<CKComponent *> > { 
        __end_ **__begin_; 
    }  _children;
}

+ (id)newWithChildren:(const struct vector<CKComponent *, std::__1::allocator<CKComponent *> > { id *x1; id *x2; struct __compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *> > { id *x_3_1_1; } x3; }*)arg1 size:(const struct CKComponentSize { struct CKRelativeDimension { int x_1_1_1; double x_1_1_2; } x1; struct CKRelativeDimension { int x_2_1_1; double x_2_1_2; } x2; struct CKRelativeDimension { int x_3_1_1; double x_3_1_2; } x3; struct CKRelativeDimension { int x_4_1_1; double x_4_1_2; } x4; struct CKRelativeDimension { int x_5_1_1; double x_5_1_2; } x5; struct CKRelativeDimension { int x_6_1_1; double x_6_1_2; } x6; }*)arg2;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CKComponentLayout { id x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild> > > { struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild> > {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; })computeLayoutThatFits:(struct CKSizeRange { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;

@end
