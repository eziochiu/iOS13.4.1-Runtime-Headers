/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotosGraph.framework/PhotosGraph
 */

@interface PGMemoryController : NSObject {
    NSMutableDictionary * _backingMomentIDsByPHMemoryIDs;
    NSSet * _blacklistedFeatures;
    NSArray * _blacklistedMemories;
    bool  _bypassesCategoryCheckForUpgrades;
    NSSet * _categoryBlacklist;
    NSSet * _categoryWhitelist;
    unsigned long long  _currentRandom;
    NSDate * _directModeEndDate;
    NSDate * _directModeStartDate;
    NSDate * _earliestDate;
    NSMutableIndexSet * _excludedFeaturedSubcategories;
    NSArray * _existingMemories;
    NSArray * _existingSuggestions;
    NSMutableDictionary * _featureVectorByPHMemoryIDs;
    double  _forcedBeta;
    CLSHolidayCalendarEventService * _holidayService;
    bool  _ignoresMinimumNumberOfAssets;
    bool  _ignoresMinimumNumberOfMoments;
    bool  _ignoresMomentIsInteresting;
    bool  _isAttemptingToUpgradeBestOfPastToFeaturedTrip;
    bool  _isCreatingEverMemories;
    bool  _isDryTesting;
    bool  _isFirstTimesAfterUpgrade;
    bool  _isLastResort;
    NSMutableArray * _latentMemories;
    NSDate * _latestDate;
    NSDate * _localDate;
    CLLocation * _location;
    NSObject<OS_os_log> * _loggingConnection;
    PGManager * _manager;
    NSSet * _mandatoryFeatures;
    NSMutableIndexSet * _matchedCategories;
    unsigned long long  _minimumNumberOfAssetsForContiguousMomentsMemory;
    unsigned long long  _minimumNumberOfAssetsForDisjointMomentsMemory;
    unsigned long long  _minimumNumberOfAssetsForMomentMemory;
    NSMutableDictionary * _momentsByMomentIDs;
    NSMutableDictionary * _numberOfAssetsByMomentIDs;
    long long  _numberOfDaysSinceLastMemory;
    NSMapTable * _numberOfMemoryGenerationDaysByMemory;
    unsigned long long  _numberOfNewMemoriesForPeriodicity;
    unsigned long long  _numberOfNewMemoriesForUserRequest;
    unsigned long long  _precision;
    bool  _probabilityAlwaysPasses;
    id /* block */  _progressBlock;
    bool  _skipsAssetCollection;
    bool  _skipsBestOfPastUpgradeToFeaturedTrip;
    bool  _skipsBlacklistedFeatureCheck;
    bool  _skipsCuration;
    bool  _skipsMeaningfulEventUpgrades;
    bool  _skipsTitleGeneration;
    bool  _skipsWeekendUpgrades;
    NSDate * _universalDate;
}

@property (retain) NSSet *blacklistedFeatures;
@property bool bypassesCategoryCheckForUpgrades;
@property (retain) NSSet *categoryBlacklist;
@property (retain) NSSet *categoryWhitelist;
@property bool ignoresMinimumNumberOfAssets;
@property bool ignoresMinimumNumberOfMoments;
@property bool ignoresMomentIsInteresting;
@property (readonly) bool isCreatingEverMemories;
@property bool isDryTesting;
@property (readonly) NSObject<OS_os_log> *loggingConnection;
@property (nonatomic, readonly) PGManager *manager;
@property (nonatomic, retain) NSSet *mandatoryFeatures;
@property (readonly) unsigned long long maximumNumberOfFacesPerAssetForSingleFocusedPersonFacedAssets;
@property (readonly) unsigned long long minimumNumberOfAssetsForContiguousMomentsMemory;
@property (readonly) unsigned long long minimumNumberOfAssetsForDisjointMomentsMemory;
@property (readonly) unsigned long long minimumNumberOfAssetsForMomentMemory;
@property (readonly) double minimumRatioOfFocusedPersonFacesPerAssetForMultipleFocusedPersonsFacedAssets;
@property unsigned long long numberOfNewMemoriesForPeriodicity;
@property unsigned long long numberOfNewMemoriesForUserRequest;
@property bool probabilityAlwaysPasses;
@property (readonly, copy) id /* block */ progressBlock;
@property bool skipsAssetCollection;
@property bool skipsBestOfPastUpgradeToFeaturedTrip;
@property bool skipsBlacklistedFeatureCheck;
@property bool skipsCuration;
@property bool skipsMeaningfulEventUpgrades;
@property bool skipsTitleGeneration;
@property bool skipsWeekendUpgrades;

+ (double)computeBetaWithManager:(id)arg1;
+ (void)computeMinimumNumbersOfAssetsWithCompletionBlock:(id /* block */)arg1;
+ (unsigned long long)minimumNumberOfCuratedAssetsForMemories;

- (void).cxx_destruct;
- (id)_addressFeatureForPotentialMemory:(id)arg1;
- (id)_addressFeatureForPotentialMemory:(id)arg1 prominentOnly:(bool)arg2;
- (id)_areaFeatureForPotentialMemory:(id)arg1;
- (id)_areaFeatureForPotentialMemory:(id)arg1 prominentOnly:(bool)arg2;
- (bool)_assetCollection:(id)arg1 matchesAssetCollection:(id)arg2;
- (float)_assetOverlapBetweenMomentsForIDs:(id)arg1 andMomentsForIDs:(id)arg2;
- (float)_assetOverlapBetweenMomentsForIDs:(id)arg1 andMomentsForIDs:(id)arg2 withNumberOfAssetsByMomentIDs:(id)arg3;
- (id)_createFirstEverMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_createFirstTimesAfterUpgradeMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_createMoreMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_createOneMemoryWithCategory:(unsigned long long)arg1 subcategory:(unsigned long long)arg2 localDate:(id)arg3 location:(id)arg4 peopleNames:(id)arg5;
- (id)_createPeriodicMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_createSecondEverMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_createThirdEverMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_createTodayWidgetMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(id /* block */)arg4;
- (id)_dateFeatureForPotentialMemory:(id)arg1;
- (id)_dateFeatureForPotentialMemory:(id)arg1 prominentOnly:(bool)arg2;
- (unsigned long long)_desireLevelForLastSeasonWithLocalDate:(id)arg1;
- (unsigned long long)_desireLevelForSeasonInHistoryWithLocalDate:(id)arg1;
- (bool)_doBestOfPastWithLocalDate:(id)arg1;
- (bool)_doBestOfRandomYear;
- (bool)_doCelebrationOverTimeWithLocalDate:(id)arg1;
- (bool)_doContextualTodayWidgetWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3;
- (bool)_doContextualWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3;
- (bool)_doDayInHistoryWithLocalDate:(id)arg1;
- (id)_doDirectModeWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 parameters:(id)arg4 progress:(id /* block */)arg5;
- (bool)_doEarlyMomentsWithPeopleForLocalDate:(id)arg1;
- (bool)_doFeaturedBabyBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedForType:(unsigned long long)arg1 beforeLocalDate:(id)arg2 usingLowRequirements:(bool)arg3 oldMemory:(bool)arg4;
- (bool)_doFeaturedMeaningfulEventAggregationBeforeLocalDate:(id)arg1 eventType:(unsigned long long)arg2 usingLowRequirements:(bool)arg3 oldMemory:(bool)arg4;
- (bool)_doFeaturedMeaningfulEventAggregationBeforeLocalDate:(id)arg1 meaning:(unsigned long long)arg2 lowRequirements:(bool)arg3;
- (bool)_doFeaturedMeaningfulEventAggregationBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedMeaningfulEventBeforeLocalDate:(id)arg1 eventType:(unsigned long long)arg2 usingLowRequirements:(bool)arg3 oldMemory:(bool)arg4;
- (bool)_doFeaturedMeaningfulEventBeforeLocalDate:(id)arg1 meaning:(unsigned long long)arg2 lowRequirements:(bool)arg3;
- (bool)_doFeaturedMeaningfulEventBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedNeighborBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedPastSupersetBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedPeopleBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedPeopleVisitingBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedPersonBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedPersonOverTimeBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedPetBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedRecurrentTripBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedSocialGroupBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedSocialGroupOverTimeBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedTripBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doFeaturedTripBetweenLocalDate:(id)arg1 andLocalDate:(id)arg2;
- (bool)_doFeaturedWeekendBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doHomeAggregationWithLocalDate:(id)arg1;
- (bool)_doKeyPeopleForUpcomingHolidayEventWithLocalDate:(id)arg1;
- (bool)_doNearbyTodayWithLocalDate:(id)arg1 andLocation:(id)arg2;
- (bool)_doOneFeaturedWithLocalDate:(id)arg1 reason:(unsigned long long)arg2 usingLowRequirements:(bool)arg3 hasExhaustedFeatured:(bool*)arg4;
- (bool)_doPlaceAreaBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doPlaceBusinessBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doPlaceLocationBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doPlaceRegionBeforeLocalDate:(id)arg1 usingLowRequirements:(bool)arg2 oldMemory:(bool)arg3;
- (bool)_doRecentPastEventsWithLocalDate:(id)arg1;
- (bool)_doSeasonWithLocalDate:(id)arg1 forType:(unsigned long long)arg2;
- (bool)_doSometimeInHistory;
- (bool)_doThrowbackThursdayForLocalDate:(id)arg1;
- (bool)_doTodayInTimeWithLocalDate:(id)arg1;
- (bool)_doTodaysBirthdayWithLocalDate:(id)arg1;
- (bool)_doUpcomingRelatedEventsWithLocalDate:(id)arg1;
- (bool)_doYearSummaryWithLocalDate:(id)arg1;
- (unsigned long long)_featuredSubcategoryForGeneratorType:(unsigned long long)arg1;
- (unsigned long long)_generatorTypeForFeaturedSubcategory:(unsigned long long)arg1;
- (bool)_hasExhaustedFeatured:(bool*)arg1;
- (id)_holidayFeatureForPotentialMemory:(id)arg1;
- (id)_holidayFeatureForPotentialMemory:(id)arg1 prominentOnly:(bool)arg2;
- (id)_idsOfMomentsBackingPHMemory:(id)arg1;
- (id)_localIdentifierOfMainPersonInEvent:(id)arg1 prominentOnly:(bool)arg2;
- (id)_locationBlacklistableFeatureForPotentialMemory:(id)arg1;
- (unsigned long long)_meaningFromString:(id)arg1;
- (bool)_memories:(id)arg1 containAssetCollection:(id)arg2;
- (bool)_memories:(id)arg1 containMemory:(id)arg2;
- (bool)_memories:(id)arg1 coverTypeOfMemory:(id)arg2;
- (unsigned long long)_numberOfAssetsInMomentsForIDs:(id)arg1 withNumberOfAssetsByMomentIDs:(id)arg2;
- (id)_peopleBlacklistableFeatureForPotentialMemory:(id)arg1;
- (id)_personFeatureForEarlyPotentialMemory:(id)arg1;
- (id)_personFeatureForPotentialMemory:(id)arg1 prominentOnly:(bool)arg2;
- (id)_timeBlacklistableFeatureForPotentialMemory:(id)arg1;
- (id)_uuidOfPersonsWithBirthdayOnDate:(id)arg1;
- (bool)_wantsBestOfPastWithReason:(unsigned long long)arg1;
- (bool)_wantsCelebrationOverTimeWithReason:(unsigned long long)arg1;
- (bool)_wantsContextualWithReason:(unsigned long long)arg1 location:(id)arg2 peopleNames:(id)arg3;
- (bool)_wantsDayInHistoryWithReason:(unsigned long long)arg1;
- (bool)_wantsEarlyMomentsWithPeopleWithReason:(unsigned long long)arg1;
- (bool)_wantsFeaturedBabyWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedForType:(unsigned long long)arg1 reason:(unsigned long long)arg2 usingLowRequirements:(bool)arg3;
- (bool)_wantsFeaturedMeaningfulEventAggregationWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedMeaningfulEventWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedNeighborWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedPastSupersetWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedPeopleVisitingWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedPeopleWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedPersonOverTimeWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedPersonWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedPetWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedRecurrentTripWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedSocialGroupOverTimeWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedSocialGroupWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedTripWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsFeaturedWeekendWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsHomeAggregationWithLocalDate:(id)arg1 reason:(unsigned long long)arg2;
- (bool)_wantsKeyPeopleForUpcomingHolidayEventWithReason:(unsigned long long)arg1;
- (bool)_wantsNearbyTodayWithReason:(unsigned long long)arg1 location:(id)arg2;
- (bool)_wantsPlaceAreaWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsPlaceBusinessWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsPlaceLocationWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsPlaceRegionWithReason:(unsigned long long)arg1 usingLowRequirements:(bool)arg2;
- (bool)_wantsRecentPastEventsWithReason:(unsigned long long)arg1;
- (bool)_wantsThrowbackThursdayWithReason:(unsigned long long)arg1;
- (bool)_wantsTodayInTimeWithReason:(unsigned long long)arg1;
- (bool)_wantsTodaysBirthdayWithReason:(unsigned long long)arg1;
- (bool)_wantsUpcomingRelatedEventsWithReason:(unsigned long long)arg1;
- (id)anyBlacklistedFeatureHitByCompletePotentialMemory:(id)arg1;
- (id)anyBlacklistedFeatureHitByEarlyPotentialMemory:(id)arg1;
- (bool)anyBlacklistedFeatureIsHitByEvent:(id)arg1;
- (id)blacklistableFeaturesForPotentialMemory:(id)arg1;
- (id)blacklistedFeatures;
- (bool)bypassesCategoryCheckForUpgrades;
- (bool)canUsePotentialMemory:(id)arg1 isDebug:(bool)arg2;
- (id)categoryBlacklist;
- (id)categoryWhitelist;
- (id)createMemoriesWithOptions:(id)arg1 progress:(id /* block */)arg2;
- (unsigned long long)desireLevelForYearSummaryWithLocalDate:(id)arg1;
- (bool)eventIsTimely:(id)arg1;
- (bool)ignoresMinimumNumberOfAssets;
- (bool)ignoresMinimumNumberOfMoments;
- (bool)ignoresMomentIsInteresting;
- (id)initWithManager:(id)arg1;
- (bool)isCreatingEverMemories;
- (bool)isDryTesting;
- (bool)isOKToProceedWithDirectEarlyPotentialMemory:(id)arg1;
- (bool)isOKToProceedWithEarlyPotentialMemory:(id)arg1;
- (id)loggingConnection;
- (id)manager;
- (id)mandatoryFeatures;
- (unsigned long long)maximumNumberOfFacesPerAssetForSingleFocusedPersonFacedAssets;
- (unsigned long long)minimumNumberOfAssetsForContiguousMomentsMemory;
- (unsigned long long)minimumNumberOfAssetsForDisjointMomentsMemory;
- (unsigned long long)minimumNumberOfAssetsForMomentMemory;
- (double)minimumRatioOfFocusedPersonFacesPerAssetForMultipleFocusedPersonsFacedAssets;
- (id)momentForMomentID:(id)arg1;
- (unsigned long long)numberOfNewMemoriesForPeriodicity;
- (unsigned long long)numberOfNewMemoriesForUserRequest;
- (bool)potentialMemory:(id)arg1 isTooSimilarTooSoonToPHMemory:(id)arg2;
- (bool)probabilityAlwaysPasses;
- (bool)probabilityPassWithThreshold:(double)arg1;
- (id /* block */)progressBlock;
- (unsigned int)randomNumber;
- (unsigned int)randomNumberLessThan:(unsigned long long)arg1;
- (void)resetIgnoresAndSkips;
- (void)setBlacklistedFeatures:(id)arg1;
- (void)setBypassesCategoryCheckForUpgrades:(bool)arg1;
- (void)setCategoryBlacklist:(id)arg1;
- (void)setCategoryWhitelist:(id)arg1;
- (void)setIgnoresMinimumNumberOfAssets:(bool)arg1;
- (void)setIgnoresMinimumNumberOfMoments:(bool)arg1;
- (void)setIgnoresMomentIsInteresting:(bool)arg1;
- (void)setIsDryTesting:(bool)arg1;
- (void)setMandatoryFeatures:(id)arg1;
- (void)setNumberOfNewMemoriesForPeriodicity:(unsigned long long)arg1;
- (void)setNumberOfNewMemoriesForUserRequest:(unsigned long long)arg1;
- (void)setProbabilityAlwaysPasses:(bool)arg1;
- (void)setSkipsAssetCollection:(bool)arg1;
- (void)setSkipsBestOfPastUpgradeToFeaturedTrip:(bool)arg1;
- (void)setSkipsBlacklistedFeatureCheck:(bool)arg1;
- (void)setSkipsCuration:(bool)arg1;
- (void)setSkipsMeaningfulEventUpgrades:(bool)arg1;
- (void)setSkipsTitleGeneration:(bool)arg1;
- (void)setSkipsWeekendUpgrades:(bool)arg1;
- (bool)skipsAssetCollection;
- (bool)skipsBestOfPastUpgradeToFeaturedTrip;
- (bool)skipsBlacklistedFeatureCheck;
- (bool)skipsCuration;
- (bool)skipsMeaningfulEventUpgrades;
- (bool)skipsTitleGeneration;
- (bool)skipsWeekendUpgrades;
- (unsigned long long)subcategoryForString:(id)arg1;
- (double)updatedBeta:(double)arg1 forNumberOfDaysSinceLastMemory:(long long)arg2;

@end
