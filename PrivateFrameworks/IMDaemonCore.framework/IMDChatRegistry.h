/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

@interface IMDChatRegistry : NSObject <TUConversationManagerDelegate> {
    bool  _blackholedChatsExistCache;
    NSMutableDictionary * _cachedAliasToCNIDMap;
    IMDChatStore * _chatStore;
    NSMutableDictionary * _chats;
    NSMutableDictionary * _chatsByGroupID;
    NSRecursiveLock * _chatsLock;
    IMDCKUtilities * _ckUtilities;
    TUConversationManager * _conversationManager;
    bool  _doneLoadingAfterMerge;
    NSRecursiveLock * _handlesLock;
    bool  _hasDumpedLogsForNoExisitingGroup;
    NSData * _historyToken;
    NSMutableDictionary * _idToHandlesMap;
    bool  _isLoading;
    IMDMessageHistorySyncController * _messageHistorySyncController;
    IMDMessageProcessingController * _messageProcessingController;
    NSMutableDictionary * _personCentricGroupedChatsCache;
}

@property (nonatomic, readonly) NSArray *allChats;
@property (nonatomic, readonly) NSArray *blackholedChats;
@property (nonatomic, readonly) bool blackholedChatsExist;
@property (nonatomic, retain) NSMutableDictionary *cachedAliasToCNIDMap;
@property (nonatomic, retain) IMDChatStore *chatStore;
@property (nonatomic, readonly) NSArray *chats;
@property (nonatomic, retain) IMDCKUtilities *ckUtilities;
@property (nonatomic, readonly) TUConversationManager *conversationManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasDumpedLogsForNoExisitingGroup;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSData *historyToken;
@property (nonatomic, retain) NSMutableDictionary *idToHandlesMap;
@property (nonatomic, readonly) IMDMessageHistorySyncController *messageHistorySyncController;
@property (nonatomic, readonly) IMDMessageProcessingController *messageProcessingController;
@property (nonatomic, retain) NSMutableDictionary *personCentricGroupedChatsCache;
@property (readonly) Class superclass;

+ (id)sharedInstance;

- (void)__addChatToGroupIDChatIndex:(id)arg1;
- (void)__removeChatFromGroupIDChatIndex:(id)arg1;
- (id)_activeTUConversations;
- (void)_addHandlesToPCMIDMapForChatParticipants:(id)arg1 pcmidToHandleMap:(id)arg2;
- (void)_addItemToParentChatIfNotLocationItem:(id)arg1 parentChat:(id)arg2 updatedLastMessageCount:(unsigned long long)arg3;
- (void)_addTUConversationToMessageStore:(id)arg1 shouldBroadcast:(bool)arg2;
- (id)_aliasToCNIDMapForAliases:(id)arg1;
- (id)_aliasToHandlesMap:(id)arg1;
- (id)_allChatInfo;
- (id)_allHandles;
- (id)_blackholedChatInfoForNumberOfChats:(long long)arg1;
- (bool)_chat:(id)arg1 isDuplicateOfChat:(id)arg2;
- (id)_chatForTUGroupID:(id)arg1;
- (void)_chatGUIDsThatNeedRemerging:(id*)arg1 chatDictionaryArray:(id*)arg2 aliasMap:(id)arg3;
- (void)_chatGUIDsThatNeedRemergingWithCompletionHandler:(id /* block */)arg1;
- (id)_chatInfoForConnection;
- (id)_chatInfoForNumberOfChats:(long long)arg1;
- (id)_chatInfoForSaving;
- (id)_chatInfoInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 wantsBlackholed:(bool)arg2;
- (id)_chatsContainingHandles:(id)arg1;
- (id)_chatsWithBlackholed:(bool)arg1;
- (void)_checkForContactChanges;
- (bool)_contactsBasedMerginEnabled;
- (void)_contactsChanged:(id)arg1;
- (id)_conversationItemForChat:(id)arg1 conversation:(id)arg2;
- (id)_createGroupChatsArray;
- (bool)_ensureNoExistingGroupForCKRecord:(id)arg1;
- (id)_existingChatForCKRecord:(id)arg1;
- (id)_existingChatWithOriginalGroupID:(id)arg1 onService:(id)arg2;
- (id)_existingiMessageChatForChatIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)_extractHandlesFromMap:(id)arg1 usingCNID:(id)arg2;
- (id)_findChatWinnerInDuplicateChatArray:(id)arg1 fixDisplayName:(bool*)arg2;
- (id)_findLosingChatGUIDsInArrayOfChats:(id)arg1 withWinner:(id)arg2;
- (void)_fixSMSGroupChatAndStoreIfNeeded:(id)arg1 iMessageChat:(id)arg2;
- (void)_fixUpChatParticipantsIfNeeded:(id)arg1;
- (void)_forceReloadChats:(bool)arg1;
- (id)_generateCurrentAliasToCNIDDictionary;
- (id)_handlesThatNeedPCMIDUpdatedGivenArray:(id)arg1;
- (id)_handlesThatNeedPCMIDsUpdatedGivenMap:(id)arg1;
- (id)_handlesWithChangedContactsOriginalMap:(id)arg1 newMap:(id)arg2;
- (id)_initiatorForConversation:(id)arg1 chat:(id)arg2;
- (void)_insertChatUsingCKRecord:(id)arg1;
- (void)_insertCurrentActiveTUConversationsIfNeeded;
- (bool)_isUsingStingRay;
- (id)_itemFromCKRecord:(id)arg1;
- (id)_lookupChatUsingID:(id)arg1;
- (void)_makeAllAttachmentsClassC;
- (void)_markForksAsSyncedForChat:(id)arg1;
- (bool)_mergeDuplicateGroupsIfNeeded;
- (id)_messageStore;
- (void)_noteDownAttemptToMigratePersonCentricIDsOnIMDHandles;
- (id)_parentChatIDFromCKRecord:(id)arg1;
- (id)_pcmidToHandlesMapForChats:(id)arg1;
- (void)_persistMergeIDMergedChatsIfNeeded;
- (id)_personCentricIDForHandleID:(id)arg1;
- (void)_populateContactIDOnHandles;
- (id)_reportMessageDictionaryForMessages:(id)arg1 withLastAddressedHandle:(id)arg2 maxMessageLength:(unsigned long long)arg3 isAutoReport:(bool)arg4 withChat:(id)arg5 maxMessagesToReport:(unsigned long long)arg6 totalMessageCount:(unsigned long long*)arg7;
- (id)_reportMessageDictionaryForMessages:(id)arg1 withLastAddressedHandle:(id)arg2 maxMessageLength:(unsigned long long)arg3 isAutoReport:(bool)arg4 withChat:(id)arg5 maxMessagesToReport:(unsigned long long)arg6 totalMessageCount:(unsigned long long*)arg7 onlyReportForiMessageService:(bool)arg8 notifyInternalSecurity:(bool)arg9;
- (void)_reportToIDSiMessageSpam:(id)arg1;
- (bool)_saveChats;
- (void)_setInitialLoadForTesting:(bool)arg1;
- (void)_setSortIDOnIncomingMessage:(id)arg1 forChat:(id)arg2;
- (id)_sharedMessageStore;
- (bool)_shouldAddNewItemForConversation:(id)arg1;
- (bool)_shouldHandleInternalPhishingAttempts;
- (bool)_shouldMigrateIMDHandlesPersonCentricIDsOnAllChats;
- (bool)_shouldUpdateSyncStatsForChat:(id)arg1 originalSyncState:(long long)arg2;
- (bool)_shouldUpdateSyncStatsForMessage:(id)arg1 originalSyncState:(long long)arg2;
- (id)_spamMessageCreator;
- (id)_statsCollector;
- (void)_updateCachedAliasToCNIDMap:(id)arg1 withHistoryToken:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateCachedCNIDMapForHandles:(id)arg1;
- (void)_updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:(id /* block */)arg1;
- (bool)_updateDuplicateUnnamedGroupsWithNewGroupIDIfNeeded;
- (void)_updateHandleInDBWithPCMID:(id)arg1 handle:(id)arg2;
- (void)_updatePCMIDForHandle:(id)arg1;
- (void)_updatePCMIDOnHandles:(id)arg1;
- (void)_updateSyncStatisticsForChat:(id)arg1 incrementTotalCount:(unsigned long long)arg2;
- (void)_updateSyncStatisticsForMessage:(id)arg1 incrementTotalCount:(unsigned long long)arg2;
- (void)addChat:(id)arg1;
- (void)addChat:(id)arg1 firstLoad:(bool)arg2;
- (void)addIMDHandleToRegistry:(id)arg1;
- (void)addItem:(id)arg1 toChat:(id)arg2;
- (void)addMessage:(id)arg1 toChat:(id)arg2;
- (void)addMessage:(id)arg1 toChat:(id)arg2 deferSpotlightIndexing:(bool)arg3;
- (id)aliasToCNIDMap;
- (id)allChats;
- (id)allChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2 serviceNames:(id)arg3;
- (id)allExistingChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)allExistingSupportedServiceChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)allHandlesForID:(id)arg1;
- (id)blackholedChats;
- (bool)blackholedChatsExist;
- (id)cachedAliasToCNIDMap;
- (id)chatForHandle:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 guid:(id)arg4 lastAddressedHandle:(id)arg5 lastAddressedSIMID:(id)arg6 isBlackholed:(bool)arg7;
- (id)chatForHandles:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 style:(unsigned char)arg4 groupID:(id)arg5 displayName:(id)arg6 guid:(id)arg7 lastAddressedHandle:(id)arg8 lastAddressedSIMID:(id)arg9 isBlackholed:(bool)arg10;
- (id)chatForRoom:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 guid:(id)arg4;
- (id)chatIdToLastMessageMapOfOldChats;
- (id)chatStore;
- (id)chats;
- (id)chatsToUploadToCloudKitWithLimit:(unsigned long long)arg1 isUsingStingRay:(bool)arg2;
- (void)checkBlackholedChatsExistAfterUpdatingChatWithAdd:(bool)arg1;
- (id)ckUtilities;
- (void)clearPendingDeleteTable;
- (id)conversationManager;
- (void)conversationManager:(id)arg1 stateChangedForConversation:(id)arg2;
- (id)copyRecordIDsAndGUIDsPendingCloudKitDelete;
- (void)dealloc;
- (bool)doneLoadingAfterMerge;
- (id)existingChatForID:(id)arg1 account:(id)arg2;
- (id)existingChatForIDs:(id)arg1 account:(id)arg2 displayName:(id)arg3 groupID:(id)arg4 style:(unsigned char)arg5;
- (id)existingChatForIDs:(id)arg1 account:(id)arg2 style:(unsigned char)arg3;
- (id)existingChatForRoom:(id)arg1 account:(id)arg2;
- (id)existingChatWithEngramID:(id)arg1;
- (id)existingChatWithGUID:(id)arg1;
- (id)existingChatWithIdentifier:(id)arg1 account:(id)arg2;
- (id)existingChatsForIDs:(id)arg1 onService:(id)arg2 style:(unsigned char)arg3;
- (id)existingChatsWithGroupID:(id)arg1;
- (id)existingOneOnOneChatsWithIdentifiers:(id)arg1;
- (id)existingSMSChatForID:(id)arg1;
- (id)existingSMSChatForID:(id)arg1 withChatStyle:(unsigned char)arg2;
- (id)existingUnnamedGroupChatsContainingHandles:(id)arg1;
- (id)existingiMessageChatForID:(id)arg1;
- (id)existingiMessageChatForID:(id)arg1 withChatStyle:(unsigned char)arg2;
- (id)findDuplicateChats:(id)arg1;
- (id)findDuplicateUnnamedGroups:(id)arg1;
- (id)groupChatsBasedOnIdentity:(id)arg1;
- (id)groupChatsBasedOnIdentityUsingCacheIfApplicable:(id)arg1;
- (bool)hasDumpedLogsForNoExisitingGroup;
- (id)historyToken;
- (id)idToHandlesMap;
- (id)init;
- (void)invalidatePersonCentricGroupedChatsCache;
- (bool)isBeingSetup;
- (bool)loadChatsWithCompletionBlock:(id /* block */)arg1;
- (unsigned long long)markAsSpamForIDs:(id)arg1 style:(unsigned char)arg2 onServices:(id)arg3 chatID:(id)arg4 queryID:(id)arg5 autoReport:(bool)arg6;
- (void)markChatAsDeferredForSyncingUsingCKRecord:(id)arg1;
- (void)markDefferredChatsAsNeedingSync;
- (id)messageHistorySyncController;
- (id)messageProcessingController;
- (id)messagesToUploadToCloudKitWithLimit:(unsigned long long)arg1;
- (id)personCentricGroupedChatsArrayWithMaximumNumberOfChats:(long long)arg1 skipsLastMessageLoading:(bool)arg2 usingChats:(id)arg3 useCachedChatGroups:(bool)arg4;
- (id)personCentricGroupedChatsCache;
- (void)processMessageUsingCKRecord:(id)arg1;
- (void)processMessageUsingCKRecord:(id)arg1 updatedLastMessageCount:(int)arg2;
- (void)refreshUIWhileSyncing;
- (void)removeChat:(id)arg1;
- (void)removeIMDHandleFromRegistry:(id)arg1;
- (void)removeItem:(id)arg1 fromChat:(id)arg2;
- (void)removeMessage:(id)arg1 fromChat:(id)arg2;
- (bool)repairDuplicateChatsIfNeeded;
- (void)repairPersonCentricIDsOnChatsIfNeeded;
- (void)resetChatSyncStateForRecord:(id)arg1;
- (bool)saveChats;
- (void)setCachedAliasToCNIDMap:(id)arg1;
- (void)setChatStore:(id)arg1;
- (void)setCkUtilities:(id)arg1;
- (void)setHasDumpedLogsForNoExisitingGroup:(bool)arg1;
- (void)setHistoryToken:(id)arg1;
- (void)setIdToHandlesMap:(id)arg1;
- (void)setPersonCentricGroupedChatsCache:(id)arg1;
- (void)setUpInitialConversationManager;
- (void)simulateMessageReceive:(id)arg1 serviceName:(id)arg2 groupID:(id)arg3 handles:(id)arg4 sender:(id)arg5;
- (id)sortPersonCentricChatGroups:(id)arg1;
- (id)stringForChatStyle:(unsigned char)arg1;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemDidUnlock;
- (id)truncateSortedChatsGroupedByPersonCentricID:(id)arg1 toMaximumNumberOfChats:(long long)arg2;
- (void)updateChatUsingCKRecord:(id)arg1;
- (void)updateChatWithGUID:(id)arg1 serverChangeToken:(id)arg2 recordID:(id)arg3;
- (void)updateGroupIDForChat:(id)arg1 newGroupID:(id)arg2;
- (void)updateLastMessageForChat:(id)arg1 hintMessage:(id)arg2;
- (void)updateLastMessageForChat:(id)arg1 hintMessage:(id)arg2 historyQuery:(bool)arg3;
- (void)updateMeCardHasUpdatedForAllChats;
- (bool)updateProperties:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3;
- (void)updateStateForChat:(id)arg1 forcePost:(bool)arg2;
- (void)updateStateForChat:(id)arg1 forcePost:(bool)arg2 shouldRebuildFailedMessageDate:(bool)arg3;
- (void)updateStateForChat:(id)arg1 forcePost:(bool)arg2 shouldRebuildFailedMessageDate:(bool)arg3 setUnreadCountToZero:(bool)arg4;
- (void)updateStateForChat:(id)arg1 forcePost:(bool)arg2 shouldRebuildFailedMessageDate:(bool)arg3 shouldCalculateUnreadCount:(bool)arg4;
- (void)updateStateForChat:(id)arg1 fromMessage:(id)arg2 toMessage:(id)arg3 forcePost:(bool)arg4 hintMessage:(id)arg5 shouldRebuildFailedMessageDate:(bool)arg6 shouldCalculateUnreadCount:(bool)arg7 setUnreadCountToZero:(bool)arg8;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2 shouldRebuildFailedMessageDate:(bool)arg3;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2 shouldRebuildFailedMessageDate:(bool)arg3 setUnreadCountToZero:(bool)arg4;
- (void)updateStateForChat:(id)arg1 hintMessage:(id)arg2 shouldRebuildFailedMessageDate:(bool)arg3 shouldCalculateUnreadCount:(bool)arg4;
- (bool)updateUnreadCountForChat:(id)arg1;

@end
