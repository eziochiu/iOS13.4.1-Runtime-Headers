/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore
 */

@interface NUVideoUtilities : NSObject

+ (bool)_metadataTrack:(id)arg1 containsIdentifier:(id)arg2;
+ (id)bestOutputSettingsPresetForTargetVideoSize:(struct { long long x1; long long x2; })arg1;
+ (struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })cleanApertureOfTrack:(id)arg1 oriented:(bool)arg2;
+ (id)cleanApertureVideoSettingsFor:(struct { struct { long long x_1_1_1; long long x_1_1_2; } x1; struct { long long x_2_1_1; long long x_2_1_2; } x2; })arg1 scale:(struct { long long x1; long long x2; })arg2 videoSize:(struct { long long x1; long long x2; })arg3;
+ (bool)compositionInstructions:(id)arg1 areEqualToCompositionInstructions:(id)arg2;
+ (struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })conformRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 inRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg2;
+ (id)deepMutableCopyVideoComposition:(id)arg1;
+ (id)defaultVideoSettingsForAVAssetReader;
+ (struct { long long x1; long long x2; })encodedPixelSizeOfTrack:(id)arg1 oriented:(bool)arg2;
+ (id)firstEnabledVideoTrackInAsset:(id)arg1 error:(out id*)arg2;
+ (bool)isMetadataTrackStillImageDisplayTimeMarkerInLivePhoto:(id)arg1;
+ (bool)isMetadataTrackWithStillImageDimensionsInLivePhoto:(id)arg1;
+ (bool)isMetadataTrackWithStillImageTransformInLivePhoto:(id)arg1;
+ (id)metadataTrackWithStillImageDimensionsInLivePhotoAsset:(id)arg1;
+ (id)metadataTrackWithStillImageDisplayTimeMarkerInLivePhotoAsset:(id)arg1;
+ (id)metadataTrackWithStillImageTransformInLivePhotoAsset:(id)arg1;
+ (struct { long long x1; int x2; unsigned int x3; long long x4; })minimumFrameDurationForAsset:(id)arg1;
+ (struct { long long x1; int x2; unsigned int x3; long long x4; })minimumFrameDurationForAsset:(id)arg1 videoComposition:(id)arg2;
+ (struct { long long x1; int x2; unsigned int x3; long long x4; })minimumFrameDurationForAssetTrack:(id)arg1;
+ (struct { long long x1; long long x2; })naturalSizeOfTrack:(id)arg1 oriented:(bool)arg2;
+ (id)newPixelBufferOfSize:(struct { long long x1; long long x2; })arg1 format:(unsigned int)arg2;
+ (bool)readFromReader:(id)arg1 andWriteToWriter:(id)arg2 stillImageTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 createCustomMetadata:(bool)arg4 geometryTransform:(id)arg5 inputSize:(struct CGSize { double x1; double x2; })arg6 outputSize:(struct CGSize { double x1; double x2; })arg7 progress:(id)arg8 error:(out id*)arg9;
+ (void)readNextPixelBuffer:(id)arg1 output:(id)arg2 block:(id /* block */)arg3;
+ (void)readNextSampleBuffer:(id)arg1 output:(id)arg2 block:(id /* block */)arg3;
+ (struct { long long x1; int x2; unsigned int x3; long long x4; })readStillImageTimeFromVideoAsset:(id)arg1;
+ (struct __CVBuffer { }*)readVideoFrameAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 fromAsset:(id)arg2 outputSettings:(id)arg3 videoComposition:(id)arg4 error:(out id*)arg5;
+ (id)readerOutputForAsset:(id)arg1 outputSettings:(id)arg2 videoComposition:(id)arg3 error:(out id*)arg4;
+ (id)repeatAudio:(id)arg1 count:(long long)arg2 error:(out id*)arg3;
+ (id)repeatVideo:(id)arg1 count:(long long)arg2 error:(out id*)arg3;
+ (id)repeatVideoComposition:(id)arg1 count:(long long)arg2 error:(out id*)arg3;
+ (id)rgbVideoSettingsForAVAssetReader;
+ (bool)updateVideoMetadataAtURL:(id)arg1 withItems:(id)arg2 stillImageTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 error:(out id*)arg4;
+ (id)videoCompositionDescription:(id)arg1;
+ (id)videoDescription:(id)arg1;
+ (long long)videoOrientationForAsset:(id)arg1 videoComposition:(id)arg2;
+ (long long)videoOrientationForAssetPreferredTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;

@end
