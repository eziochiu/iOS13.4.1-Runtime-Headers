/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreServicesStore.framework/CoreServicesStore
 */

@interface _CSStore : NSObject <NSSecureCoding> {
    NSObject<OS_dispatch_queue> * _accessQueue;
    struct Store { 
        id dataContainer; 
        struct array<unsigned int, 64> { 
            unsigned int __elems_[64]; 
        } tableOffsets; 
        struct Table {} *arrayTable; 
        struct Table {} *stringTable; 
        struct atomic<long long> { 
            struct __cxx_atomic_impl<long long, std::__1::__cxx_atomic_base_impl<long long> > { 
                _Atomic long long __a_value; 
            } __a_; 
        } enumerationState; 
        struct atomic<long long> { 
            struct __cxx_atomic_impl<long long, std::__1::__cxx_atomic_base_impl<long long> > { 
                _Atomic long long __a_value; 
            } __a_; 
        } getNSDataCallCount; 
        struct Pedigree { 
            unsigned long long family; 
            struct optional<unsigned int> { 
                union { 
                    BOOL __null_state_; 
                    unsigned int __val_; 
                } ; 
                bool __engaged_; 
            } generationAtCopyTime; 
        } pedigree; 
    }  _store;
}

+ (void)initialize;
+ (id)new;
+ (bool)supportsSecureCoding;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initByMovingStore:(struct Store { id x1; struct array<unsigned int, 64> { unsigned int x_2_1_1[64]; } x2; struct Table {} *x3; struct Table {} *x4; struct atomic<long long> { struct __cxx_atomic_impl<long long, std::__1::__cxx_atomic_base_impl<long long> > { _Atomic long long x_1_2_1; } x_5_1_1; } x5; struct atomic<long long> { struct __cxx_atomic_impl<long long, std::__1::__cxx_atomic_base_impl<long long> > { _Atomic long long x_1_2_1; } x_6_1_1; } x6; struct Pedigree { unsigned long long x_7_1_1; struct optional<unsigned int> { union { BOOL x_1_3_1; unsigned int x_1_3_2; } x_2_2_1; bool x_2_2_2; } x_7_1_2; } x7; }*)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 error:(id*)arg2;
- (id)initWithError:(id*)arg1;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1 error:(id*)arg2;
- (void)setExpectedAccessQueue:(id)arg1;

@end
