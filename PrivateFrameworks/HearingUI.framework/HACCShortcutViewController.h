/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HearingUI.framework/HearingUI
 */

@interface HACCShortcutViewController : UIViewController <HACCContentModuleDelegate, UIGestureRecognizerDelegate> {
    struct CGPoint { 
        double x; 
        double y; 
    }  _backgroundViewDismissalOrigin;
    AXDispatchTimer * _bluetoothAvailabilityTimer;
    bool  _bluetoothAvailable;
    CCUIContentModuleContext * _contentModuleContext;
    AXRemoteHearingAidDevice * _currentHearingDevice;
    <AXHAShortcutUpdateProtocol> * _delegate;
    double  _dismissalGestureYOffset;
    NSMutableDictionary * _gridToModuleMap;
    bool  _listeningForUpdates;
    NSMutableDictionary * _moduleToPointMap;
    NSMutableDictionary * _moduleToViewControllerMap;
    UIScrollView * _scrollView;
    NSMutableArray * _separatorViews;
}

@property (nonatomic) bool bluetoothAvailable;
@property (nonatomic, retain) CCUIContentModuleContext *contentModuleContext;
@property (nonatomic, retain) AXRemoteHearingAidDevice *currentHearingDevice;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AXHAShortcutUpdateProtocol> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HACCContentViewController *expandedController;
@property (nonatomic, retain) NSMutableDictionary *gridToModuleMap;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool listeningForUpdates;
@property (nonatomic, retain) NSMutableDictionary *moduleToPointMap;
@property (nonatomic, retain) NSMutableDictionary *moduleToViewControllerMap;
@property (nonatomic, retain) UIScrollView *scrollView;
@property (nonatomic, retain) NSMutableArray *separatorViews;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (double)_separatorHeight;
- (void)bluetoothAvailabilityDidChange:(id)arg1;
- (bool)bluetoothAvailable;
- (void)contentCategoryDidChange:(id)arg1;
- (id)contentModuleContext;
- (void)controlDidActivate:(id)arg1;
- (id)currentHearingDevice;
- (id)delegate;
- (id)expandedController;
- (id)gridToModuleMap;
- (id)initWithDelegate:(id)arg1;
- (bool)isExpanded;
- (void)listenForUpdates;
- (bool)listeningForUpdates;
- (double)moduleHeight;
- (id)moduleToPointMap;
- (id)moduleToViewControllerMap;
- (unsigned long long)numberOfColumnsForSize:(struct CGSize { double x1; double x2; })arg1;
- (double)preferredContentWidth;
- (double)preferredExpandedContentHeight;
- (id)scrollView;
- (id)separatorViews;
- (void)setAlpha:(double)arg1 forAllModulesExcept:(id)arg2;
- (void)setBluetoothAvailable:(bool)arg1;
- (void)setContentModuleContext:(id)arg1;
- (void)setCurrentHearingDevice:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGridToModuleMap:(id)arg1;
- (void)setListeningForUpdates:(bool)arg1;
- (void)setModuleToPointMap:(id)arg1;
- (void)setModuleToViewControllerMap:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setSeparatorViews:(id)arg1;
- (bool)shouldDisplayControlForModule:(unsigned long long)arg1;
- (void)updateAvailableControlsForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)updateView;
- (void)updateViewForProperties:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
