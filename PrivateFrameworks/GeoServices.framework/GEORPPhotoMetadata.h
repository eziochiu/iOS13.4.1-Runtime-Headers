/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEORPPhotoMetadata : PBCodable <NSCopying> {
    NSString * _clientImageUuid;
    struct { 
        unsigned int read_unknownFields : 1; 
        unsigned int read_clientImageUuid : 1; 
        unsigned int read_geotag : 1; 
        unsigned int read_imageDescription : 1; 
        unsigned int wrote_unknownFields : 1; 
        unsigned int wrote_clientImageUuid : 1; 
        unsigned int wrote_geotag : 1; 
        unsigned int wrote_imageDescription : 1; 
    }  _flags;
    GEOLocation * _geotag;
    NSString * _imageDescription;
    PBDataReader * _reader;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _readerLock;
    unsigned int  _readerMarkLength;
    unsigned int  _readerMarkPos;
    PBUnknownFields * _unknownFields;
}

@property (nonatomic, retain) NSString *clientImageUuid;
@property (nonatomic, retain) GEOLocation *geotag;
@property (nonatomic, readonly) bool hasClientImageUuid;
@property (nonatomic, readonly) bool hasGeotag;
@property (nonatomic, readonly) bool hasImageDescription;
@property (nonatomic, retain) NSString *imageDescription;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;

+ (bool)isValid:(id)arg1;

- (void).cxx_destruct;
- (void)_readClientImageUuid;
- (void)_readGeotag;
- (void)_readImageDescription;
- (void)clearUnknownFields:(bool)arg1;
- (id)clientImageUuid;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)geotag;
- (bool)hasClientImageUuid;
- (bool)hasGeotag;
- (bool)hasImageDescription;
- (unsigned long long)hash;
- (id)imageDescription;
- (id)init;
- (id)initWithData:(id)arg1;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (void)readAll:(bool)arg1;
- (bool)readFrom:(id)arg1;
- (void)setClientImageUuid:(id)arg1;
- (void)setGeotag:(id)arg1;
- (void)setImageDescription:(id)arg1;
- (id)unknownFields;
- (void)writeTo:(id)arg1;

@end
