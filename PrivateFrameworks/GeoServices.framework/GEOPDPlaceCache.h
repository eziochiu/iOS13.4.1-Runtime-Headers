/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOPDPlaceCache : NSObject <GEOPDPlaceCacheManifestInfoProviding, GEOPDPlaceCacheSchedulingDelegate> {
    NSMutableDictionary * _accessTimesDict;
    NSObject<OS_dispatch_source> * _cleanupTimer;
    GEOSQLiteDB * _db;
    <GEOPDPlaceCacheManifestInfoProviding> * _manifestInfoProvider;
    NSMutableOrderedSet * _recentlySeenPlaceHashes;
    <GEOPDPlaceCacheSchedulingDelegate> * _schedulingDelegate;
}

@property (nonatomic, readonly) NSArray *serviceVersions;

- (void).cxx_destruct;
- (id)_cacheKeyForHandle:(id)arg1;
- (id)_cacheKeysForPlace:(id)arg1;
- (unsigned long long)_calculateFreeableSpace;
- (bool)_deleteAndResetDB:(id)arg1;
- (void)_evictPlace:(id)arg1;
- (void)_iterateAllKeysFilteringCacheKeyWithPredicate:(id)arg1 entryBlock:(id /* block */)arg2 finishedBlock:(id /* block */)arg3;
- (void)_iterateAllPlacesFilteringCacheKeyWithPredicate:(id)arg1 entryBlock:(id /* block */)arg2 finishedBlock:(id /* block */)arg3;
- (void)_localeChanged:(id)arg1;
- (id)_lookupPlaceByRequestKey:(id)arg1 allowExpiredPlace:(bool)arg2 placeIsExpired:(bool*)arg3;
- (bool)_meetsManifestVersionPolicyForPlace:(id)arg1;
- (unsigned long long)_shrinkBySize:(unsigned long long)arg1;
- (void)_storePlace:(id)arg1 forRequestKeys:(id)arg2;
- (bool)_validateDBLocaleAndResetIfNecessary;
- (unsigned long long)calculateFreeableSpaceSync;
- (void)calculateFreeableSpaceWithHandler:(id /* block */)arg1;
- (void)cancelCleanupBlockSchedule;
- (void)close;
- (long long)currentTime;
- (void)dealloc;
- (void)deletePhoneNumberMapping;
- (void)enqueueAccessTimeUpdateForCacheKey:(id)arg1 accessTime:(long long)arg2;
- (void)evictAllEntries;
- (id)initWithCacheFilePath:(id)arg1 schedulingDelegate:(id)arg2 manifestInfoProvider:(id)arg3;
- (id)internalSerialQueue;
- (void)iterateAllBasemapIdKeysWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateAllHandleKeysWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateAllKeysWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateAllMUIDKeysWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateAllPhoneKeysWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateAllPlacesWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateBasemapIdPlacesWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateHandlePlacesWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iterateMUIDPlacesWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (void)iteratePhonePlacesWithBlock:(id /* block */)arg1 finishedBlock:(id /* block */)arg2;
- (id)lookupIdentifierByPhoneNumber:(id)arg1;
- (id)lookupPlaceByHandle:(id)arg1 allowExpiredPlace:(bool)arg2 placeIsExpired:(bool*)arg3;
- (id)lookupPlaceByIdentifier:(id)arg1 allowExpiredPlace:(bool)arg2 placeIsExpired:(bool*)arg3;
- (id)lookupPlaceByPhoneNumber:(id)arg1 allowExpiredPlace:(bool)arg2 placeIsExpired:(bool*)arg3;
- (id)lookupPlaceByRequest:(id)arg1 allowExpiredPlace:(bool)arg2 placeIsExpired:(bool*)arg3;
- (void)periodicCleanupAndAccessTimeUpdate;
- (void)runCleanupBlock:(id /* block */)arg1 inSecondsFromNow:(long long)arg2;
- (void)scheduleCleanup;
- (id)serviceVersions;
- (void)shrinkBySize:(unsigned long long)arg1 finished:(id /* block */)arg2;
- (unsigned long long)shrinkBySizeSync:(unsigned long long)arg1;
- (void)storePlace:(id)arg1 forRequest:(id)arg2;
- (void)storePlace:(id)arg1 forRequest:(id)arg2 completionQueue:(id)arg3 completion:(id /* block */)arg4;
- (void)trackPlace:(id)arg1;
- (void)trackPlace:(id)arg1 completionQueue:(id)arg2 completion:(id /* block */)arg3;

@end
