/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices
 */

@interface RBSProcessHandle : NSObject <BSDescriptionProviding, BSXPCSecureCoding, NSSecureCoding, RBSProcessIdentifier> {
    RBSProcessBundle * _bundle;
    NSObject<OS_xpc_object> * _codedHandle;
    RBSProcessIdentity * _identity;
    RBSProcessInstance * _instance;
    unsigned long long  _ipcID;
    BSProcessHandle * _legacyHandle;
    BSMachPortTaskNameRight * _lifePort;
    RBSProcessMonitor * _monitor;
    bool  _reported;
}

@property (nonatomic, readonly) RBSProcessLimitations *activeLimitations;
@property (nonatomic, readonly, copy) BSAuditToken *auditToken;
@property (nonatomic, readonly) RBSProcessBundle *bundle;
@property (nonatomic, readonly) RBSProcessState *currentState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) RBSProcessHandle *hostProcess;
@property (nonatomic, readonly, copy) RBSProcessIdentity *identity;
@property (nonatomic, readonly, copy) RBSProcessInstance *instance;
@property (nonatomic, readonly) RBSProcessExitContext *lastExitContext;
@property (nonatomic, readonly) BSMachPortTaskNameRight *lifePort;
@property (nonatomic, readonly, copy) NSString *name;
@property (nonatomic, readonly) int pid;
@property (getter=isReported, nonatomic, readonly) bool reported;
@property (readonly) Class superclass;
@property (getter=isValid, nonatomic, readonly) bool valid;

+ (id)_cacheHandle:(id)arg1;
+ (id)_cachedHandleForKey:(id)arg1;
+ (void)clearAllHandles;
+ (id)currentProcess;
+ (id)handleForIdentifier:(id)arg1 error:(out id*)arg2;
+ (id)handleForKey:(unsigned long long)arg1 fetchIfNeeded:(bool)arg2;
+ (id)handleForLegacyHandle:(id)arg1 error:(out id*)arg2;
+ (id)handleForPredicate:(id)arg1 error:(out id*)arg2;
+ (id)observeForImminentAssertionsExpiration:(id /* block */)arg1;
+ (bool)supportsBSXPCSecureCoding;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_fullEncode:(id)arg1;
- (void)_keepAlive;
- (id)activeLimitations;
- (id)auditToken;
- (id)bundle;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentState;
- (id)currentStateMatchingDescriptor:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)encodeWithBSXPCCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)fullEncode:(id)arg1 forKey:(id)arg2;
- (unsigned long long)hash;
- (id)hostProcess;
- (id)identity;
- (id)init;
- (id)initWithBSXPCCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentity:(id)arg1;
- (id)initWithInstance:(id)arg1 lifePort:(id)arg2 bundleData:(id)arg3 reported:(bool)arg4;
- (id)instance;
- (void)intendToExitWith:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isReported;
- (bool)isValid;
- (id)lastExitContext;
- (id)legacyHandle;
- (id)lifePort;
- (bool)matchesProcess:(id)arg1;
- (void)monitorForDeath:(id /* block */)arg1;
- (id)name;
- (int)pid;
- (void)plugInHandshakeComplete;
- (id)processPredicate;
- (int)rbs_pid;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;

@end
