/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
 */

@interface PKPaymentWebServiceTargetDevice : NSObject <PKPaymentWebServiceTargetDeviceProtocol> {
    PKAssertion * _activePasscodeUpgradeFlowAssertion;
    bool  _activePasscodeUpgradeFlowAssertionActive;
    PKPassLibrary * _passLibrary;
    PKPassUpgradeController * _passUpgradeController;
    PKPaymentService * _paymentService;
    PKAssertion * _provisioningAssertion;
    bool  _provisioningAssertionActive;
    PKAssertion * _requiringUpgradedPasscodeAssertion;
    bool  _requiringUpgradedPasscodeAssertionActive;
    PKSecureElement * _secureElement;
    PKAssertion * _verificationAssertion;
    bool  _verificationAssertionActive;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)localTargetDevice;

- (void).cxx_destruct;
- (void)_paymentWebService:(id)arg1 pass:(id)arg2 withExpressInfo:(id)arg3 hasDisqualifyingConflicts:(id /* block */)arg4;
- (void)_validateCommonPreconditionsWithCompletion:(id /* block */)arg1;
- (id)appleAccountInformation;
- (void)applePayTrustKeyForIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)availableProductsWithCompletion:(id /* block */)arg1;
- (id)bridgedClientInfo;
- (id)cellularNetworkRegion;
- (bool)claimSecureElementForCurrentUser;
- (void)claimSecureElementForCurrentUserWithCompletion:(id /* block */)arg1;
- (void)consistencyCheck;
- (void)createApplePayTrustKeyWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)dealloc;
- (void)deleteApplePayTrustKeyWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)deviceClass;
- (id)deviceDescriptionForPaymentWebService:(id)arg1;
- (id)deviceIDSIdentifier;
- (id)deviceName;
- (id)deviceRegion;
- (id)deviceVersion;
- (void)downloadAllPaymentPassesForPaymentWebService:(id)arg1;
- (void)endRequiringUpgradedPasscodeIfNecessary;
- (void)enforceUpgradedPasscodePolicyWithCompletion:(id /* block */)arg1;
- (void)featureApplicationsForProvisioningWithCompletion:(id /* block */)arg1;
- (bool)felicaSecureElementIsAvailable;
- (id)init;
- (unsigned long long)maximumPaymentCards;
- (void)noteForegroundVerificationObserverActive:(bool)arg1;
- (void)notePasscodeUpgradeFlowDidEnd;
- (void)notePasscodeUpgradeFlowWillBeginWithCompletion:(id /* block */)arg1;
- (void)noteProvisioningDidBegin;
- (void)noteProvisioningDidEnd;
- (void)noteProvisioningUserInterfaceDidAppear;
- (void)noteProvisioningUserInterfaceDidDisappear;
- (id)osVersion;
- (int)paymentSupportedInCurrentRegionForWebService:(id)arg1;
- (void)paymentWebService:(id)arg1 accountAttestationAnonymizationSaltWithCompletion:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 addPaymentPass:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 addPaymentPass:(id)arg2 withCompletionHandlerV2:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 addSharingInvitationReceipts:(id)arg2 onCredential:(id)arg3 withCompletion:(id /* block */)arg4;
- (void)paymentWebService:(id)arg1 addSubcredential:(id)arg2 fromSharingInvitation:(id)arg3 withCompletion:(id /* block */)arg4;
- (void)paymentWebService:(id)arg1 canAcceptInvitation:(id)arg2 withCompletion:(id /* block */)arg3;
- (bool)paymentWebService:(id)arg1 canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)arg2;
- (void)paymentWebService:(id)arg1 configurationDataWithCompletionHandler:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 declineSharingInvitation:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 deleteApplicationWithAID:(id)arg2;
- (void)paymentWebService:(id)arg1 deviceMetadataWithFields:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 didRegisterWithRegionMap:(id)arg2 primaryRegionTopic:(id)arg3;
- (id)paymentWebService:(id)arg1 filterVerificationChannels:(id)arg2;
- (void)paymentWebService:(id)arg1 handlePotentialExpressPass:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (bool)paymentWebService:(id)arg1 hasPassesOfType:(unsigned long long)arg2;
- (void)paymentWebService:(id)arg1 matchingInvitationOnDevice:(id)arg2 withTimeout:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (void)paymentWebService:(id)arg1 passOwnershipTokenWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (id)paymentWebService:(id)arg1 passesOfType:(unsigned long long)arg2;
- (void)paymentWebService:(id)arg1 provisioningDataWithCompletionHandler:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 queueConnectionToTrustedServiceManagerForPushTopic:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 registrationDataWithAuthToken:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 registrationDataWithCompletionHandler:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 removePass:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 removeSharingInvitation:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 requestPassUpgrade:(id)arg2 pass:(id)arg3 completion:(id /* block */)arg4;
- (void)paymentWebService:(id)arg1 revokeSharedCredentialGroup:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 setAccountAttestationAnonymizationSalt:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 setDefaultPaymentPassUniqueIdentifier:(id)arg2;
- (void)paymentWebService:(id)arg1 setNewAuthRandom:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 setNewAuthRandomIfNecessaryReturningPairingState:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 signData:(id)arg2 signatureEntanglementMode:(unsigned long long)arg3 withCompletionHandler:(id /* block */)arg4;
- (void)paymentWebService:(id)arg1 storePassOwnershipToken:(id)arg2 withIdentifier:(id)arg3;
- (void)paymentWebService:(id)arg1 subcredentialInvitationsWithCompletion:(id /* block */)arg2;
- (id)paymentWebService:(id)arg1 supportedRegionFeatureOfType:(long long)arg2;
- (void)paymentWebService:(id)arg1 updateAccountWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)paymentWebService:(id)arg1 updateMetadataOnPass:(id)arg2 withCredential:(id)arg3 completion:(id /* block */)arg4;
- (void)paymentWebService:(id)arg1 validateAddPreconditionsWithCompletion:(id /* block */)arg2;
- (void)paymentWebService:(id)arg1 validateTransferPreconditionsWithCompletion:(id /* block */)arg2;
- (void)paymentWebServiceDidUpdateConfiguration:(id)arg1;
- (bool)paymentWebServiceSupportsAccounts:(id)arg1;
- (bool)paymentWebServiceSupportsPeerPaymentRegistration:(id)arg1;
- (void)performDeviceCheckInWithCompletion:(id /* block */)arg1;
- (void)performProductActionRequest:(id)arg1 completion:(id /* block */)arg2;
- (int)registrationSupportedInCurrentRegionForWebService:(id)arg1;
- (void)renewAppleAccountWithCompletionHandler:(id /* block */)arg1;
- (void)requestBackgroundRegistrationForCredential:(id)arg1 withCompletion:(id /* block */)arg2;
- (id)secureElementIdentifiers;
- (bool)secureElementIsAvailable;
- (unsigned long long)secureElementOwnershipStateForCurrentUser;
- (void)setMaximumPaymentCards:(unsigned long long)arg1;
- (void)signatureForAuthToken:(id)arg1 webService:(id)arg2 completion:(id /* block */)arg3;
- (void)startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2;
- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(bool)arg1;
- (id)supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:(id)arg1;
- (id)supportedFeatureIdentifiersWithPaymentWebService:(id)arg1;
- (bool)supportsAutomaticPassPresentation;
- (bool)supportsCredentialType:(long long)arg1;
- (bool)supportsExpressForAutomaticSelectionTechnologyType:(long long)arg1;
- (id)trustedDeviceEnrollmentInfoForWebService:(id)arg1;
- (void)updatedAccountsForProvisioningWithCompletion:(id /* block */)arg1;
- (bool)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1;

@end
