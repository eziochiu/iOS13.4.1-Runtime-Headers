/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/DialogEngine.framework/DialogEngine
 */

@interface DEEncrypted : NSObject

+ (id)decrypt:(id)arg1;
+ (id)decrypt:(id)arg1 keyVersion:(id*)arg2;
+ (id)decryptFrom:(id)arg1 name:(id)arg2 base:(id)arg3;
+ (bool)decryptFrom:(id)arg1 to:(id)arg2 keyVersion:(id*)arg3;
+ (bool)decryptFrom:(id)arg1 to:(id)arg2 version:(id)arg3;
+ (id)encrypt:(id)arg1 keyId:(unsigned long long)arg2 multipart:(bool)arg3;
+ (id)encryptFrom:(id)arg1 name:(id)arg2 base:(id)arg3 keyId:(unsigned long long)arg4 multipart:(bool)arg5;
+ (bool)encryptFrom:(id)arg1 to:(id)arg2 keyId:(unsigned long long)arg3 encrytpedPb:(struct Encrypted { int (**x1)(); struct InternalMetadataWithArenaLite { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x_1_3_1; } x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_7_1_1; } x7; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_8_1_1; } x8; bool x9; }*)arg4;
+ (bool)encryptFrom:(id)arg1 to:(id)arg2 keyId:(unsigned long long)arg3 multipart:(bool)arg4;
+ (id)getKey:(unsigned long long)arg1;
+ (id)getKeyWithVersion:(id)arg1;
+ (id)readDataOfLength:(unsigned long long)arg1 from:(id)arg2 or:(id)arg3;
+ (id)versionFile:(id)arg1;
+ (bool)wrapFrom:(id)arg1 to:(id)arg2 encrytpedPb:(struct Encrypted { int (**x1)(); struct InternalMetadataWithArenaLite { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> > { _Atomic int x_1_3_1; } x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_7_1_1; } x7; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_8_1_1; } x8; bool x9; }*)arg3 multipart:(bool)arg4;

@end
