/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/DialogEngine.framework/DialogEngine
 */

@interface DEUpdater : NSObject {
    NSURL * _builtinDir;
    DEManifest * _builtinManifest;
    bool  _disableManifestSync;
    NSString * _distribution;
    NSURL * _downloadBase;
    bool  _foregroundManifestSync;
    DEManifest * _latestManifest;
    DEManifestSync * _manifestSync;
    NSURL * _overlayBase;
    double  _publicationErrorTTL;
    NSDate * _publicationErrorTime;
    NSURL * _publicationURL;
    DEWorkQueues * _queues;
    DEUpdaterState * _state;
    NSURL * _storageBase;
    NSURL * _updateDir;
}

@property (nonatomic, retain) NSURL *builtinDir;
@property (nonatomic, retain) DEManifest *builtinManifest;
@property (nonatomic) bool disableManifestSync;
@property (nonatomic, retain) NSString *distribution;
@property (nonatomic, retain) NSURL *downloadBase;
@property (nonatomic) bool foregroundManifestSync;
@property (nonatomic, retain) DEManifest *latestManifest;
@property (nonatomic, retain) DEManifestSync *manifestSync;
@property (nonatomic, retain) NSURL *overlayBase;
@property (nonatomic) double publicationErrorTTL;
@property (nonatomic, retain) NSDate *publicationErrorTime;
@property (nonatomic, retain) NSURL *publicationURL;
@property (nonatomic, retain) DEWorkQueues *queues;
@property (nonatomic, retain) DEUpdaterState *state;
@property (nonatomic, retain) NSURL *storageBase;
@property (nonatomic, retain) NSURL *updateDir;

+ (id)appendPublicationName:(id)arg1;
+ (id)clientReleaseForUpdater;
+ (bool)copyFrom:(id)arg1 to:(id)arg2;
+ (id)getUpdateDirFor:(id)arg1;
+ (id)loadPublication:(id)arg1;
+ (bool)package:(id)arg1 to:(id)arg2 includePrefixes:(id)arg3 excludePrefixes:(id)arg4 includeSuffixes:(id)arg5 excludeSuffixes:(id)arg6 overrides:(id)arg7 keyId:(unsigned long long)arg8 multipart:(bool)arg9 updating:(id)arg10;
+ (bool)prepareDistribution:(id)arg1 withManifestDir:(id)arg2 disabled:(bool)arg3 in:(id)arg4 keyId:(unsigned long long)arg5 multipart:(bool)arg6;
+ (void)remove:(id)arg1 from:(id)arg2;

- (void).cxx_destruct;
- (id)builtinDir;
- (id)builtinManifest;
- (void)checkOverlay:(id)arg1 version:(id)arg2;
- (id)chooseURLFor:(id)arg1 version:(id)arg2 versionFound:(bool*)arg3;
- (bool)disableManifestSync;
- (id)distribution;
- (id)downloadBase;
- (void)find:(id)arg1 block:(id /* block */)arg2;
- (void)find:(id)arg1 downloadType:(unsigned long long)arg2 block:(id /* block */)arg3;
- (id)find:(id)arg1 downloadType:(unsigned long long)arg2 status:(id*)arg3;
- (id)find:(id)arg1 status:(id*)arg2;
- (void)findLocally:(id)arg1 block:(id /* block */)arg2;
- (id)findLocally:(id)arg1 status:(id*)arg2;
- (bool)foregroundManifestSync;
- (id)getDownloadURLFor:(id)arg1 encryptedVersion:(id)arg2;
- (id)getStorageURLFor:(id)arg1 version:(id)arg2;
- (id)getVersionFor:(id)arg1;
- (id)getVersionFor:(id)arg1 encryptedVersion:(id*)arg2;
- (id)init;
- (id)initPlaceholder;
- (id)initWithDistribution:(id)arg1 publicationURL:(id)arg2 downloadBase:(id)arg3 builtinDir:(id)arg4;
- (id)latestManifest;
- (bool)linkToOverlay:(id)arg1 from:(id)arg2 replace:(bool)arg3;
- (bool)loadState;
- (id)manifestSync;
- (id)overlayBase;
- (void)prepare:(id)arg1 version:(id)arg2 encryptedVersion:(id)arg3 linkOnlyIfLatest:(bool)arg4 publication:(id)arg5 block:(id /* block */)arg6;
- (bool)prepareBuiltinManifest;
- (id)prepared:(id)arg1 version:(id)arg2;
- (double)publicationErrorTTL;
- (id)publicationErrorTime;
- (id)publicationURL;
- (id)queues;
- (void)removeFromOverlay:(id)arg1;
- (void)removeFromStorage:(id)arg1;
- (bool)resetState;
- (bool)saveState;
- (void)setBuiltinDir:(id)arg1;
- (void)setBuiltinManifest:(id)arg1;
- (void)setDisableManifestSync:(bool)arg1;
- (void)setDistribution:(id)arg1;
- (void)setDownloadBase:(id)arg1;
- (void)setForegroundManifestSync:(bool)arg1;
- (void)setLatestManifest:(id)arg1;
- (void)setManifestSync:(id)arg1;
- (void)setOverlayBase:(id)arg1;
- (void)setPublicationErrorTTL:(double)arg1;
- (void)setPublicationErrorTime:(id)arg1;
- (void)setPublicationURL:(id)arg1;
- (void)setQueues:(id)arg1;
- (void)setState:(id)arg1;
- (void)setStorageBase:(id)arg1;
- (void)setUpdateDir:(id)arg1;
- (id)state;
- (id)storageBase;
- (id)store:(id)arg1 version:(id)arg2 encryptedVersion:(id)arg3 from:(id)arg4 src:(id)arg5;
- (void)sync;
- (void)unorderedPrepare:(id)arg1 version:(id)arg2 encryptedVersion:(id)arg3 linkOnlyIfLatest:(bool)arg4 publication:(id)arg5 block:(id /* block */)arg6;
- (void)unorderedUpdate:(id)arg1 block:(id /* block */)arg2;
- (void)update:(id)arg1 block:(id /* block */)arg2;
- (id)updateDir;

@end
