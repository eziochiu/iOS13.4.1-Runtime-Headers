/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroMovie : NSObject <ExportDelegate> {
    bool  _allowNonPHMemoryForUnitTesting;
    id  _associatedPlayerViewController;
    MiroAutoEditor * _autoEditor;
    PHAssetCollection * _collection;
    <MiroMovieDelegate> * _delegate;
    MiroExportController * _exportController;
    PHAsset * _keyAsset;
    MiroMemory * _memory;
    NSString * _outputString;
    AVPlayerItem * _playerItem;
}

@property (nonatomic) bool allowNonPHMemoryForUnitTesting;
@property (nonatomic) id associatedPlayerViewController;
@property (retain) MiroAutoEditor *autoEditor;
@property (nonatomic, retain) PHAssetCollection *collection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSSet *defaultAssets;
@property (nonatomic) <MiroMovieDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) MiroExportController *exportController;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PHAsset *keyAsset;
@property (nonatomic, retain) MiroMemory *memory;
@property (nonatomic, retain) NSString *outputString;
@property (retain) AVPlayerItem *playerItem;
@property (nonatomic, readonly) UIViewController *playerViewController;
@property (readonly) Class superclass;

+ (bool)runTest:(id)arg1 options:(id)arg2 usingPlayerViewController:(id)arg3;

- (void).cxx_destruct;
- (void)_backgroundInit;
- (void)_exportProject:(id)arg1 presets:(id)arg2 progressHandler:(id /* block */)arg3 completionHandler:(id /* block */)arg4;
- (void)_generateProjectWithProgressHandler:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)_getMiroTapToRadarFilePath;
- (id)_tapToRadarBlueprint;
- (id)_tapToRadarDebug;
- (id)_tapToRadarMediaanalysis_db;
- (id)_tapToRadarMediaanalysis_db_shm;
- (id)_tapToRadarMediaanalysis_db_wal;
- (id)_tapToRadarMemory;
- (id)_tapToRadarPicklist;
- (id)_tapToRadarRanges;
- (void)_teardownInternals;
- (void)_testPregenerateWithCompletion:(id /* block */)arg1;
- (void)addAsset:(id)arg1;
- (bool)allowNonPHMemoryForUnitTesting;
- (id)associatedPlayerViewController;
- (id)autoEditor;
- (id)availableSongs;
- (id)availableTitleStyles;
- (void)cancelPregenerateMovie;
- (void)cancelPrepareForPlayback;
- (id)collection;
- (id)createPHMemory;
- (id)dataRepresentation;
- (void)dealloc;
- (id)defaultAssets;
- (id)delegate;
- (id)diagnosticItemProvider;
- (void)didFinishExport;
- (float)duration;
- (id)exportController;
- (void)exportController:(id)arg1 progressedTo:(float)arg2 preventBackslide:(bool)arg3;
- (id)exportSessionWithPresetName:(id)arg1;
- (void)exportWithPresets:(id)arg1 progressHandler:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
- (void)generateProjectWithProgressHandler:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)init;
- (id)initWithAssetCollection:(id)arg1;
- (id)initWithAssetCollection:(id)arg1 keyAsset:(id)arg2;
- (id)initWithDataRepresentation:(id)arg1;
- (bool)isCompelling;
- (id)keyAsset;
- (id)keyAsset;
- (double)maximumDuration;
- (id)memory;
- (long long)mood;
- (id)moodIDmap;
- (id)outputString;
- (id)playerItem;
- (void)playerItemWithProgressHandler:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)playerViewController;
- (void)pregenerateMovieWithCompletionHandler:(id /* block */)arg1;
- (void)prepareForPlayback;
- (id)production;
- (void)removeAsset:(id)arg1;
- (void)removeClip:(id)arg1;
- (void)setAllowNonPHMemoryForUnitTesting:(bool)arg1;
- (void)setAssociatedPlayerViewController:(id)arg1;
- (void)setAutoEditor:(id)arg1;
- (void)setCollection:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDuration:(float)arg1;
- (void)setExportController:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setMemory:(id)arg1;
- (void)setMood:(long long)arg1;
- (void)setOutputString:(id)arg1;
- (void)setPlayerItem:(id)arg1;
- (void)setRangeOfInterest:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg1 forClip:(id)arg2;
- (void)setSongID:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleStyle:(id)arg1;
- (void)setVolume:(unsigned long long)arg1 forClip:(id)arg2;
- (id)songID;
- (id)subtitle;
- (void)tapToRadar;
- (id)title;
- (id)titleStyle;

@end
