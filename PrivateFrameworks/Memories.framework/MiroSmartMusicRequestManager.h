/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroSmartMusicRequestManager : VEiOSSharedObject {
    bool  _allowsDownloads;
    NSDate * _dateM5Ends;
    NSDate * _dateM5Starts;
    bool  _didLogSongs;
    double  _initTime;
    FMSongLibrary * _library;
    MiroAutoEditLogger * _logger;
    NSSet * _moodIDSet;
    bool  _moodIsDownloading;
    NSArray * _observers;
}

@property (nonatomic) bool allowsDownloads;
@property (nonatomic, retain) NSDate *dateM5Ends;
@property (nonatomic, retain) NSDate *dateM5Starts;
@property (nonatomic) bool didLogSongs;
@property (nonatomic) double initTime;
@property (nonatomic, readonly) FMSongLibrary *library;
@property (nonatomic, retain) MiroAutoEditLogger *logger;
@property (nonatomic, retain) NSSet *moodIDSet;
@property (retain) NSArray *observers;

- (void).cxx_destruct;
- (id)_addObserversOnSongLibrary:(id)arg1 indicateNetworkActivity:(bool)arg2;
- (void)_downloadInProgressChanged:(id)arg1;
- (id)_featuredSongPredicate;
- (id)_featuredSongPredicateForMoodTag:(id)arg1;
- (id)_featuredSongSortDescriptor;
- (unsigned long long)_indexForMoodID:(id)arg1;
- (bool)_isDownloadingAnything;
- (bool)_isDownloadingforMoodID:(id)arg1;
- (id)_moodIDforSongUID:(id)arg1;
- (void)_removeObserversOnLibrary;
- (void)_requestDownloadForMoodID:(id)arg1;
- (void)_setDownloding:(bool)arg1 forMoodID:(id)arg2;
- (void)_setup;
- (id)allSongsScoredForKeywords:(id)arg1 musicGenreDistribution:(id)arg2 moodID:(id)arg3 excludingSongs:(id)arg4 localOptions:(int)arg5;
- (bool)allowsDownloads;
- (id)bestLocalSongUIDForKeywords:(id)arg1 musicGenreDistribution:(id)arg2 moodID:(id)arg3 excludingSongs:(id)arg4;
- (id)bestSongToDownloadForMoodID:(id)arg1;
- (id)dateM5Ends;
- (id)dateM5Starts;
- (void)dealloc;
- (bool)didLogSongs;
- (id)fetchAllSongs;
- (id)fetchFeaturedSongsForMoodTag:(id)arg1;
- (id)fetchSongWithUID:(id)arg1;
- (id)genreIDsForSong:(id)arg1;
- (bool)hasEnoughLocalSongsForMoodID:(id)arg1;
- (id)init;
- (double)initTime;
- (bool)isNowWithinTheM5PromotionDateRange;
- (id)library;
- (void)logSongLibraryInitTimeWithLogger:(id)arg1;
- (id)logger;
- (void)markSongUIDAsRequested:(id)arg1;
- (id)moodIDForSong:(id)arg1;
- (id)moodIDSet;
- (id)nextFeaturedSongToDownload;
- (id)observers;
- (void)purgeAllLocalCachedAssets;
- (id)recommendSongUIDForKeywords:(id)arg1 musicGenreDistribution:(id)arg2 moodID:(id)arg3 excludingSongs:(id)arg4;
- (double)scoreLocalityForSong:(id)arg1;
- (double)scoreSong:(id)arg1 forSpecialKeywords:(id)arg2;
- (double)scoreSong:(id)arg1 withDateLastSelected:(double)arg2;
- (double)scoreSong:(id)arg1 withKeywords:(id)arg2;
- (double)scoreSong:(id)arg1 withMoodID:(id)arg2;
- (double)scoreSong:(id)arg1 withMusicGenreDistribution:(id)arg2;
- (double)scoreSong:(id)arg1 withRegionID:(id)arg2;
- (void)setAllowsDownloads:(bool)arg1;
- (void)setDateM5Ends:(id)arg1;
- (void)setDateM5Starts:(id)arg1;
- (void)setDidLogSongs:(bool)arg1;
- (void)setInitTime:(double)arg1;
- (void)setLogger:(id)arg1;
- (void)setMoodIDSet:(id)arg1;
- (void)setObservers:(id)arg1;
- (bool)songHasSpecialKeyword:(id)arg1;
- (id)songLibrary;
- (void)storeDatePlayedForSongID:(id)arg1;
- (void)tearDownSongLibrary;

@end
