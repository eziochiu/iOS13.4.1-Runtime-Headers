/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface PMiOSMainViewController : MiroPlayerViewController <MiroEditorViewControllerDelegate, MiroPreventDismissalDelegate, PLDismissableViewController, PMActivityViewControllerDelegate, PMEditProviderDelegate, PMMovieContainerViewControllerDelegate, PMMovieProviderDelegate, PMScrubberProviderActionDelegate, UIPopoverPresentationControllerDelegate> {
    UITapGestureRecognizer * _airplayVisibilityTapGestureRecognizer;
    bool  _askedToCreateMemory;
    UIView * _bottomBar;
    UIVisualEffectView * _bottomBarBackgroundView;
    bool  _controlVisibility;
    NSError * _downloadError;
    bool  _downloadInProgress;
    NSArray * _durationDisplayNames;
    PMiOSSliderViewController * _durationSlider;
    UIView * _editorPresentationSnapshot;
    double  _initialDuration;
    long long  _initialMood;
    long long  _initialNumberOfAssetsInMovie;
    UIButton * _loadErrorButton;
    PMEditorRootViewController * _memoryEditor;
    PMiOSSliderViewController * _moodSlider;
    PMMovieContainerViewController * _movieContainerViewController;
    PMMovieProvider * _movieProvider;
    bool  _notifiedOfExportEnd;
    bool  _notifiedOfExportSuccess;
    UIView * _offscreenPresentationSnapshot;
    unsigned long long  _pendingActionState;
    PMiOSTimeLabelView * _playbackTimeView;
    VEKProduction * _production;
    PMiOSProgressViewController * _progressViewController;
    PMSaveProvider * _saveProvider;
    UIScreenEdgePanGestureRecognizer * _screenEdgePanLeftGestureRecognizer;
    PMiOSScrubberViewController * _scrubber;
    UIBarButtonItem * _shareBBItem;
    bool  _shouldPlayOnAppearance;
    bool  _sliderIsScrolling;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _timeAtTeardown;
    UILabel * _titleLabel;
    NSLayoutConstraint * _toolbarBlurBottomConstraint;
    NSLayoutConstraint * _toolbarBottomConstraint;
    NSLayoutConstraint * _toolbarHeightConstraint;
    PMTTRLoadingViewController * _ttrLoadingView;
    bool  preventDismissalByPhotosIfPossible;
}

@property (nonatomic, readonly) UIBarButtonItem *activityBBItem;
@property (nonatomic, retain) UITapGestureRecognizer *airplayVisibilityTapGestureRecognizer;
@property (nonatomic) bool askedToCreateMemory;
@property (nonatomic, retain) UIView *bottomBar;
@property (nonatomic, retain) UIVisualEffectView *bottomBarBackgroundView;
@property (nonatomic) bool controlVisibility;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSError *downloadError;
@property (nonatomic) bool downloadInProgress;
@property (nonatomic, retain) NSArray *durationDisplayNames;
@property (nonatomic, retain) PMiOSSliderViewController *durationSlider;
@property (nonatomic, readonly) UIBarButtonItem *editBBItem;
@property (nonatomic, retain) UIView *editorPresentationSnapshot;
@property (nonatomic, readonly) UIBarButtonItem *flexSpaceBBItem;
@property (readonly) unsigned long long hash;
@property (nonatomic) double initialDuration;
@property (nonatomic) long long initialMood;
@property (nonatomic) long long initialNumberOfAssetsInMovie;
@property (nonatomic, retain) UIButton *loadErrorButton;
@property (nonatomic, retain) PMEditorRootViewController *memoryEditor;
@property (nonatomic, retain) PMiOSSliderViewController *moodSlider;
@property (nonatomic, retain) PMMovieContainerViewController *movieContainerViewController;
@property (nonatomic, retain) PMMovieProvider *movieProvider;
@property (nonatomic, readonly) UIBarButtonItem *navBarShareBBItem;
@property (nonatomic, retain) UIView *offscreenPresentationSnapshot;
@property unsigned long long pendingActionState;
@property (nonatomic, readonly) UIBarButtonItem *playPauseBBItem;
@property (nonatomic, retain) PMiOSTimeLabelView *playbackTimeView;
@property (nonatomic) bool preventDismissalByPhotosIfPossible;
@property (nonatomic, retain) VEKProduction *production;
@property (nonatomic, retain) PMiOSProgressViewController *progressViewController;
@property (nonatomic, retain) PMSaveProvider *saveProvider;
@property (nonatomic, retain) UIScreenEdgePanGestureRecognizer *screenEdgePanLeftGestureRecognizer;
@property (nonatomic, retain) PMiOSScrubberViewController *scrubber;
@property (nonatomic, retain) UIBarButtonItem *shareBBItem;
@property bool shouldPlayOnAppearance;
@property bool sliderIsScrolling;
@property (readonly) Class superclass;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } timeAtTeardown;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic, retain) NSLayoutConstraint *toolbarBlurBottomConstraint;
@property (nonatomic, retain) NSLayoutConstraint *toolbarBottomConstraint;
@property (nonatomic, retain) NSLayoutConstraint *toolbarHeightConstraint;
@property (nonatomic, retain) PMTTRLoadingViewController *ttrLoadingView;

- (void).cxx_destruct;
- (id)_addHorizontalDividerToSuperView:(id)arg1 constrainedToYAxisAnchor:(id)arg2;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_applicationWillTerminate:(id)arg1;
- (void)_atexitInitialize;
- (void)_atexitUninitialize;
- (void)_autoEditOnLoad;
- (void)_cancelProgress:(id)arg1;
- (void)_clearEditorPresentationSnapshot;
- (void)_clearOffscreenPresentationSnapshot;
- (bool)_deviceIsRunningInternalOS;
- (void)_exportDidCompleteSuccessfully:(id)arg1;
- (void)_exportDidEnd:(id)arg1;
- (void)_exportWillBegin:(id)arg1;
- (void)_launchAutoEditDebugView:(id)arg1;
- (void)_mediaServicesReset:(id)arg1;
- (void)_memoryEditorWithCompletion:(id /* block */)arg1;
- (void)_movePlayerToBeginning;
- (void)_reEnableToolbar:(id)arg1;
- (void)_resetAudioSession;
- (void)_setupBottomToolbar;
- (id)_snapshotPlayer;
- (id)_snapshotPlayerWithAspect:(double)arg1;
- (void)_takeAndDisplayEditorPresentationSnapshot;
- (void)_takeAndDisplayOffscreenPresentationSnapshot;
- (void)_updateControls;
- (void)_updateDurationSlider;
- (void)_updateInitialAggdValues;
- (void)_updateMoodSlider;
- (void)_updateTitleForTraitCollection:(id)arg1;
- (id)activityBBItem;
- (void)airPlayDidEnd;
- (void)airPlayDidStart;
- (id)airplayVisibilityTapGestureRecognizer;
- (bool)askedToCreateMemory;
- (void)back:(id)arg1;
- (id)bottomBar;
- (id)bottomBarBackgroundView;
- (bool)controlVisibility;
- (void)dealloc;
- (void)debugPrefsStart:(id)arg1;
- (void)didRefreshPlayerItem:(id)arg1 downloadError:(id)arg2;
- (void)didShareActivity;
- (void)dismissAllModalViewControllers;
- (void)dismissEditor;
- (id)downloadError;
- (void)downloadErrorButtonTapped:(id)arg1;
- (bool)downloadInProgress;
- (id)durationDisplayNames;
- (id)durationSlider;
- (id)editBBItem;
- (void)editProvider:(id)arg1 didChange:(bool)arg2;
- (void)editProviderWillBeginChanging;
- (void)editSelector:(id)arg1;
- (id)editorPresentationSnapshot;
- (void)editorViewController:(id)arg1 didEditProduction:(id)arg2 withResult:(id)arg3;
- (void)editorViewControllerDidCancel:(id)arg1;
- (void)editorViewControllerDidFinishDismissing:(id)arg1;
- (id)fillerSpaceBBItem;
- (id)flexSpaceBBItem;
- (void)gentlyRefreshPlayerIfNeccesary;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithProduction:(id)arg1;
- (double)initialDuration;
- (long long)initialMood;
- (long long)initialNumberOfAssetsInMovie;
- (id)loadErrorButton;
- (id)memoryEditor;
- (id)moodSlider;
- (id)movieContainerViewController;
- (id)movieProvider;
- (id)navBarShareBBItem;
- (id)offscreenPresentationSnapshot;
- (unsigned long long)pendingActionState;
- (bool)ph_isTransitionOverlayView:(id)arg1;
- (void)ph_loadTransitionSourcePlaceholderViewUsingFactory:(id /* block */)arg1;
- (unsigned long long)ph_preferredChrome;
- (long long)ph_preferredChromeAnimation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })ph_rectOfInterestForTransitionInCoordinateSpace:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })ph_rectOfInterestForTransitionInCoordinateSpace:(id)arg1 withInfo:(id)arg2;
- (void)playPause:(id)arg1;
- (id)playPauseBBItem;
- (id)playPauseBBItemWithRate:(float)arg1;
- (id)playbackTimeView;
- (void)playerDidDoContentChange;
- (void)playerDidPlayToEnd;
- (void)playerNotReadyForDisplay;
- (void)playerProgressDidChange:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)playerRateChanged;
- (void)playerReadyForDisplay;
- (void)playerWillRefreshMovie;
- (bool)prefersHomeIndicatorAutoHidden;
- (bool)prepareForDismissingForced:(bool)arg1;
- (bool)preventDismissalByPhotosIfPossible;
- (void)processPendingActionState;
- (id)production;
- (void)progressDidChange:(double)arg1 description:(id)arg2;
- (id)progressViewController;
- (void)rebuildToolbarsToTraitCollection:(id)arg1;
- (void)rebuildToolbarsToTraitCollection:(id)arg1 withPlayRate:(float)arg2;
- (void)removeLoadErrorButton;
- (void)resultWasUpdated:(id)arg1;
- (id)saveProvider;
- (id)screenEdgePanLeftGestureRecognizer;
- (id)scrubber;
- (void)scrubberScrolledToTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 completionHandler:(id /* block */)arg2;
- (void)scrubberTappedWithPlayState:(bool)arg1 time:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)setAirplayVisibilityTapGestureRecognizer:(id)arg1;
- (void)setAskedToCreateMemory:(bool)arg1;
- (void)setBottomBar:(id)arg1;
- (void)setBottomBarBackgroundView:(id)arg1;
- (void)setControlVisibility:(bool)arg1;
- (void)setControlVisibility:(bool)arg1 traitCollection:(id)arg2;
- (void)setDownloadError:(id)arg1;
- (void)setDownloadInProgress:(bool)arg1;
- (void)setDurationDisplayNames:(id)arg1;
- (void)setDurationSlider:(id)arg1;
- (void)setEditorPresentationSnapshot:(id)arg1;
- (void)setInitialDuration:(double)arg1;
- (void)setInitialMood:(long long)arg1;
- (void)setInitialNumberOfAssetsInMovie:(long long)arg1;
- (void)setLoadErrorButton:(id)arg1;
- (void)setMemoryEditor:(id)arg1;
- (void)setMoodSlider:(id)arg1;
- (void)setMovieContainerViewController:(id)arg1;
- (void)setMovieProvider:(id)arg1;
- (void)setOffscreenPresentationSnapshot:(id)arg1;
- (void)setPendingActionState:(unsigned long long)arg1;
- (void)setPlaybackTimeView:(id)arg1;
- (void)setPreventDismissalByPhotosIfPossible:(bool)arg1;
- (void)setProduction:(id)arg1;
- (void)setProgressViewController:(id)arg1;
- (void)setSaveProvider:(id)arg1;
- (void)setScreenEdgePanLeftGestureRecognizer:(id)arg1;
- (void)setScrubber:(id)arg1;
- (void)setShareBBItem:(id)arg1;
- (void)setShouldPlayOnAppearance:(bool)arg1;
- (void)setSliderIsScrolling:(bool)arg1;
- (void)setTimeAtTeardown:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setToolbarBlurBottomConstraint:(id)arg1;
- (void)setToolbarBottomConstraint:(id)arg1;
- (void)setToolbarHeightConstraint:(id)arg1;
- (void)setTtrLoadingView:(id)arg1;
- (void)share:(id)arg1;
- (id)shareBBItem;
- (bool)shouldPlayOnAppearance;
- (bool)sliderIsScrolling;
- (void)swipeBack:(id)arg1;
- (void)takeOwnershipOfMovieContainerViewController;
- (void)teardownMovieController;
- (void)testMemoryEditorFor:(id)arg1 withCompletion:(id /* block */)arg2;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })timeAtTeardown;
- (id)titleLabel;
- (void)toggleControlVisibility;
- (id)toolbarBlurBottomConstraint;
- (id)toolbarBottomConstraint;
- (id)toolbarHeightConstraint;
- (void)traitCollectionDidChange:(id)arg1;
- (id)ttrLoadingView;
- (void)updateDownloadErrorButton;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end
