/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI
 */

@interface CUINamedVectorGlyph : CUINamedLookup {
    CUICatalog * _catalog;
    struct CGImage { } * _cgImageRef;
    double  _fontMatchingScaleFactor;
    unsigned int  _generatedImage;
    double  _lookedupScaleFactor;
    double  _pointSize;
}

@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } alignmentRect;
@property (nonatomic, readonly) double baselineOffset;
@property (nonatomic, readonly) double capHeight;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentBounds;
@property (nonatomic) double fontMatchingScaleFactor;
@property (nonatomic, readonly) bool isFlippable;

// Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI

- (void).cxx_destruct;
- (double)_requestedPointSizeRatio;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alignmentRect;
- (double)baselineOffset;
- (double)capHeight;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentBounds;
- (void)dealloc;
- (double)fontMatchingScaleFactor;
- (bool)generatedImage;
- (long long)glyphSize;
- (long long)glyphWeight;
- (struct CGImage { }*)image;
- (id)initWithName:(id)arg1 scaleFactor:(double)arg2 deviceIdiom:(long long)arg3 pointSize:(double)arg4 fromCatalog:(id)arg5 usingRenditionKey:(id)arg6 fromTheme:(unsigned long long)arg7;
- (bool)isFlippable;
- (id)knownAvailableVectorSizes;
- (double)pointSize;
- (struct CGImage { }*)rasterizeImageUsingScaleFactor:(double)arg1 forTargetSize:(struct CGSize { double x1; double x2; })arg2;
- (struct CGSVGDocument { }*)referenceGlyph;
- (double)referencePointSize;
- (double)scale;
- (void)setFontMatchingScaleFactor:(double)arg1;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

- (id)UIImageWithAsset:(id)arg1 configuration:(id)arg2 flippedHorizontally:(bool)arg3;
- (id)configuration;

@end
