/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface WebAccessibilityObjectWrapperBase : NSObject {
    unsigned int  _identifier;
    struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; } * m_object;
}

@property (nonatomic) unsigned int identifier;

+ (void)accessibilitySetShouldRepostNotifications:(bool)arg1;

- (id)_accessibilityWebDocumentView;
- (id)accessibilityMathPostscriptPairs;
- (id)accessibilityMathPrescriptPairs;
- (struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; }*)accessibilityObject;
- (id)accessibilityPlatformMathSubscriptKey;
- (id)accessibilityPlatformMathSuperscriptKey;
- (void)accessibilityPostedNotification:(id)arg1;
- (void)accessibilityPostedNotification:(id)arg1 userInfo:(id)arg2;
- (id)ariaLandmarkRoleDescription;
- (id)attachmentView;
- (struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; }*)axBackingObject;
- (id)baseAccessibilityDescription;
- (id)baseAccessibilityHelpText;
- (void)baseAccessibilitySetFocus:(bool)arg1;
- (id)baseAccessibilitySpeechHint;
- (id)baseAccessibilityTitle;
- (struct CGPath { }*)convertPathToScreenSpace:(struct Path { struct CGPath {} *x1; }*)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToSpace:(struct FloatRect { struct FloatPoint { float x_1_1_1; float x_1_1_2; } x1; struct FloatSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1 space:(int)arg2;
- (void)detach;
- (unsigned int)identifier;
- (id)initWithAccessibilityObject:(struct AXCoreObject { int (**x1)(); struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> > { _Atomic unsigned int x_1_2_1; } x_2_1_1; } x2; }*)arg1;
- (void)setIdentifier:(unsigned int)arg1;
- (bool)updateObjectBackingStore;

@end
