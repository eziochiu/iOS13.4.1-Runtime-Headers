/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
 */

@interface FCPersonalizationData : FCPrivateDataController <FCAppActivityObserving, FCCoreConfigurationObserving, FCDerivedPersonalizationData, FCOperationThrottlerDelegate> {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSMutableDictionary * _aggregates;
    bool  _attemptingUpload;
    NSMutableArray * _closedChangeGroups;
    NSMutableDictionary * _openChangeGroupDeltas;
    NSData * _pbData;
    CKRecord * _remoteRecord;
    <FCOperationThrottler> * _saveThrottler;
    FCPersonalizationTreatment * _treatment;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *accessQueue;
@property (nonatomic, retain) NSMutableDictionary *aggregates;
@property bool attemptingUpload;
@property (nonatomic, retain) NSMutableArray *closedChangeGroups;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *openChangeGroupDeltas;
@property (nonatomic, readonly) NSData *pbData;
@property (nonatomic, readonly) FCPersonalizationTreatment *personalizationTreatment;
@property (nonatomic, retain) CKRecord *remoteRecord;
@property (nonatomic, retain) <FCOperationThrottler> *saveThrottler;
@property (readonly) Class superclass;
@property (retain) FCPersonalizationTreatment *treatment;

+ (id)backingRecordIDs;
+ (id)backingRecordZoneIDs;
+ (long long)commandQueueUrgency;
+ (id)commandStoreFileName;
+ (id)commandsToMergeLocalDataToCloud:(id)arg1;
+ (void)configureKeyValueStoreForJSONHandling:(id)arg1;
+ (id)desiredKeys;
+ (id)localStoreFilename;
+ (id)localStoreMigrator;
+ (unsigned long long)localStoreVersion;
+ (bool)requiresBatchedSync;
+ (bool)requiresHighPriorityFirstSync;
+ (bool)requiresPushNotificationSupport;

- (void).cxx_destruct;
- (void)_applicationDidEnterBackground;
- (void)_closeOpenChangeGroupFromInstance:(id)arg1;
- (id)_instanceIdentifier;
- (void)_reloadTreatment;
- (void)_updateWithRemoteRecord:(id)arg1 profile:(id)arg2;
- (void)_writeToLocalStoreWithCompletionHandler:(id /* block */)arg1;
- (id)accessQueue;
- (void)activityObservingApplicationDidEnterBackground;
- (void)addObserver:(id)arg1;
- (id)aggregateForFeatureKey:(id)arg1;
- (id)aggregates;
- (id)aggregatesForFeatureKeys:(id)arg1;
- (id)aggregatesForFeatures:(id)arg1;
- (bool)attemptingUpload;
- (id)baselineAggregateWithConfigurableValues:(id)arg1;
- (bool)canHelpRestoreZoneName:(id)arg1;
- (void)clearPersonalizationData;
- (id)closedChangeGroups;
- (void)configurationManager:(id)arg1 configurationDidChange:(id)arg2;
- (id)d_allGlobalAggregates;
- (void)d_allResults:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)enumerateAggregatesUsingBlock:(id /* block */)arg1;
- (void)generateDerivedDataWithQualityOfService:(long long)arg1 completion:(id /* block */)arg2;
- (void)handleSyncWithChangedRecords:(id)arg1 deletedRecordNames:(id)arg2;
- (id)initWithContext:(id)arg1 pushNotificationCenter:(id)arg2 storeDirectory:(id)arg3;
- (id)initWithPBData:(id)arg1 treatment:(id)arg2;
- (void)loadLocalCachesFromStore;
- (id)modifyLocalAggregatesForFeatureKeys:(id)arg1 withAction:(unsigned long long)arg2 actionCount:(unsigned long long)arg3 defaultClicks:(double)arg4 defaultImpressions:(double)arg5 impressionBias:(double)arg6 groupBias:(double)arg7;
- (id)openChangeGroupDeltas;
- (void)operationThrottler:(id)arg1 performAsyncOperationWithCompletion:(id /* block */)arg2;
- (id)pbData;
- (id)personalizationTreatment;
- (void)prepareAggregatesForUseWithCompletionHandler:(id /* block */)arg1;
- (id)recordsForRestoringZoneName:(id)arg1;
- (id)remoteRecord;
- (void)removeObserver:(id)arg1;
- (id)saveThrottler;
- (void)setAccessQueue:(id)arg1;
- (void)setAggregates:(id)arg1;
- (void)setAttemptingUpload:(bool)arg1;
- (void)setClosedChangeGroups:(id)arg1;
- (void)setOpenChangeGroupDeltas:(id)arg1;
- (void)setRemoteRecord:(id)arg1;
- (void)setSaveThrottler:(id)arg1;
- (void)setTreatment:(id)arg1;
- (void)syncWithCompletion:(id /* block */)arg1;
- (id)treatment;
- (void)updateFeatures:(id)arg1 withAction:(unsigned long long)arg2 displayRank:(long long)arg3 groupRank:(long long)arg4 groupType:(long long)arg5 individually:(bool)arg6 configurableValues:(id)arg7 featuresUpdatedBlock:(id /* block */)arg8;

@end
