/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
 */

@interface NSTextLayoutManager : NSObject <NSSecureCoding, NSTextViewportElementProvider> {
    long long  _applicationFrameworkContext;
    NSLayoutManager * _companion;
    <NSTextLayoutManagerDelegatePrivate> * _delegate;
    /* Warning: unhandled struct encoding: '{?="textContainer"@"NSTextContainer""textRange"@"NSTextRange""layoutFragmentTable"@"NSMapTable""usageBounds"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"layoutFragments"^@"layoutFragmentsHint"^@"layoutFragmentsCount"Q"layoutFragmentsSize"Q}' */ struct { 
        NSTextContainer *textContainer; 
        NSTextRange *textRange; 
        NSMapTable *layoutFragmentTable; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } usageBounds; 
        layoutFragmentsHint **layoutFragments; 
    }  _lastTextContainerEntry;
    NSOperationQueue * _layoutQueue;
    bool  _limitsLayoutForSuspiciousContents;
    struct { id x1; id x2; id x3; } * _softInvalidatedSegmentHead;
    NSTextContainer * _templateTextContainer;
    struct { id x1; id x2; id x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; id *x5; id *x6; unsigned long long x7; unsigned long long x8; } * _textContainerEntries;
    struct { id x1; id x2; id x3; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_4_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_4_1_2; } x4; id *x5; id *x6; unsigned long long x7; unsigned long long x8; } * _textContainerEntriesAccessHint;
    unsigned long long  _textContainerEntriesCount;
    unsigned long long  _textContainerEntriesSize;
    NSArray * _textContainers;
    NSTextContentManager * _textContentManager;
    struct { id x1; id x2; id x3; } * _textLayoutSegments;
    struct { id x1; id x2; id x3; } * _textLayoutSegmentsAccessHint;
    unsigned long long  _textLayoutSegmentsCount;
    unsigned long long  _textLayoutSegmentsSize;
    bool  _usesFontLeading;
    NSTextViewportLayoutController * _viewportLayoutController;
}

@property (readonly, copy) NSString *debugDescription;
@property <NSTextLayoutManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSOperationQueue *layoutQueue;
@property bool limitsLayoutForSuspiciousContents;
@property (readonly) Class superclass;
@property (retain) NSTextContainer *templateTextContainer;
@property (readonly, copy) NSArray *textContainers;
@property (readonly) NSTextContentManager *textContentManager;
@property (readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } usageBoundsForLastTextContainer;
@property bool usesFontLeading;

+ (Class)companionLayoutManagerClass;
+ (bool)supportsSecureCoding;
+ (Class)viewportLayoutControllerClass;

- (void)_addTextContainerFromTemplate:(id)arg1;
- (void)_commonInit;
- (bool)_hasLayoutForLocation:(id)arg1;
- (void)_removeTextContainer;
- (void)_removeTextContainersUntilCondition:(id /* block */)arg1;
- (long long)applicationFrameworkContext;
- (id)companionLayoutManager;
- (void)dealloc;
- (id)delegate;
- (void)encodeWithCoder:(id)arg1;
- (void)ensureLayoutForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)ensureLayoutForRange:(id)arg1;
- (id)enumerateTextLayoutFragmentsFromLocation:(id)arg1 options:(long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateViewportElementsFromLocation:(id)arg1 options:(long long)arg2 usingBlock:(id /* block */)arg3;
- (void)finalizeAndPushLastTextContainer;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)invalidateLayoutForRange:(id)arg1;
- (id)layoutQueue;
- (bool)limitsLayoutForSuspiciousContents;
- (id)rangeForTextContainerAtIndex:(long long)arg1;
- (void)replaceCharactersInRange:(id)arg1 withAttributedString:(id)arg2;
- (void)replaceCharactersInRange:(id)arg1 withElements:(id)arg2;
- (void)replaceTextContentManager:(id)arg1;
- (void)setApplicationFrameworkContext:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLayoutQueue:(id)arg1;
- (void)setLimitsLayoutForSuspiciousContents:(bool)arg1;
- (void)setTemplateTextContainer:(id)arg1;
- (void)setTextContentManager:(id)arg1;
- (void)setUsesFontLeading:(bool)arg1;
- (void)synchronize;
- (id)templateTextContainer;
- (void)textContainerChangedGeometry:(id)arg1;
- (id)textContainerForLocation:(id)arg1;
- (id)textContainers;
- (id)textContentManager;
- (id)textLayoutFragmentForLocation:(id)arg1;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x1; double x2; })arg1 inTextContainerAtIndex:(long long)arg2;
- (void)updateLayoutWithTextLayoutFragment:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })usageBoundsForLastTextContainer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })usageBoundsInTextContainerAtIndex:(long long)arg1;
- (bool)usesFontLeading;
- (id)viewportLayoutController;

@end
