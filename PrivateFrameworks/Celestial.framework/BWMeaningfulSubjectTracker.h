/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface BWMeaningfulSubjectTracker : NSObject {
    NSMutableDictionary * _activeContextsByAssociationObjectIdentifier;
    struct { 
        float minOverlap; 
        float boxSmoothingLr; 
        float overlapBoxThreshold; 
        unsigned int initNonmatchFrameCheckWindow; 
        unsigned int initMaxNonmatchFrameCount; 
        unsigned int maxNonmatchFrameCounts[3]; 
        bool isDetUsedToReinit; 
    }  _associationParams;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _coordinateSpaceForDetectedObjects;
    BWMeaningfulSubjectDetectionContext * _detectionContext;
    BWPixelBufferPool * _detectionPool;
    bool  _dumpEnabled;
    BWPixelBufferPool * _examplePool;
    NSMutableSet * _inactiveAssociationObjectIdentifiers;
    NSMutableSet * _inactiveContexts;
    BWPixelBufferPool * _intermediatePool;
    struct { 
        unsigned int nextObjectId; 
        unsigned int numObjects; 
        struct { 
            unsigned int objectId; 
            unsigned int age; 
            unsigned int unmatchedFrameCount; 
            int killFlag; 
            struct { 
                unsigned int objectId; 
                int category; 
                struct { 
                    float x; 
                    float y; 
                    float width; 
                    float height; 
                } bbox; 
                unsigned int confidence; 
                unsigned int yaw; 
                unsigned int roll; 
                int smile; 
                int blinkLeft; 
                int blinkRight; 
                struct { 
                    float x; 
                    float y; 
                    float width; 
                    float height; 
                } eyeRectLeft; 
                struct { 
                    float x; 
                    float y; 
                    float width; 
                    float height; 
                } eyeRectRight; 
                unsigned char hasPoseData; 
                unsigned char hasEyeData; 
                unsigned char hasBlinkData; 
                unsigned char hasSmileData; 
                int modality; 
            } object; 
        } objects[4]; 
    }  _mostRecentAssociationResult;
    struct { 
        struct { 
            unsigned char numModels; 
            BOOL codeVersion[20]; 
            BOOL name[4][20]; 
            BOOL version[4][20]; 
            unsigned char rsvd[32]; 
        } modelInfo; 
        unsigned int frameId; 
        unsigned int numFaces; 
        struct { 
            unsigned int objectId; 
            int category; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } bbox; 
            unsigned int confidence; 
            int yaw; 
            int roll; 
            int smile; 
            int blinkLeft; 
            int blinkRight; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } eyeRectLeft; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } eyeRectRight; 
            unsigned char hasPoseData; 
            unsigned char hasEyeData; 
            unsigned char hasBlinkData; 
            unsigned char hasSmileData; 
            unsigned char isFrontal; 
            int modality; 
        } faces[10]; 
        unsigned int numObjects; 
        struct { 
            unsigned int objectId; 
            int category; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } bbox; 
            unsigned int confidence; 
            int modality; 
        } objects[10]; 
        unsigned int numSaliencyObjects; 
        struct { 
            unsigned int objectId; 
            int category; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } bbox; 
            unsigned int confidence; 
            int modality; 
        } saliencyObjects[1]; 
        struct { 
            unsigned char data[4480]; 
            unsigned short width; 
            unsigned short height; 
            unsigned short rowBytes; 
            unsigned char valid; 
        } saliencyHeatMap; 
    }  _mostRecentDetectionResult;
    struct { 
        struct { 
            unsigned char numModels; 
            BOOL codeVersion[20]; 
            BOOL name[3][20]; 
            BOOL version[3][20]; 
            unsigned char rsvd[32]; 
        } modelInfo; 
        unsigned int frameId; 
        unsigned int numObjects; 
        struct { 
            unsigned int objectId; 
            int category; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } bbox; 
            unsigned int confidence; 
            unsigned int yaw; 
            unsigned int roll; 
            int smile; 
            int blinkLeft; 
            int blinkRight; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } eyeRectLeft; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } eyeRectRight; 
            unsigned char hasPoseData; 
            unsigned char hasEyeData; 
            unsigned char hasBlinkData; 
            unsigned char hasSmileData; 
            int modality; 
        } objects[4]; 
    }  _mostRecentDetectionResultAsTrackingResult;
    struct { 
        struct { 
            unsigned char numModels; 
            BOOL codeVersion[20]; 
            BOOL name[3][20]; 
            BOOL version[3][20]; 
            unsigned char rsvd[32]; 
        } modelInfo; 
        unsigned int frameId; 
        unsigned int numObjects; 
        struct { 
            unsigned int objectId; 
            int category; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } bbox; 
            unsigned int confidence; 
            unsigned int yaw; 
            unsigned int roll; 
            int smile; 
            int blinkLeft; 
            int blinkRight; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } eyeRectLeft; 
            struct { 
                float x; 
                float y; 
                float width; 
                float height; 
            } eyeRectRight; 
            unsigned char hasPoseData; 
            unsigned char hasEyeData; 
            unsigned char hasBlinkData; 
            unsigned char hasSmileData; 
            int modality; 
        } objects[4]; 
    }  _mostRecentTrackingResult;
    bool  _msrScalingEnabled;
    void * _neuralEngineContext;
    unsigned int  _numberOfFramesBetweenDetections;
    unsigned int  _numberOfFramesSinceDetection;
    FigM2MController * _surfaceAcceleratorController;
    BWPixelBufferPool * _trackingPool;
}

+ (void)initialize;

- (int)_continueTrackingObject:(void *)arg1 inPixelBuffer:(void *)arg2 usingContext:(void *)arg3 examplePixelBuffer:(void *)arg4 trackingPixelBuffer:(void *)arg5 intermediatePixelBuffer:(void *)arg6 estimatedMeanColor:(void *)arg7 bgraInputPixelBuffer:(void *)arg8 result:(void *)arg9; // needs 9 arg types, found 8: struct { unsigned int x1; unsigned int x2; unsigned int x3; int x4; struct { unsigned int x_5_1_1; int x_5_1_2; struct { float x_3_2_1; float x_3_2_2; float x_3_2_3; float x_3_2_4; } x_5_1_3; unsigned int x_5_1_4; unsigned int x_5_1_5; unsigned int x_5_1_6; int x_5_1_7; int x_5_1_8; int x_5_1_9; struct { float x_10_2_1; float x_10_2_2; float x_10_2_3; float x_10_2_4; } x_5_1_10; struct { float x_11_2_1; float x_11_2_2; float x_11_2_3; float x_11_2_4; } x_5_1_11; unsigned char x_5_1_12; unsigned char x_5_1_13; unsigned char x_5_1_14; unsigned char x_5_1_15; int x_5_1_16; } x5; }*, struct __CVBuffer { }*, id, struct __CVBuffer { }*, struct __CVBuffer { }*, struct __CVBuffer { }*, struct __CVBuffer { }*, struct { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; unsigned int x2; unsigned char x3; }*
- (void)_deactivateTrackingContext:(id)arg1 forObjectIdentifier:(id)arg2;
- (int)_detectObjectsInPixelBuffer:(struct __CVBuffer { }*)arg1 usingContext:(id)arg2 detectionPixelBuffer:(struct __CVBuffer { }*)arg3 bgraInputPixelBuffer:(struct __CVBuffer { }*)arg4;
- (int)_initializeTrackingOfObject:(void *)arg1 inPixelBuffer:(void *)arg2 usingContext:(void *)arg3 examplePixelBuffer:(void *)arg4 trackingPixelBuffer:(void *)arg5 intermediatePixelBuffer:(void *)arg6 estimatedMeanColor:(void *)arg7 bgraInputPixelBuffer:(void *)arg8; // needs 8 arg types, found 7: struct { unsigned int x1; unsigned int x2; unsigned int x3; int x4; struct { unsigned int x_5_1_1; int x_5_1_2; struct { float x_3_2_1; float x_3_2_2; float x_3_2_3; float x_3_2_4; } x_5_1_3; unsigned int x_5_1_4; unsigned int x_5_1_5; unsigned int x_5_1_6; int x_5_1_7; int x_5_1_8; int x_5_1_9; struct { float x_10_2_1; float x_10_2_2; float x_10_2_3; float x_10_2_4; } x_5_1_10; struct { float x_11_2_1; float x_11_2_2; float x_11_2_3; float x_11_2_4; } x_5_1_11; unsigned char x_5_1_12; unsigned char x_5_1_13; unsigned char x_5_1_14; unsigned char x_5_1_15; int x_5_1_16; } x5; }*, struct __CVBuffer { }*, id, struct __CVBuffer { }*, struct __CVBuffer { }*, struct __CVBuffer { }*, struct __CVBuffer { }*
- (void)_prepareContext:(id)arg1 withExamplePixelBuffer:(struct __CVBuffer { }*)arg2 trackingPixelBuffer:(struct __CVBuffer { }*)arg3;
- (void)_translateRegionOfInterest:(struct TtTrkCropRoi { float x1; float x2; float x3; float x4; }*)arg1 inPixelBuffer:(struct __CVBuffer { }*)arg2 toSourcePixelBuffer:(struct __CVBuffer { }*)arg3 destinationPixelBuffer:(struct __CVBuffer { }*)arg4 outSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg5 outDestinationRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg6;
- (void)dealloc;
- (id)init;
- (struct __CVBuffer { }*)newInputPixelBufferFromSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (struct __CVBuffer { }*)newTrackingIntermediatePixelBufferFromPixelBuffer:(struct __CVBuffer { }*)arg1 estimatedMeanColor:(/* Warning: Unrecognized filer type: '2' using 'void*' */ void**)arg2;
- (void)prepareWithInputPixelBufferAttributes:(id)arg1;
- (id)processPixelBuffer:(struct __CVBuffer { }*)arg1;
- (void)terminate;

@end
