/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

@interface FigCaptureMovieFileSinkPipeline : FigCaptureSinkPipeline {
    BWFigVideoCaptureDevice * _captureDevice;
    FigCaptureMovieFileSinkHeadPipeline * _headPipeline;
    FigCaptureMovieFileSinkMiddlePipeline * _middlePipeline;
    bool  _momentCaptureMovieRecordingEnabled;
    NSDictionary * _movieFileColorInfo;
    NSMutableArray * _movieFileSinkNodes;
    bool  _overCaptureEnabled;
    bool  _overCaptureTailPipelineRenderingEnabled;
    NSMutableArray * _sdofCompressorNodes;
    NSMutableArray * _tailPipelines;
    NSMutableArray * _videoCompressorNodes;
}

@property (nonatomic, readonly) bool allTailsAreRecording;
@property (nonatomic, readonly) bool atLeastOneTailIsRecording;
@property (nonatomic, readonly) BWFigVideoCaptureDevice *captureDevice;
@property (nonatomic, readonly) BWFileCoordinatorNode *fileCoordinatorNode;
@property (nonatomic, readonly) BWIrisStagingNode *irisStagingNode;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } irisVISCleanOutputRectForCLAP;
@property (nonatomic, readonly) NSDictionary *movieFileColorInfo;
@property (nonatomic, readonly) NSArray *movieFileSinkNodes;
@property (nonatomic, readonly) struct { int x1; int x2; } offlineVISDimensions;
@property (nonatomic, readonly) bool overCaptureEnabled;
@property (nonatomic) bool overCaptureTailPipelineRenderingEnabled;
@property (nonatomic) <BWQRCodeSceneObserver> *qrCodeSceneObserver;
@property (nonatomic) bool sceneClassifierSuspended;
@property (nonatomic, readonly) NSArray *sdofCompressorNodes;
@property (nonatomic, readonly) NSArray *videoCompressorNodes;
@property (nonatomic, readonly) NSString *videoConnectionID;
@property (nonatomic, readonly) BWVideoOrientationMetadataNode *videoOrientationMetadataNode;
@property (nonatomic, readonly) int videoSourceDeviceType;
@property (nonatomic, readonly) NSString *videoSourceID;

+ (void)initialize;

- (bool)allTailsAreRecording;
- (bool)atLeastOneTailIsRecording;
- (id)captureDevice;
- (void)dealloc;
- (id)fileCoordinatorNode;
- (id)initWithConfiguration:(id)arg1 videoSourceCaptureOutput:(id)arg2 audioSourceCaptureOutput:(id)arg3 detectedObjectBoxedMetadataOutputs:(id)arg4 objectDetectionSourceOutput:(id)arg5 metadataSourcePipelineOutputs:(id)arg6 graph:(id)arg7 name:(id)arg8 inferenceScheduler:(id)arg9 captureDevice:(id)arg10 audioSourceDelegate:(id)arg11 recordingStatusDelegate:(id)arg12 irisRequestDelegate:(id)arg13 masterClock:(struct OpaqueCMClock { }*)arg14;
- (id)irisStagingNode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })irisVISCleanOutputRectForCLAP;
- (id)middlePipeline;
- (id)movieFileColorInfo;
- (id)movieFileSinkNodes;
- (struct { int x1; int x2; })offlineVISDimensions;
- (bool)overCaptureEnabled;
- (bool)overCaptureTailPipelineRenderingEnabled;
- (id)qrCodeSceneObserver;
- (bool)sceneClassifierSuspended;
- (id)sdofCompressorNodes;
- (void)setOverCaptureTailPipelineRenderingEnabled:(bool)arg1;
- (void)setQrCodeSceneObserver:(id)arg1;
- (void)setRecording:(bool)arg1 forTailPipelineIndex:(unsigned long long)arg2;
- (void)setRecordingForAllTailPipelines:(bool)arg1;
- (void)setSceneClassifierSuspended:(bool)arg1;
- (void)setUpBackPressureForResolvedRetainedBufferCounts;
- (id)videoCompressorNodes;
- (id)videoConnectionID;
- (id)videoOrientationMetadataNode;
- (int)videoSourceDeviceType;
- (id)videoSourceID;

@end
