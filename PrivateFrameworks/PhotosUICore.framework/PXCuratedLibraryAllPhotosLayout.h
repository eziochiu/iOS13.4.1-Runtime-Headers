/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXCuratedLibraryAllPhotosLayout : PXGSplitLayout <PXAssetsDataSourceManagerObserver, PXChangeObserver, PXCuratedLibraryBodyLayout, PXCuratedLibraryInlineHeadersLayoutGeometrySource, PXCuratedLibraryViewModelPresenter, PXGDisplayAssetSource, PXGItemsLayoutDelegate> {
    PXAssetReference * __anchorAssetReference;
    PXGAnchor * _anchor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _anchorTargetViewportCenter;
    PXPointAnimator * _anchorViewportScaleCenterAnimator;
    PXNumberAnimator * _anchorViewportScaleCenterVelocityTracker;
    PXCuratedLibraryAssetDecorationSource * _assetDecorationSource;
    unsigned int  _backgroundMediaVersion;
    <PXDisplayAssetFetchResult> * _cachedClampedFetchResult;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _cachedClampedItemRange;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _cachedRangeForSelectedItems;
    PXAssetsDataSource * _currentDataSource;
    unsigned long long  _dataSourceIdentifierOfCachedRangeForSelectedItems;
    PXAssetsDataSourceManager * _dataSourceManager;
    PXGItemsLayout<PXCuratedLibraryAllPhotosBodyLayout> * _decadesItemLayout;
    PXGItemsLayout<PXCuratedLibraryAllPhotosBodyLayout> * _didAnimateTowardsAnchorInItemsLayout;
    bool  _didChangeFiltering;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _effectiveOverlayInsets;
    PXCuratedLibraryInlineHeadersDataSourceManager * _inlineHeadersDataSourceManager;
    PXCuratedLibraryInlineHeadersLayout * _inlineHeadersLayout;
    bool  _isPerformingUpdate;
    bool  _isPreheatingByColumnIndex;
    PXGItemsLayout<PXCuratedLibraryAllPhotosBodyLayout> * _itemLayoutByHeaderLevel;
    NSArray * _itemLayouts;
    NSMutableSet * _itemLayoutsAllowedToLoad;
    NSDateInterval * _lastReturnedDateInterval;
    unsigned long long  _lastReturnedDateIntervalDataSourceIdentifier;
    NSArray * _lastReturnedLocationNames;
    unsigned long long  _lastReturnedLocationNamesDataSourceIdentifier;
    NSArray * _layers;
    struct _PXGSpriteIndexRange { 
        unsigned int location; 
        unsigned int length; 
    }  _lightBackgroundSpriteIndexRange;
    struct CGPoint { 
        double x; 
        double y; 
    }  _normalizedScaleCenterInAnchorSprite;
    PXGOneColumnLayout * _oneColLayout;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _overlayInsets;
    bool  _performedInitialVisualShift;
    PXGPinchEffect * _pinchEffect;
    unsigned int  _pinchEffectCaptureSpriteIndex;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
    }  _postUpdateFlags;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
    }  _preUpdateFlags;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _prefetchedForLoadedItems;
    PXPhotoKitUIMediaProvider * _preheatMediaProvider;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _preheatedThumbsForItemsByColumnIndex;
    PXAssetsDataSource * _presentedDataSource;
    bool  _scrolledWhileAnimatingZoom;
    bool  _shouldAnimateTowardsAnchor;
    PXCuratedLibraryLayoutSpec * _spec;
    PXCuratedLibraryViewModel * _viewModel;
    bool  _visuallyStableAnchorAllowedCloseToTop;
    long long  _visuallyStableAnchorItem;
    long long  _visuallyStableAnchorItemDesiredColumn;
    bool  _wasTracking;
    PXGZoomLayout * _zoomLayout;
}

@property (nonatomic, readonly) PXGAnchor *anchor;
@property (nonatomic, retain) PXAssetReference *anchorAssetReference;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } anchorTargetViewportCenter;
@property (nonatomic, readonly) PXPointAnimator *anchorViewportScaleCenterAnimator;
@property (nonatomic, readonly) PXNumberAnimator *anchorViewportScaleCenterVelocityTracker;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PXGItemsLayout<PXCuratedLibraryAllPhotosBodyLayout> *didAnimateTowardsAnchorInItemsLayout;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } effectiveOverlayInsets;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } normalizedScaleCenterInAnchorSprite;
@property (nonatomic, readonly) PXGOneColumnLayout *oneColLayout;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } overlayInsets;
@property (nonatomic, readonly) PXAssetsDataSource *presentedDataSource;
@property (nonatomic, readonly) PXGItemsLayout<PXCuratedLibraryAllPhotosBodyLayout> *primaryItemsLayout;
@property (nonatomic, readonly) bool shouldAnimateTowardsAnchor;
@property (nonatomic, retain) PXCuratedLibraryLayoutSpec *spec;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXCuratedLibraryViewModel *viewModel;
@property (nonatomic, readonly) bool wasTracking;

- (void).cxx_destruct;
- (void)_configureLayout:(id)arg1;
- (id)_createLayoutWithNumberOfColumns:(long long)arg1;
- (id)_displayAssetForItem:(long long)arg1;
- (long long)_estimatedItemsPerScreenForLayout:(id)arg1;
- (double)_interItemSpacingForLayout:(id)arg1;
- (double)_itemCaptionSpacingForLayout:(id)arg1;
- (bool)_layoutHasIndividualItems:(id)arg1;
- (bool)_layoutIsAspectFit:(id)arg1;
- (bool)_layoutWantsSingleDateTitle;
- (void)_performAnchorAlignmentVisualShiftWithBaseLayout:(id)arg1;
- (void)_performVisualShiftWithLayout:(id)arg1 movingItem:(long long)arg2 toColumn:(long long)arg3;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_rangeOfItemsForContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })_scaleForLayout:(id)arg1;
- (struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })_spriteTransformForLayout:(id)arg1;
- (void)_updateBackgroundSprites;
- (void)_updateDataSource;
- (void)_updateDecorationSource;
- (void)_updateEffectiveOverlayInsets;
- (void)_updateLayers;
- (void)_updatePinchEffect;
- (void)_updatePrefetching;
- (void)_updateViewModelIsAnimating;
- (void)_updateVisualShifting;
- (void)_updateZoom;
- (void)_updateZoomTransforms;
- (bool)_wantsDecorationForNumberOfColumns:(long long)arg1;
- (id)anchor;
- (id)anchorAssetReference;
- (struct CGPoint { double x1; double x2; })anchorTargetViewportCenter;
- (id)anchorViewportScaleCenterAnimator;
- (id)anchorViewportScaleCenterVelocityTracker;
- (void)axGroup:(id)arg1 didChange:(unsigned long long)arg2 userInfo:(id)arg3;
- (unsigned long long)behaviorForCaptureSpriteAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsForLevel:(unsigned long long)arg1;
- (id)colorAtIndex:(unsigned int)arg1 inLayout:(id)arg2;
- (void)containingScrollViewDidScroll:(struct CGPoint { double x1; double x2; })arg1;
- (id /* block */)dateIntervalFutureForContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (unsigned long long)desiredPlaceholderStyleInLayout:(id)arg1;
- (id)didAnimateTowardsAnchorInItemsLayout;
- (id)displayAssetFetchResultForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2;
- (id)displayAssetRequestObserverForSpritesInRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1 inLayout:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })effectiveOverlayInsets;
- (void)enumerateVisibleAnchoringLayoutsUsingBlock:(id /* block */)arg1;
- (void)enumerateVisibleAnchoringSpriteIndexesUsingBlock:(id /* block */)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1 level:(unsigned long long)arg2;
- (id)hitTestResultForSpriteIndex:(unsigned int)arg1;
- (id)init;
- (id)initWithViewModel:(id)arg1 spec:(id)arg2;
- (void)invalidateItemsLayout;
- (bool)isAnimating;
- (double)itemsLayout:(id)arg1 aspectRatioForItem:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })itemsLayout:(id)arg1 bestCropRectForItem:(long long)arg2 withAspectRatio:(double)arg3;
- (long long)itemsLayout:(id)arg1 itemForObjectReference:(id)arg2;
- (void)itemsLayout:(id)arg1 updateTagsInSpriteInfos:(struct { int x1; int x2; float x3; long long x4; unsigned short x5; unsigned char x6; }*)arg2 forItemsInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3;
- (id /* block */)locationNamesFutureForContentInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })minSpriteSizeForPresentationStyle:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })normalizedScaleCenterInAnchorSprite;
- (id)objectReferenceForSpriteIndex:(unsigned int)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)oneColLayout;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })overlayInsets;
- (id)presentedDataSource;
- (id)presentedItemsGeometryForDataSource:(id)arg1;
- (id)primaryItemsLayout;
- (void)screenScaleDidChange;
- (void)setAnchorAssetReference:(id)arg1;
- (void)setEffectiveOverlayInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setOverlayInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSpec:(id)arg1;
- (bool)shouldAnimateTowardsAnchor;
- (id)spec;
- (struct { struct CGAffineTransform { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; double x_1_1_5; double x_1_1_6; } x1; double x2; })spriteTransformForLevel:(unsigned long long)arg1;
- (long long)sublayoutIndexForObjectReference:(id)arg1 options:(unsigned long long)arg2 updatedObjectReference:(out id*)arg3;
- (unsigned long long)supportedDisplayAssetPresentationStylesInLayout:(id)arg1;
- (void)update;
- (id)viewModel;
- (id)viewModel:(id)arg1 dominantAssetCollectionReferenceForZoomLevel:(long long)arg2;
- (void)visibleRectDidChange;
- (bool)wasTracking;
- (unsigned long long)zoomBehavior;

@end
