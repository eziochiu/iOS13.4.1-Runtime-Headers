/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXGReusableAccessibilityContentInfo : NSObject <PXGAccessibilityContentInfo, PXGMutableAccessibilityContentInfo, PXReusableObject> {
    <PXGAccessibilityContentInfoDelegate> * _accessibilityDelegate;
    bool  _alternateUIVisible;
    <PXDisplayAsset> * _asset;
    long long  _contentKind;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frame;
    NSString * _imageName;
    bool  _isPerformingChanges;
    NSMutableArray * _mutableChildren;
    PXScrollViewController * _scrollViewController;
    bool  _selected;
    NSArray * _selectedContent;
    NSString * _subtitle;
    NSString * _text;
    NSString * _title;
    NSObject<PXAccessibilityView> * _view;
    bool  _visible;
}

@property (nonatomic) <PXGAccessibilityContentInfoDelegate> *accessibilityDelegate;
@property (nonatomic) bool alternateUIVisible;
@property (nonatomic, retain) <PXDisplayAsset> *asset;
@property (nonatomic) long long contentKind;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *imageName;
@property (nonatomic) bool isPerformingChanges;
@property (nonatomic, retain) NSMutableArray *mutableChildren;
@property (nonatomic, readonly) NSArray *px_accessibilityChildren;
@property (nonatomic, retain) PXScrollViewController *scrollViewController;
@property (nonatomic) bool selected;
@property (nonatomic, copy) NSArray *selectedContent;
@property (nonatomic, retain) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *text;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSObject<PXAccessibilityView> *view;
@property (nonatomic) bool visible;

+ (void)_assetSelectedInLayout:(id)arg1 atSpriteIndex:(unsigned int)arg2 outAsset:(out id*)arg3 outSelected:(out bool*)arg4;
+ (id)_imageNameInLayout:(id)arg1 atSpriteIndex:(unsigned int)arg2;
+ (id)_textInLayout:(id)arg1 atSpriteIndex:(unsigned int)arg2;
+ (id)_titleSubtitleInLayout:(id)arg1 atSpriteIndex:(unsigned int)arg2;

- (void).cxx_destruct;
- (bool)_fillForKind:(long long)arg1 withLayout:(id)arg2 spriteIndex:(unsigned int)arg3;
- (void)_performClassSwizzlingForContentKind:(long long)arg1;
- (id)accessibilityDelegate;
- (bool)alternateUIVisible;
- (id)asset;
- (void)becomeReusable;
- (long long)contentKind;
- (id)description;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (id)imageName;
- (id)init;
- (bool)isPerformingChanges;
- (id)mutableChildren;
- (void)performChanges:(id /* block */)arg1;
- (bool)performChangesToContentKind:(long long)arg1 withLayout:(id)arg2 spriteIndex:(unsigned int)arg3 spriteGeometry:(struct { struct { double x_1_1_1; double x_1_1_2; float x_1_1_3; } x1; })arg4;
- (void)prepareForReuse;
- (void)px_accessibilityAddChildElement:(id)arg1;
- (id)px_accessibilityChildren;
- (void)px_accessibilityRemoveAllChildren;
- (id)scrollViewController;
- (bool)selected;
- (id)selectedContent;
- (void)setAccessibilityDelegate:(id)arg1;
- (void)setAlternateUIVisible:(bool)arg1;
- (void)setAsset:(id)arg1;
- (void)setContentKind:(long long)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setImageName:(id)arg1;
- (void)setIsPerformingChanges:(bool)arg1;
- (void)setMutableChildren:(id)arg1;
- (void)setScrollViewController:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setSelectedContent:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setView:(id)arg1;
- (void)setVisible:(bool)arg1;
- (id)subtitle;
- (id)text;
- (id)title;
- (id)view;
- (bool)visible;

@end
