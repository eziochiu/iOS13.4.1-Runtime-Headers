/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXSplitViewController : UISplitViewController <UISplitViewControllerDelegate> {
    UIViewController * _contentViewController;
    bool  _inViewWillTransitionToSize;
    long long  _originalPreferredDisplayMode;
    UIViewController * _sidebarViewController;
    bool  _wantsSidebarHidden;
}

@property (nonatomic, readonly) UIViewController *contentViewController;
@property (nonatomic, readonly) UIViewController *sidebarViewController;
@property (nonatomic) bool wantsSidebarHidden;

+ (void)initialize;

- (void).cxx_destruct;
- (bool)_isDisplayModeAllVisibleAllowed;
- (void)_splitViewController:(id)arg1 didEndAnimatedTransitionToStateRequest:(id)arg2;
- (void)_splitViewController:(id)arg1 willBeginAnimatedTransitionToStateRequest:(id)arg2;
- (void)_splitViewController:(id)arg1 willUpdateDisplayModeButtonItemForTargetMode:(long long)arg2 withHidden:(bool*)arg3 image:(id*)arg4 title:(id*)arg5 showsBackButtonIndicator:(bool*)arg6;
- (id)childViewControllerForStatusBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (id)contentViewController;
- (id)initWithCoder:(id)arg1;
- (id)initWithSidebarNavigationController:(id)arg1 contentViewController:(id)arg2;
- (id)primaryViewControllerForCollapsingSplitViewController:(id)arg1;
- (id)primaryViewControllerForExpandingSplitViewController:(id)arg1;
- (void)setWantsSidebarHidden:(bool)arg1;
- (id)sidebarViewController;
- (void)splitViewController:(id)arg1 willChangeToDisplayMode:(long long)arg2;
- (long long)targetDisplayModeForActionInSplitViewController:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wantsSidebarHidden;

@end
