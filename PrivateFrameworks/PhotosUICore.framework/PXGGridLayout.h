/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
 */

@interface PXGGridLayout : PXGItemsLayout <PXCuratedLibraryAllPhotosBodyLayout, PXGDiagnosticsProvider, PXGItemsGeometry> {
    id  _anchorObjectReference;
    struct CGPoint { 
        double x; 
        double y; 
    }  _anchorViewportCenter;
    double  _aspectRatioLimit;
    bool  _canHandleVisibleRectRejection;
    long long  _contentMode;
    struct CGPoint { 
        double x; 
        double y; 
    }  _contentOrigin;
    struct { 
        union { 
            struct { 
                float topLeft; 
                float topRight; 
                float bottomLeft; 
                float bottomRight; 
            } ; 
            float byIndex[4]; 
        } ; 
    }  _edgeCornerRadius;
    bool  _enableBestCropRect;
    bool  _fillSafeAreaTopInset;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _finalInsets;
    double  _finalInterItemSpacing;
    bool  _hideIncompleteLastRow;
    double  _interItemSpacing;
    bool  _isUpdating;
    double  _itemAspectRatio;
    double  _itemCaptionSpacing;
    struct { 
        union { 
            struct { 
                float topLeft; 
                float topRight; 
                float bottomLeft; 
                float bottomRight; 
            } ; 
            float byIndex[4]; 
        } ; 
    }  _itemCornerRadius;
    struct CGSize { 
        double width; 
        double height; 
    }  _itemSize;
    bool  _loadItemsOutsideAnchorViewport;
    unsigned char  _mediaFlags;
    int  _mediaKind;
    bool  _mediaTargetSizeIgnoresSpacing;
    long long  _numberOfColumns;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _padding;
    int  _presentationType;
    long long  _style;
    struct { 
        unsigned long long needsUpdate; 
        unsigned long long updated; 
        bool isPerformingUpdate; 
    }  _updateFlags;
    long long  _visualItemShift;
}

@property (nonatomic, retain) id anchorObjectReference;
@property (nonatomic) struct CGPoint { double x1; double x2; } anchorViewportCenter;
@property (nonatomic) double aspectRatioLimit;
@property (nonatomic) bool canHandleVisibleRectRejection;
@property (nonatomic) long long contentMode;
@property (nonatomic) struct CGPoint { double x1; double x2; } contentOrigin;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *diagnosticDescription;
@property (nonatomic) struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; } edgeCornerRadius;
@property (nonatomic) bool enableBestCropRect;
@property (nonatomic) bool fillSafeAreaTopInset;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideIncompleteLastRow;
@property (nonatomic) double interItemSpacing;
@property (nonatomic) double itemAspectRatio;
@property (nonatomic) double itemCaptionSpacing;
@property (nonatomic, readonly) bool itemCaptionsVisible;
@property (nonatomic) struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; } itemCornerRadius;
@property (getter=isLazy, nonatomic) bool lazy;
@property (nonatomic) bool loadItemsOutsideAnchorViewport;
@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } loadedItems;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } loadedItemsRect;
@property (nonatomic) unsigned char mediaFlags;
@property (nonatomic) int mediaKind;
@property (nonatomic) bool mediaTargetSizeIgnoresSpacing;
@property (nonatomic) long long numberOfColumns;
@property (nonatomic, readonly) long long numberOfVisualItems;
@property (nonatomic, readonly) long long numberOfVisualRows;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } padding;
@property (nonatomic) int presentationType;
@property (nonatomic, readonly) double rowHeight;
@property (nonatomic) long long style;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsContentMode;
@property (nonatomic, readonly) long long visualItemShift;
@property (nonatomic) long long visualItemShift;

- (void).cxx_destruct;
- (struct CGPoint { double x1; double x2; })_contentPointInLayout:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_contentRectInLayout:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForItem:(long long)arg1 usingInterItemSpacing:(double)arg2 itemSize:(struct CGSize { double x1; double x2; })arg3 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg4;
- (void)_getItemSize:(struct CGSize { double x1; double x2; }*)arg1 finalInteritemSpacing:(double*)arg2 finalInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg3 forDesiredInterItemSpacing:(double)arg4 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg5;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_itemsToLoadForVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGPoint { double x1; double x2; })_layoutPointInContent:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_layoutRectInContent:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_pageAlignedRectForVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)_rowForItem:(long long)arg1;
- (void)_updateColumnsMetrics;
- (void)_updateContentSize;
- (void)_updateSpriteStyles;
- (void)_updateSprites;
- (void)alphaDidChange;
- (id)anchorObjectReference;
- (struct CGPoint { double x1; double x2; })anchorViewportCenter;
- (void)applySpriteChangeDetails:(id)arg1 countAfterChanges:(unsigned int)arg2 initialState:(id /* block */)arg3 modifyState:(id /* block */)arg4;
- (double)aspectRatioLimit;
- (bool)canHandleVisibleRectRejection;
- (long long)columnForItem:(long long)arg1;
- (long long)contentMode;
- (struct CGPoint { double x1; double x2; })contentOrigin;
- (id)description;
- (id)diagnosticDescription;
- (struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; })edgeCornerRadius;
- (bool)enableBestCropRect;
- (bool)fillSafeAreaTopInset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItem:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItem:(long long)arg1 usingInterItemSpacing:(double)arg2;
- (bool)hideIncompleteLastRow;
- (id)init;
- (double)interItemSpacing;
- (double)itemAspectRatio;
- (double)itemCaptionSpacing;
- (bool)itemCaptionsVisible;
- (long long)itemClosestTo:(struct CGPoint { double x1; double x2; })arg1;
- (long long)itemClosestToItem:(long long)arg1 inDirection:(unsigned long long)arg2;
- (struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; })itemCornerRadius;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })itemRangeForSpriteIndexRange:(struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })itemRangeInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)itemsBetweenItem:(long long)arg1 andItem:(long long)arg2;
- (id)itemsGeometry;
- (id)itemsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inLayout:(id)arg2;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })itemsToLoad;
- (bool)loadItemsOutsideAnchorViewport;
- (void)loadedItemsDidChange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })loadedItemsRect;
- (unsigned char)mediaFlags;
- (int)mediaKind;
- (bool)mediaTargetSizeIgnoresSpacing;
- (long long)numberOfColumns;
- (long long)numberOfVisualItems;
- (long long)numberOfVisualRows;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })padding;
- (int)presentationType;
- (void)referenceSizeDidChange;
- (double)rowHeight;
- (void)safeAreaInsetsDidChange;
- (void)screenScaleDidChange;
- (void)setAnchorObjectReference:(id)arg1;
- (void)setAnchorViewportCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setAspectRatioLimit:(double)arg1;
- (void)setCanHandleVisibleRectRejection:(bool)arg1;
- (void)setContentMode:(long long)arg1;
- (void)setContentOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setEdgeCornerRadius:(struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; })arg1;
- (void)setEnableBestCropRect:(bool)arg1;
- (void)setFillSafeAreaTopInset:(bool)arg1;
- (void)setHideIncompleteLastRow:(bool)arg1;
- (void)setInterItemSpacing:(double)arg1;
- (void)setItemAspectRatio:(double)arg1;
- (void)setItemCaptionSpacing:(double)arg1;
- (void)setItemCornerRadius:(struct { union { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; } x_1_1_1; float x_1_1_2[4]; } x1; })arg1;
- (void)setLoadItemsOutsideAnchorViewport:(bool)arg1;
- (void)setMediaFlags:(unsigned char)arg1;
- (void)setMediaKind:(int)arg1;
- (void)setMediaTargetSizeIgnoresSpacing:(bool)arg1;
- (void)setNumberOfColumns:(long long)arg1;
- (void)setNumberOfItems:(long long)arg1 withChangeDetails:(id)arg2 changeMediaVersionHandler:(id /* block */)arg3;
- (void)setPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPresentationType:(int)arg1;
- (void)setStyle:(long long)arg1;
- (void)setVisualItemShift:(long long)arg1;
- (bool)shiftItem:(long long)arg1 toColumn:(long long)arg2 hideIncompleteRows:(bool)arg3;
- (bool)shouldUpdateDecorationMediaTargetSizes;
- (struct CGSize { double x1; double x2; })sizeForItem:(long long)arg1;
- (unsigned int)spriteIndexForObjectReference:(id)arg1 options:(unsigned long long)arg2 updatedObjectReference:(out id*)arg3;
- (struct _PXGSpriteIndexRange { unsigned int x1; unsigned int x2; })spriteIndexRangeCoveringRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)style;
- (bool)supportsContentMode;
- (void)update;
- (void)visibleRectDidChange;
- (long long)visualItemShift;

@end
