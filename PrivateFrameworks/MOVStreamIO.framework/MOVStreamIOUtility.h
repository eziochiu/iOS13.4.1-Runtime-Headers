/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/MOVStreamIO.framework/MOVStreamIO
 */

@interface MOVStreamIOUtility : NSObject

+ (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })CGAffineTransformValueFromNSValue:(id)arg1;
+ (id)addTrackTypeInfo:(unsigned long long)arg1 toConfiguration:(id)arg2;
+ (id)addTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 toConfiguration:(id)arg2;
+ (id)audioNoneEncoderConfig;
+ (id)colorH264EncoderConfig;
+ (id)colorH264EncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)colorHEVCEncoderConfig;
+ (id)colorHEVCEncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)colorHEVCLosslessEncoderConfig;
+ (struct opaqueCMFormatDescription { }*)createL008FormatDescriptionFromCompandedRawBayerFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createL010FormatDescriptionFromL016FormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (struct opaqueCMFormatDescription { }*)createL010FormatDescriptionFromRawBayerFormatDescription:(struct opaqueCMFormatDescription { }*)arg1;
+ (id)customEncoderConfig;
+ (struct opaqueCMFormatDescription { }*)formatForPixelBuffer:(struct __CVBuffer { }*)arg1;
+ (int)getDefaultBitrateForVideoDimension:(struct { int x1; int x2; })arg1 atExpectedFramerate:(double)arg2 forEncoderType:(int)arg3;
+ (id)getJsonFriendlyCopy:(id)arg1;
+ (id)getPlistFriendlyCopyOf:(id)arg1;
+ (unsigned long long)getPreferredBytesPerRowAlignmentSize;
+ (unsigned long long)getPreferredPlaneAlignmentSize;
+ (bool)isEncoderAvailableForEncoderType:(int)arg1;
+ (bool)isEncoderAvailableWithEncoderName:(id)arg1;
+ (bool)isValidJSONObject:(id)arg1 path:(id)arg2;
+ (id)monochrome10bitHEVCLosslessEncoderConfig;
+ (id)monochrome8bitHEVCEncoderConfig;
+ (id)monochrome8bitHEVCEncoderConfigWithBitrate:(unsigned long long)arg1;
+ (id)monochrome8bitHEVCLosslessEncoderConfig;
+ (id)noneEncoderConfig;
+ (void)populateError:(id*)arg1 withLocalizedDescription:(id)arg2 andErrorCode:(long long)arg3;
+ (void)populateError:(id*)arg1 withLocalizedDescription:(id)arg2 andErrorCode:(long long)arg3 domain:(id)arg4 log:(bool)arg5;
+ (id)sampleBufferConfigWithPixelFormat:(unsigned int)arg1;
+ (id)slimEncoderConfig;
+ (id)slimXEncoderConfig;
+ (double)transformAngleFromVideoOrientation:(int)arg1;
+ (id)valueWithCGAffineTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
+ (bool)verifyExactBytesPerRow:(unsigned long long)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 pixelFormat:(unsigned int)arg4;

@end
