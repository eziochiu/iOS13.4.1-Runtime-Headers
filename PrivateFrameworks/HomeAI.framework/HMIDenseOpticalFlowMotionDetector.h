/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 */

@interface HMIDenseOpticalFlowMotionDetector : HMFObject <HMFLogging, HMIMotionDetector> {
    NSMutableArray * _frames;
    NSMutableDictionary * _maxCols;
    NSMutableDictionary * _maxRows;
    NSMutableDictionary * _minCols;
    NSMutableDictionary * _minRows;
    NSMutableArray * _quantizedFrames;
    struct CGSize { 
        double width; 
        double height; 
    }  _size;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) NSMutableArray *frames;
@property (readonly) unsigned long long hash;
@property (retain) NSMutableDictionary *maxCols;
@property (retain) NSMutableDictionary *maxRows;
@property (retain) NSMutableDictionary *minCols;
@property (retain) NSMutableDictionary *minRows;
@property (readonly) NSMutableArray *quantizedFrames;
@property (readonly) struct CGSize { double x1; double x2; } size;
@property (readonly) Class superclass;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)appendFramePixelBuffer:(struct __CVBuffer { }*)arg1 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (float)computeFlowMagnitudeMatrixFromOriginal:(struct __CVBuffer { }*)arg1 flowArray:(float*)arg2 error:(id*)arg3;
- (id)computeOpticalFlow:(struct __CVBuffer { }*)arg1 with:(struct __CVBuffer { }*)arg2 globalMotionScore:(float*)arg3;
- (long long)connectedComponentsQuantizedFrames:(id)arg1;
- (void)dealloc;
- (id)detectWithGlobalMotionScore:(float*)arg1;
- (id)frames;
- (id)initWithSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })makeRawCropRect:(id)arg1;
- (id)maxCols;
- (id)maxRows;
- (id)minCols;
- (id)minRows;
- (bool)quantizedAndBinarizeFrame:(float*)arg1 quantizedFrames:(id)arg2;
- (id)quantizedFrames;
- (void)setMaxCols:(id)arg1;
- (void)setMaxRows:(id)arg1;
- (void)setMinCols:(id)arg1;
- (void)setMinRows:(id)arg1;
- (void)setup;
- (struct CGSize { double x1; double x2; })size;
- (void)unionTheRegoins;

@end
