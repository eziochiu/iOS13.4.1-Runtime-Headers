/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 */

@interface HMIPreference : HMFObject <HMFLogging, HMFTimerDelegate> {
    HMFUnfairLock * _lock;
    NSMutableDictionary * _preferenceCache;
    HMFTimer * _preferenceCacheFlushTimer;
    NSMutableDictionary * _preferenceLoggedValues;
    NSMutableDictionary * _preferenceOverridesInternal;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMFUnfairLock *lock;
@property (nonatomic, readonly) NSMutableDictionary *preferenceCache;
@property (readonly) HMFTimer *preferenceCacheFlushTimer;
@property (nonatomic, readonly) NSMutableDictionary *preferenceLoggedValues;
@property (readonly) NSDictionary *preferenceOverrides;
@property (nonatomic, readonly) NSMutableDictionary *preferenceOverridesInternal;
@property (readonly) Class superclass;
@property (readonly) bool usesCPUOnly;

+ (bool)isProductTypeB238;
+ (bool)isProductTypeJ105;
+ (bool)isProductTypeJ42;
+ (id)logCategory;
+ (id)qosMap;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)addPreferenceOverrideFromDictionary:(id)arg1;
- (bool)boolPreferenceForKey:(id)arg1 defaultValue:(bool)arg2;
- (bool)hasPreferenceForKey:(id)arg1;
- (id)init;
- (id)lock;
- (void)logPreferenceForKey:(id)arg1 value:(id)arg2;
- (id)numberPreferenceForKey:(id)arg1 defaultValue:(id)arg2;
- (id)numberPreferenceForKey:(id)arg1 defaultValue:(id)arg2 withMap:(id)arg3;
- (id)numberPreferenceForKey:(id)arg1 defaultValue:(id)arg2 withParser:(id /* block */)arg3;
- (id)preferenceCache;
- (id)preferenceCacheFlushTimer;
- (id)preferenceLoggedValues;
- (id)preferenceOverrides;
- (id)preferenceOverridesInternal;
- (void)removeAllPreferenceOverrides;
- (void)setPreferenceOverrideFromDictionary:(id)arg1;
- (id)stringPreferenceForKey:(id)arg1 defaultValue:(id)arg2;
- (id)systemPreferenceValueForKey:(id)arg1;
- (void)timerDidFire:(id)arg1;
- (bool)usesCPUOnly;
- (id)valuePreferenceForKey:(id)arg1 defaultValue:(id)arg2 withMap:(id)arg3;
- (id)valuePreferenceForKey:(id)arg1 defaultValue:(id)arg2 withParser:(id /* block */)arg3;

@end
