/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 */

@interface HMICameraVideoAssetReader : HMFObject <AVAssetResourceLoaderDelegate, HMFLogging> {
    AVAssetReader * _assetReader;
    unsigned long long  _currentFrameId;
    NSString * _logIdentifier;
    NSObject<OS_dispatch_queue> * _resourceLoaderWorkQueue;
    HMICameraVideoFragment * _videoFragment;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, retain) AVAssetReader *assetReader;
@property unsigned long long currentFrameId;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) NSString *logIdentifier;
@property (readonly) NSObject<OS_dispatch_queue> *resourceLoaderWorkQueue;
@property (readonly) Class superclass;
@property (readonly) HMICameraVideoFragment *videoFragment;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)assetKeys;
+ (id)logCategory;
+ (id)readerForVideoFragment:(id)arg1 workQueue:(id)arg2 logIdentifier:(id)arg3;
+ (id)trackKeys;

- (void).cxx_destruct;
- (id)_didKeyValueLoadFailed:(long long)arg1;
- (void)_propertiesLoadedForAsset:(id)arg1 resultCallback:(id /* block */)arg2;
- (void)_propertiesLoadedForTrack:(id)arg1 fromAsset:(id)arg2 resultCallback:(id /* block */)arg3;
- (unsigned long long)_sequenceNumberOfFirstFragmentInAsset:(id)arg1;
- (unsigned long long)_sequenceNumberOfLastFragmentInAsset:(id)arg1;
- (bool)_validateSequentialIntegrityOfFragmentsInAsset:(id)arg1;
- (id)assetReader;
- (unsigned long long)currentFrameId;
- (id)initWithVideoFragment:(id)arg1 workQueue:(id)arg2 logIdentifier:(id)arg3;
- (id)logIdentifier;
- (bool)readNextFrame:(id*)arg1 error:(id*)arg2;
- (bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (id)resourceLoaderWorkQueue;
- (void)setAssetReader:(id)arg1;
- (void)setCurrentFrameId:(unsigned long long)arg1;
- (void)startReading:(id /* block */)arg1;
- (id)videoFragment;
- (id)workQueue;

@end
