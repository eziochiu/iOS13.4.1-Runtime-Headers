/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 */

@interface HMICameraVideoAnalyzer : HMFObject <HMFLogging> {
    bool  _analysisInProgress;
    HMICameraVideoAnalyzerConfiguration * _configuration;
    <HMICameraVideoAnalyzerDelegate> * _delegate;
    int  _flagCounts;
    HMICameraVideoAnalyzerHistory * _history;
    NSUUID * _identifier;
    bool  _inBypassMode;
    bool  _inErrorState;
    NSMutableArray * _internalPendingRequests;
    NSDate * _lastRequestSubmissionTime;
    HMFUnfairLock * _lock;
    unsigned long long  _mediaIntegritySequenceNumber;
    int  _outcomeCounts;
    HMIAnalysisService * _remoteAnalysisService;
    bool  _saveVideoFramesToDisk;
    HMICameraVideoAnalyzerScheduler * _scheduler;
    bool  _sessionEnded;
    bool  _skipSequentialMediaIntegrityCheck;
    bool  _uploadVideoAnalysisEvent;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property bool analysisInProgress;
@property (retain) HMICameraVideoAnalyzerConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription;
@property <HMICameraVideoAnalyzerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) HMICameraVideoAnalyzerHistory *history;
@property (readonly, copy) NSUUID *identifier;
@property bool inBypassMode;
@property bool inErrorState;
@property (readonly) NSMutableArray *internalPendingRequests;
@property (readonly) bool isActive;
@property (retain) NSDate *lastRequestSubmissionTime;
@property (nonatomic, readonly) HMFUnfairLock *lock;
@property unsigned long long mediaIntegritySequenceNumber;
@property (readonly) NSArray *pendingRequests;
@property (nonatomic, retain) HMIAnalysisService *remoteAnalysisService;
@property (getter=shouldSaveVideoFramesToDisk) bool saveVideoFramesToDisk;
@property (readonly) HMICameraVideoAnalyzerScheduler *scheduler;
@property bool sessionEnded;
@property (readonly) bool skipSequentialMediaIntegrityCheck;
@property (readonly) Class superclass;
@property (getter=shouldUploadVideoAnalysisEvent, readonly) bool uploadVideoAnalysisEvent;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (long long)confidenceThatEventOccurred:(long long)arg1 events:(long long)arg2 annotationScores:(id)arg3;
+ (id)logCategory;
+ (id)queryVersionInformation;

- (void).cxx_destruct;
- (id)_analyzeFrame:(id)arg1 request:(id)arg2 error:(id*)arg3;
- (void)_analyzeRequest:(id)arg1;
- (bool)_analyzeRequestFrames:(id)arg1;
- (void)_analyzeRequestFramesLocally:(id)arg1;
- (void)_analyzeRequestLocally:(id)arg1;
- (void)_analyzeRequestRemotely:(id)arg1 retryOnConnectionInterruption:(bool)arg2;
- (bool)_analyzeVideoFrame:(id)arg1 request:(id)arg2 result:(id*)arg3 error:(id*)arg4;
- (bool)_checkRequest:(id)arg1;
- (void)_enterErrorState;
- (id)_flagCountsAsString;
- (void)_handleDidAnalyzeRequest:(id)arg1;
- (void)_handleDidAnalyzeRequest:(id)arg1 withResult:(id)arg2;
- (void)_handleDidNotAnalyzeRequest:(id)arg1 resultCode:(long long)arg2;
- (void)_handleDidNotAnalyzeRequest:(id)arg1 resultCode:(long long)arg2 error:(id)arg3;
- (void)_handleDidNotAnalyzeRequest:(id)arg1 withResult:(id)arg2 error:(id)arg3;
- (void)_handleError:(long long)arg1 request:(id)arg2;
- (void)_handleError:(long long)arg1 request:(id)arg2 description:(id)arg3;
- (void)_handleError:(long long)arg1 request:(id)arg2 description:(id)arg3 underlyingError:(id)arg4;
- (void)_handleError:(long long)arg1 request:(id)arg2 underlyingError:(id)arg3;
- (void)_markPendingRequestsWithFlag:(long long)arg1;
- (void)_notifyDidAnalyzeRequest:(id)arg1 withResult:(id)arg2;
- (void)_notifyDidFailAnalysisForRequest:(id)arg1 withError:(id)arg2;
- (void)_notifyDidNotAnalyzeRequest:(id)arg1 withResult:(id)arg2;
- (id)_outcomeCountsAsString;
- (void)_predictRequest:(id)arg1;
- (void)_requestDidEnd:(id)arg1 outcome:(long long)arg2;
- (bool)_saveVideoFrame:(id)arg1 videoFragment:(id)arg2 error:(id*)arg3;
- (void)_scheduleRequest:(id)arg1;
- (void)_sendAnalyticsEventForRequest:(id)arg1 outcome:(long long)arg2 result:(id)arg3 error:(id)arg4;
- (bool)_shouldContinueAnalyzingRequest:(id)arg1 resultCode:(long long*)arg2;
- (void)_willAnalyzeRequest:(id)arg1;
- (bool)analysisInProgress;
- (void)analyzeFragment:(id)arg1;
- (void)clearPendingFragments;
- (id)configuration;
- (id)delegate;
- (id)history;
- (id)identifier;
- (bool)inBypassMode;
- (bool)inErrorState;
- (id)initWithConfiguration:(id)arg1 identifier:(id)arg2;
- (id)internalPendingRequests;
- (bool)isActive;
- (id)lastRequestSubmissionTime;
- (id)lock;
- (id)logIdentifier;
- (unsigned long long)mediaIntegritySequenceNumber;
- (id)pendingRequests;
- (unsigned long long)pendingRequestsCount;
- (void)processPendingRequests;
- (id)remoteAnalysisService;
- (id)scheduler;
- (bool)sessionEnded;
- (void)setAnalysisInProgress:(bool)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInBypassMode:(bool)arg1;
- (void)setInErrorState:(bool)arg1;
- (void)setLastRequestSubmissionTime:(id)arg1;
- (void)setMediaIntegritySequenceNumber:(unsigned long long)arg1;
- (void)setRemoteAnalysisService:(id)arg1;
- (void)setSaveVideoFramesToDisk:(bool)arg1;
- (void)setSessionEnded:(bool)arg1;
- (bool)shouldSaveVideoFramesToDisk;
- (bool)shouldUploadVideoAnalysisEvent;
- (bool)skipSequentialMediaIntegrityCheck;
- (id)workQueue;

@end
