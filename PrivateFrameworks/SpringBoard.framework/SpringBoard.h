/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SpringBoard : UISystemShellApplication <CCUIPPTHostDelegate, MCProfileConnectionObserver, RSPeerToPeerConnectionControllerDataSource, SBAVSystemControllerCacheObserver, SBBacklightControllerObserver, SBIdleTimerProviding, SBInteractiveScreenshotGestureManagerDelegate, SBModalAlertPresentationCoordinatorDelegate, SBRemoteTransientOverlaySessionManagerDelegate, SBRestartManagerDelegate, SBSpotlightTransientOverlayViewControllerDelegate, SSScreenCapturerDelegate, UIApplicationDelegate, UIStatusBarStyleDelegate_SpringBoardOnly, _UIApplicationInitializationContextFactory> {
    SBAccessibilityWindowHostingControllerServer * _accessibilityWindowHostingController;
    SBAccountStoreManager * _accountStoreController;
    long long  _activeInterfaceOrientation;
    NSMutableSet * _activeInterfaceOrientationObservers;
    NSMutableArray * _activeInterfaceOrientationOverrideStack;
    NSHashTable * _activeRemoteTransientOverlayViewProviders;
    SBAppSwitcherSystemService * _appSwitcherSystemService;
    SBApplicationAutoLaunchService * _applicationAutoLaunchService;
    SBApplicationLaunchAlertService * _applicationLaunchAlertService;
    NSMutableArray * _appsRegisteredForLockButtonEvents;
    NSMutableArray * _appsRegisteredForVolumeEvents;
    bool  _atHomescreen;
    SBFUserAuthenticationController * _authenticationController;
    bool  _batterySaverModeActive;
    NSMutableArray * _blocksAwaitingAvailableMemory;
    SBBluetoothAccessoryBatteryMonitor * _bluetoothBatteryMonitor;
    double  _bottomEdgeAmbiguousActivationMargin;
    SBCameraHardwareButton * _cameraHardwareButton;
    SBCarDoNotDisturbController * _carDoNotDisturbController;
    SBCardItemsController * _cardItemsController;
    SBCombinationHardwareButton * _combinationHardwareButton;
    int  _currentOverrides;
    NSTimer * _daylightSavingsTimer;
    NSNumberFormatter * _decimalFormatter;
    <BSInvalidatable> * _deferOrientationUpdatesForKeybagAssertion;
    bool  _determiningBootTransition;
    SBDeveloperBuildExpirationTrigger * _developerBuildExpirationTrigger;
    SBDeviceOrientationUpdateManager * _deviceOrientationManager;
    bool  _didPlayLockSound;
    NSHashTable * _disableActiveOrientationChangeAssertions;
    DNDAWDMetricsService * _dndAWDMetricsService;
    DNDNotificationsService * _dndNotificationsService;
    bool  _dontLockEver;
    bool  _expectsFaceContact;
    bool  _expectsFaceContactInLandscape;
    SBExternalDisplayManager * _externalDisplayManager;
    bool  _hasFinishedLaunching;
    unsigned int  _headsetButtonClickCount;
    double  _headsetButtonDownTime;
    id /* block */  _headsetButtonUpHandler;
    int  _headsetClickCount;
    unsigned int  _headsetDownDelayedActionPerformed;
    struct __IOHIDEvent { } * _headsetDownEvent;
    SBAppStatusBarSettingsAssertion * _hideStatusBarAssertion;
    SBHomeHardwareButton * _homeHardwareButton;
    SBHomeScreenService * _homeScreenService;
    <SBIdleTimer> * _idleTimer;
    SBIdleTimerPolicyAggregator * _idleTimerPolicyAggregator;
    unsigned int  _ignoringCurrentLockButtonPress;
    NSCountedSet * _ignoringInteractionEventsReasons;
    SBApplication * _inCallApp;
    bool  _inUserTransition;
    SBInteractiveScreenshotGestureManager * _interactiveScreenshotGestureManager;
    unsigned int  _isSeekingInMedia;
    bool  _keybagRefetchTransactionIsActive;
    SBApplication * _lastLockButtonEventRecipient;
    long long  _lastSeekRequestSource;
    long long  _lastUpdatedMirroredDisplayOrientation;
    SBLockHardwareButton * _lockHardwareButton;
    <SBFLockOutStatusProvider> * _lockOutController;
    SBLockScreenService * _lockScreenService;
    NSString * _logFile;
    long long  _mainTransientOverlayPresentationManagerInterfaceOrientation;
    SBMainWorkspace * _mainWorkspace;
    int  _mediaSeekDirection;
    NSObject<OS_dispatch_source> * _memoryPressureSource;
    unsigned int  _memoryPressureStatus;
    unsigned int  _menuButtonClickCount;
    bool  _menuButtonDown;
    SBApplication * _menuButtonInterceptApp;
    bool  _menuButtonInterceptAppEnabledForever;
    NSDate * _midnightFireDate;
    NSTimer * _midnightTimer;
    SBModalAlertPresentationCoordinator * _modalAlertPresentationCoordinator;
    SBModalUIFluidDismissGestureManager * _modalUIFluidDismissGestureManager;
    SBMousePointerManager * _mousePointerManager;
    SBNCNotificationDispatcher * _notificationDispatcher;
    int  _notifyDontAllowMediaHUDToken;
    int  _notifyDontAnimateREOToken;
    NSMutableArray * _nowLocatingApps;
    int  _nowPlayingProcessPID;
    SBApplication * _nowRecordingApp;
    SBMainDisplayInterfaceOrientationAggregator * _orientationAggregator;
    struct __GSEvent { } * _pendingDeviceOrientationChangeEventDuringStartupTransition;
    NSNumberFormatter * _percentFormatter;
    SBUserAgent * _pluginUserAgent;
    SBPressPrecedenceArbiter * _pressPrecedenceArbiter;
    SBSpuriousScreenUndimmingAssertion * _preventPowerSourceAlertsDarkBootAssertion;
    <SBProximityBacklightPolicy> * _proximityBacklightPolicy;
    SBProximitySensorManager * _proximitySensorManager;
    SBSStatusBarStyleOverridesAssertion * _recordingStatusBarStyleOverrideAssertion;
    SBRemoteAlertHandleServer * _remoteAlertHandleServer;
    SBRemoteTransientOverlaySessionManager * _remoteTransientOverlaySessionManager;
    bool  _requestingStatusBarStyleWithoutConsideringAlerts;
    SBRestartManager * _restartManager;
    NSSet * _restrictionDisabledApplications;
    int  _ringerSwitchState;
    SSScreenCapturer * _screenCapturer;
    SBScreenTimeTrackingController * _screenTimeTrackingController;
    unsigned int  _screenWasDimOnMenuDown;
    SBScreenshotManager * _screenshotManager;
    unsigned int  _screenshotWasTaken;
    struct __CFBoolean { } * _shouldDelaySleepForHeadsetClick;
    SBAppStatusBarSettingsAssertion * _showStatusBarAssertion;
    bool  _smartCoverClosed;
    SBSoftwareUpdatePasscodePolicyManager * _softwareUpdatePasscodePolicyManager;
    SBSpotlightTransientOverlayViewController * _spotlightTransientOverlayViewController;
    unsigned int  _springBoardRequestsAccelerometerEvents;
    RSPeerToPeerServerController * _stateDumpServerController;
    SBStateDumpService * _stateDumpService;
    unsigned long long  _stateDumpServiceRevision;
    SBSynchronizeCloudCriticalDataOperation * _synchronizeCloudCriticalDataOperation;
    SBSystemCursorInteractionManager * _systemCursorInteractionManager;
    SBModalAlertPresenter * _systemModalAlertPresenter;
    STStatusServer * _systemStatusServer;
    STTelephonyStateProvider * _telephonyStateProvider;
    SBTestAutomationService * _testAutomationService;
    bool  _typingActive;
    SBUIController * _uiController;
    SBUserSessionController * _userSessionController;
    SBVolumeHardwareButton * _volumeHardwareButton;
    bool  _wantsOrientationEvents;
    SBWidgetController * _widgetController;
}

@property (nonatomic, readonly) SBAccountStoreManager *accountStoreController;
@property (nonatomic, readonly) SBApplicationAutoLaunchService *applicationAutoLaunchService;
@property (nonatomic, readonly) SBApplicationLaunchAlertService *applicationLaunchAlertService;
@property (nonatomic, readonly) NSArray *appsRegisteredForLockButtonEvents;
@property (nonatomic, readonly) NSArray *appsRegisteredForVolumeEvents;
@property (nonatomic, readonly) SBFUserAuthenticationController *authenticationController;
@property (getter=isBatterySaverModeActive, nonatomic) bool batterySaverModeActive;
@property (nonatomic) double bottomEdgeAmbiguousActivationMargin;
@property (nonatomic, readonly) SBCameraHardwareButton *cameraHardwareButton;
@property (nonatomic, readonly) SBCombinationHardwareButton *combinationHardwareButton;
@property (nonatomic, retain) NSTimer *daylightSavingsTimer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SBHomeHardwareButton *homeHardwareButton;
@property (setter=_setIdleTimer:, nonatomic, retain) <SBIdleTimer> *idleTimer;
@property (nonatomic, readonly) SBIdleTimerPolicyAggregator *idleTimerPolicyAggregator;
@property (nonatomic, readonly) SBInteractiveScreenshotGestureManager *interactiveScreenshotGestureManager;
@property (nonatomic, readonly) SBApplication *leastRecentlyForegroundLocatingApp;
@property (nonatomic, readonly) SBLockHardwareButton *lockHardwareButton;
@property (nonatomic, readonly) <SBFLockOutStatusProvider> *lockOutController;
@property (nonatomic, readonly) SBLockScreenService *lockScreenService;
@property (nonatomic, readonly) SBModalAlertPresentationCoordinator *modalAlertPresentationCoordinator;
@property (nonatomic, readonly) SBNCNotificationDispatcher *notificationDispatcher;
@property (nonatomic, retain) NSMutableArray *nowLocatingApps;
@property (nonatomic) int nowPlayingProcessPID;
@property (nonatomic, readonly) SBMainDisplayInterfaceOrientationAggregator *orientationAggregator;
@property (nonatomic, readonly) <SBUIUserAgent> *pluginUserAgent;
@property (nonatomic, readonly) SBProximitySensorManager *proximitySensorManager;
@property (nonatomic, readonly) SBRemoteTransientOverlaySessionManager *remoteTransientOverlaySessionManager;
@property (nonatomic, readonly) SBRestartManager *restartManager;
@property (nonatomic, readonly) int ringerSwitchState;
@property (nonatomic, readonly) SBScreenshotManager *screenshotManager;
@property (nonatomic, readonly) SBSoftwareUpdatePasscodePolicyManager *softwareUpdatePasscodePolicyManager;
@property (nonatomic, retain) RSPeerToPeerServerController *stateDumpServerController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) SBSystemCursorInteractionManager *systemCursorInteractionManager;
@property (nonatomic, readonly) STStatusServer *systemStatusServer;
@property (nonatomic, readonly) STTelephonyStateProvider *telephonyStateProvider;
@property (getter=isTypingActive, nonatomic) bool typingActive;
@property (nonatomic, readonly) SBUserSessionController *userSessionController;
@property (nonatomic, readonly) SBVolumeHardwareButton *volumeHardwareButton;
@property (nonatomic, readonly) bool wantsOrientationEvents;
@property (nonatomic, readonly) SBWidgetController *widgetController;
@property (nonatomic, retain) UIWindow *window;

+ (id)_defaultSceneIdentity;
+ (id)_newApplicationInitializationContext;
+ (void)initializeSystemServicesBeforeApplicationDidFinishLaunching;

- (void).cxx_destruct;
- (bool)__handleHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (double)_accessibilityActivationAnimationStartDelay;
- (void)_accessibilityActivationAnimationWillBegin;
- (double)_accessibilityDeactivationAnimationStartDelay;
- (void)_accessibilityDeactivationAnimationWillBegin;
- (id)_accessibilityFrontMostApplication;
- (bool)_accessibilityIsSystemGestureActive;
- (bool)_accessibilityObjectWithinProximity;
- (id)_accessibilityRunningApplications;
- (void)_accessibilitySetSystemGesturesDisabledByAccessibility:(bool)arg1;
- (bool)_accessibilityShouldAllowAppLaunch;
- (bool)_accessibilityShouldAllowIconLaunch;
- (bool)_accessibilitySystemGesturesDisabledByAccessibility;
- (id)_accessibilityTopDisplay;
- (void)_activateSafariWithCompletion:(id /* block */)arg1;
- (void)_adjustDaylightSavingsTimerAfterSleep;
- (void)_adjustMidnightTimerAfterSleep;
- (void)_adjustSignificantTimersAfterSleep;
- (id)_appIconsToPutInFolderForTest;
- (void)_application:(id)arg1 statusBarTouchesEnded:(id)arg2;
- (void)_applicationOpenURL:(id)arg1 withApplication:(id)arg2 animating:(bool)arg3 activationSettings:(id)arg4 origin:(id)arg5 withResult:(id /* block */)arg6;
- (id)_applicationToUseForOpenAndCloseTesting;
- (id)_applicationToUseForScrollTesting;
- (void)_basicRotationTestForCurrentConfigurationWithTeardown:(id /* block */)arg1;
- (void)_batterySaverModeChanged:(int)arg1;
- (void)_bringUpCoverSheetWithBeforePresent:(id /* block */)arg1 afterPresent:(id /* block */)arg2 beforeDismiss:(id /* block */)arg3 afterDismiss:(id /* block */)arg4;
- (void)_broadcastStateCaptureToConnectedRemotePeers:(id)arg1;
- (void)_caseLatchWantsToAttemptLock;
- (long long)_classicMode;
- (void)_cleanUpLaunchTestState;
- (void)_cleanupMainWorkspaceForMedusaTestWithCompletion:(id /* block */)arg1;
- (id)_combinedListViewController;
- (void)_continueRunningDismissAppSwitcherTestWithCompletion:(id /* block */)arg1;
- (void)_continueRunningScrollAppSwitcherTest:(id)arg1 runColdTest:(bool)arg2 completion:(id /* block */)arg3;
- (id)_coverSheetBringUpEventStream;
- (void)_createInitialAppScene;
- (long long)_currentNonFlatDeviceOrientation;
- (id)_dashBoardCombinedListViewController;
- (id)_dashBoardControllerForTesting;
- (id)_dashBoardTodayControllerForTestingIfExists;
- (void)_daylightSavingsTimeChanged;
- (void)_deactivateReachability;
- (id)_defaultExpirationComponents;
- (void)_disableRemoteStateDumpWithCompletion:(id /* block */)arg1;
- (void)_dismissSpotlightByHomeButtonEvent:(id /* block */)arg1;
- (id)_doubleHomeButtonPressEventStream;
- (void)_dumpLoggingStateCaptureWithCompletion:(id /* block */)arg1;
- (id)_dumpStateCaptureData;
- (void)_enableRemoteStateDumpWithTimeout:(long long)arg1 withCompletion:(id /* block */)arg2;
- (void)_enqueueWorkspaceEvent:(id /* block */)arg1 withName:(id)arg2 ifSatisfiesCondition:(id /* block */)arg3 cancelingEventsWithNames:(id)arg4 failureBlock:(id /* block */)arg5;
- (id)_flickTimingFunction;
- (void)_forceRotateToOrientation:(long long)arg1 withCompletion:(id /* block */)arg2;
- (bool)_frontBoardWantsKeyboardSceneLayerOrderedIntoScene;
- (long long)_frontMostAppOrientation;
- (void)_handleApplicationExit:(id)arg1;
- (void)_handleCommandQ:(id)arg1;
- (void)_handleCommandTab:(id)arg1;
- (void)_handleDeviceOrientationChangedEvent:(struct __GSEvent { }*)arg1;
- (void)_handleEndOfScrollingTest;
- (void)_handleGotoHomeScreenShortcut:(id)arg1;
- (void)_handleHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)_handleLockShortcut:(id)arg1;
- (bool)_handlePhysicalButtonEvent:(id)arg1;
- (void)_handleScreenShotShortcut:(id)arg1;
- (void)_handleShiftCommandTab:(id)arg1;
- (void)_handleShutDownAndReboot;
- (void)_handleSnapshotButtonHIDEvent:(struct __IOHIDEvent { }*)arg1 buttonIsDown:(bool)arg2 fromSource:(int)arg3;
- (bool)_handleStatusBarHoverActionForRegion:(long long)arg1;
- (bool)_hasForegroundAppWithPID:(int)arg1;
- (void)_headsetButtonDown:(struct __IOHIDEvent { }*)arg1;
- (void)_headsetButtonUp:(struct __IOHIDEvent { }*)arg1;
- (id)_homeScreenTodayViewEventStreamWithDismissal:(bool)arg1;
- (void)_iapExtendedModeReset;
- (void)_iapServerConnectionDiedNotification:(id)arg1;
- (void)_initializeAndStartObservingDefaultsIfNecessary;
- (void)_initializeDeferredItems;
- (void)_installSwitcherModelForSwitcherTests;
- (bool)_isDim;
- (bool)_isRemoteStateDumpEnabled;
- (id)_keyWindowForScreen:(id)arg1;
- (void)_keyboardAvailabilityChanged;
- (void)_keyboardOrCaseLatchWantsToAttemptUnlock:(int)arg1;
- (void)_launchFullscreenApplication:(id)arg1 withLaunchResult:(id /* block */)arg2 transactionCompletion:(id /* block */)arg3;
- (id)_leadingNotificationRequest;
- (void)_localeChanged;
- (void)_lockdownActivationChanged:(id)arg1;
- (void)_logReliabilityInfoForEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_medusaTestWithName:(id)arg1 testOptions:(id)arg2;
- (void)_midnightPassed;
- (void)_nowPlayingAppDidChangeNotification:(id)arg1;
- (void)_openURLCore:(id)arg1 display:(id)arg2 animating:(bool)arg3 activationSettings:(id)arg4 origin:(id)arg5 withResult:(id /* block */)arg6;
- (void)_pauseWithComposer:(id)arg1 locations:(struct CGPoint { double x1; double x2; }*)arg2 touchCount:(unsigned long long)arg3;
- (void)_performAfterDelay:(double)arg1 block:(id /* block */)arg2;
- (void)_performArcSwipeWithComposer:(id)arg1;
- (void)_performDeferredLaunchWork;
- (void)_performDelayedHeadsetClickTimeout;
- (void)_performExpandingCoalescedBundleForNotificationRequest:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_performFiveFingerScrunchWithComposer:(id)arg1 scrunchProgress:(double)arg2 duration:(double)arg3 withContinuationBlock:(id /* block */)arg4;
- (void)_performFourFingerSwipeWithComposer:(id)arg1 vertically:(bool)arg2 duration:(double)arg3;
- (void)_performMainWorkspaceTransitionWithPrimaryWorkspaceEntity:(id)arg1 sideWorkspaceEntity:(id)arg2 floatingWorkspaceEntity:(id)arg3 spaceConfiguration:(long long)arg4 floatingConfiguration:(long long)arg5 animated:(bool)arg6 completion:(id /* block */)arg7;
- (void)_performMultiFingerDragWithComposer:(id)arg1 startLocations:(struct CGPoint { double x1; double x2; }*)arg2 endLocations:(struct CGPoint { double x1; double x2; }*)arg3 touchCount:(unsigned long long)arg4 duration:(double)arg5 timingFunction:(id)arg6 startWithTouchDown:(bool)arg7 intermediateTransformer:(id /* block */)arg8 completion:(id /* block */)arg9;
- (void)_performNotificationPublishingWithCount:(unsigned long long)arg1 uniqueThreadCount:(unsigned long long)arg2 withCompletion:(id /* block */)arg3;
- (void)_performRestackingExpandedBundleForNotificationRequest:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_performScrunchAndSwipeWithComposer:(id)arg1;
- (void)_performSwipeHomeWithComposer:(id)arg1;
- (void)_performSwipeWithComposer:(id)arg1 startLocation:(struct CGPoint { double x1; double x2; })arg2 endLocation:(struct CGPoint { double x1; double x2; })arg3 duration:(double)arg4;
- (void)_performSwipeWithComposer:(id)arg1 startLocation:(struct CGPoint { double x1; double x2; })arg2 endLocation:(struct CGPoint { double x1; double x2; })arg3 duration:(double)arg4 timingFunction:(id)arg5 intermediateTransformer:(id /* block */)arg6 completion:(id /* block */)arg7;
- (void)_postActiveInterfaceOrientationChangedNotificationAnimated:(bool)arg1;
- (void)_postSpringBoardSignificantTimeChangedNotificationWithLogMessage:(id)arg1;
- (void)_preheatScreenshotsWithPresentationOptions:(id)arg1;
- (void)_prepareToRunAutoPiPTestWithCompletion:(id /* block */)arg1;
- (void)_prepareToRunSwitcherGestureTestsFromHomeScreen:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)_prepareToRunSwitcherGestureTestsWithCompletion:(id /* block */)arg1;
- (void)_prepareToRunSwitcherGestureTestsWithForegroundApp:(id)arg1 shouldStartTest:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)_publishFakeThreadedLockScreenNotificationsWithCount:(unsigned long long)arg1 uniqueThreadCount:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_pullDownToSpotlightForView:(id)arg1 offset:(double)arg2 duration:(double)arg3 completion:(id /* block */)arg4;
- (void)_registerForAVSystemControllerNotifications;
- (void)_removeAllFakeNotifications;
- (void)_removeRecordingStatusBarStyleOverrideAssertion;
- (void)_removeTransientActiveInterfaceOrientationOverrideForReason:(id)arg1;
- (void)_resetForceRotate;
- (void)_retryLaunchTestWithOptions:(id)arg1;
- (void)_returnToHomeScreenWithCompletion:(id /* block */)arg1;
- (void)_returnToHomescreenWithCompletion:(id /* block */)arg1;
- (void)_ringerChanged:(struct __IOHIDEvent { }*)arg1;
- (void)_rotateFromPortrait:(id /* block */)arg1 toLandscape:(id /* block */)arg2 andFromLandscape:(id /* block */)arg3 andBackToPortrait:(id /* block */)arg4;
- (void)_rotateView:(id)arg1 toOrientation:(long long)arg2;
- (void)_rotationCompletion:(id)arg1;
- (void)_runAppOpen:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)_runAppSearchDismiss;
- (void)_runAppSearchPresent;
- (void)_runAppSwitcherBringupTestOverApp:(bool)arg1 rotated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_runAppSwitcherDismissTestOverApp:(bool)arg1 rotated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_runArcSwipeMultipleAppsTest;
- (void)_runArcSwipeTestFromHomeScreen:(bool)arg1;
- (void)_runAutoPiPWithGestureTest:(id /* block */)arg1;
- (void)_runBannerTestWithBlock:(id /* block */)arg1;
- (void)_runBottomEdgeSwipeMultipleAppsTest;
- (void)_runBottomEdgeSwipeTestFromHomeScreen:(bool)arg1;
- (void)_runClearLongLookTest;
- (void)_runCoverSheetDismissTestWithCompletion:(id /* block */)arg1;
- (void)_runCoverSheetDismissToSafariTest;
- (void)_runCoverSheetNotificationListHistoryRevealTest;
- (void)_runCoverSheetPresentOverSafariTest;
- (void)_runCoverSheetPresentTestWithCompletion:(id /* block */)arg1;
- (void)_runCoverSheetTestPresenting:(bool)arg1;
- (void)_runCoverSheetTestPresenting:(bool)arg1 completion:(id /* block */)arg2;
- (void)_runDashBoardDismissFromPasscodeViewAfterAuthenticationTest;
- (void)_runDashBoardDismissFromTodayViewWhileAuthenticatedTest;
- (void)_runDashBoardDismissTestFromPageIndex:(unsigned long long)arg1 showPasscodeView:(bool)arg2;
- (void)_runDashBoardDismissWhileAuthenticatedTest;
- (void)_runDashBoardPresentDismissPasscode;
- (void)_runDashBoardRotateCameraPage;
- (void)_runDashBoardRotateMainPage;
- (void)_runDashBoardRotateTodayViewPage;
- (void)_runDashBoardRotationTestOnPageAtIndex:(unsigned long long)arg1;
- (void)_runDashBoardRotationTestOnPageAtIndex:(unsigned long long)arg1 showSpotlight:(bool)arg2;
- (void)_runDashBoardScrollFromLeftToRightPageTestWithBlur:(bool)arg1;
- (void)_runDashBoardScrollTestFromPageIndex:(unsigned long long)arg1 toPageWithIndex:(unsigned long long)arg2 subTestName:(id)arg3 backSubTestName:(id)arg4 withBlur:(bool)arg5;
- (void)_runDashBoardScrollToLeftPageTestWithBlur:(bool)arg1;
- (void)_runDashBoardScrollToRightPageTestWithBlur:(bool)arg1;
- (void)_runDashboardTodayViewScrollWidgetsTestWithOptions:(id)arg1;
- (void)_runDismissContinuityBannerInSwitcherTest;
- (void)_runDoSiDoTest;
- (void)_runFloatingDockPresent:(bool)arg1 testName:(id)arg2;
- (void)_runFourFingerSwipeMultipleAppsTest;
- (void)_runFourFingerSwipeTest;
- (void)_runHomeScreenIconPullToSpotlight;
- (void)_runHomeScreenIconPullToSpotlightDismiss;
- (void)_runHomeScreenSearchDismiss;
- (void)_runHomeScreenSearchPresent;
- (void)_runHomeScreenSwipeLeftToTodayView;
- (void)_runHomeScreenSwipeRightFromTodayView;
- (void)_runLockScreenScrollNotificationsTestWithOptions:(id)arg1;
- (void)_runLockScreenTodayViewPullDownToSpotlight;
- (void)_runLockScreenTodayViewPullDownToSpotlightDismiss;
- (void)_runMedusaMoveFloatingApplicationTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaPinFloatingApplicationTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaSplitViewResizeTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaSplitViewSuspendTest:(id)arg1 withOptions:(id)arg2;
- (void)_runMedusaTest:(id)arg1 withMainWorkspaceTransition:(id /* block */)arg2 options:(id)arg3;
- (void)_runMedusaUnpinFloatingApplicationTest:(id)arg1 withOptions:(id)arg2;
- (void)_runNotificationCoalescingExpandingScrollingTestWithOptions:(id)arg1;
- (void)_runNotificationCoalescingExpandingTestWithOptions:(id)arg1;
- (void)_runNotificationCoalescingRestackingFromBottomTestWithOptions:(id)arg1;
- (void)_runNotificationCoalescingRestackingTestWithOptions:(id)arg1;
- (void)_runPresentBannerTest;
- (void)_runPresentContinuityBannerInSwitcherTest;
- (void)_runPresentLongLookTest;
- (void)_runReParkLongLookTest;
- (void)_runScrollAppSwitcherLandscapeTest:(id)arg1 overApp:(bool)arg2 completion:(id /* block */)arg3;
- (void)_runScrollAppSwitcherTest:(id)arg1 overApp:(bool)arg2 completion:(id /* block */)arg3;
- (void)_runScrollIconListTestEditing:(bool)arg1;
- (void)_runScrollTestWithScrollView:(id)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (void)_runScrunchAndSwipeMultipleAppsTest;
- (void)_runScrunchAndSwipeTest;
- (void)_runScrunchHomeToAutoPiPTest;
- (void)_runScrunchToAppSwitcherTest;
- (void)_runScrunchToHomeTest;
- (void)_runSiriBringUpImmediateBeepTest:(id)arg1;
- (void)_runSiriBringUpTest:(id)arg1 testOptions:(id)arg2;
- (void)_runSpotlightCoverSheetTodayViewRotation;
- (void)_runSpotlightPulldownRotation;
- (void)_runSpotlightTodayViewRotation;
- (void)_runSwipeAndPauseForSwitcherOverFolderTest;
- (void)_runSwipeAndPauseForSwitcherTestFromHomeScreen:(bool)arg1 completion:(id /* block */)arg2;
- (void)_runSwipeToHomeOverFolderTest;
- (void)_runSwipeToHomeTestWithCompletion:(id /* block */)arg1;
- (void)_runSwipeUpHomeToAutoPiPTest;
- (void)_runTapContinuityBannerInSwitcherTest;
- (void)_runTestWithVariableFinish:(id /* block */)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (void)_runTodayViewFocusSearchFieldToSpotlight;
- (void)_runTodayViewPullDownToSpotlight;
- (void)_runTodayViewScrollWidgetsTestWithOptions:(id)arg1;
- (void)_runToggleSearchTest;
- (void)_runWidgetLaunchTestNamed:(id)arg1 options:(id)arg2;
- (void)_setAmbiguousControlCenterActivationMargin:(double)arg1;
- (void)_setDeferredHeadsetButtonDownEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_setDeviceOrientation:(long long)arg1 animated:(bool)arg2 logMessage:(id)arg3;
- (void)_setIdleTimer:(id)arg1;
- (void)_setReachabilitySupported:(bool)arg1;
- (void)_setStatusBarOrientation:(long long)arg1 animated:(bool)arg2 logMessage:(id)arg3;
- (void)_setStatusBarOrientation:(long long)arg1 logMessage:(id)arg2;
- (void)_setStatusBarShowsProgress:(bool)arg1;
- (id)_settingLanguageStringForNewLanguage;
- (void)_setupKeyboardAnimationSubTestsForTestName:(id)arg1;
- (void)_setupMainWorkspaceForMedusaTestWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (void)_setupNotificationListTest;
- (bool)_shouldPendAlertsForTest:(id)arg1;
- (bool)_shouldSwallowHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)_significantTimeChangeNotificationReceived;
- (void)_significantTimeDidChange:(bool)arg1;
- (void)_simulateHomeButtonPress;
- (void)_simulateHomeButtonPressWithCompletion:(id /* block */)arg1;
- (void)_simulateLockButtonPress;
- (void)_simulateUserScrollForNotificationListWithCount:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (id)_singleHomeButtonPressEventStream;
- (void)_smartCoverDidClose:(struct __IOHIDEvent { }*)arg1;
- (void)_smartCoverDidOpen:(struct __IOHIDEvent { }*)arg1;
- (void)_smartCoverMightHaveOpened:(struct __IOHIDEvent { }*)arg1;
- (void)_startAutoPiPWithGesture:(id /* block */)arg1 setupCompletion:(id /* block */)arg2 finalCompletion:(id /* block */)arg3;
- (void)_startBulletinBoardServer;
- (void)_startScrollAppSwitcherTest:(id)arg1 overApp:(bool)arg2 runColdTest:(bool)arg3 completion:(id /* block */)arg4;
- (void)_startSeekWithDirection:(id)arg1;
- (bool)_statusBarOrientationFollowsWindow:(id)arg1;
- (void)_takeScreenshotAndEdit:(bool)arg1;
- (void)_takeScreenshotWithOptionsCollection:(id)arg1 presentationOptions:(id)arg2;
- (long long)_testOrientation:(id)arg1 options:(id)arg2;
- (void)_toggleFloatingDockVisibility:(id)arg1;
- (void)_toggleSearch;
- (void)_turnScreenOnAndAuthenticateWithCompletion:(id /* block */)arg1;
- (void)_turnScreenOnAndUnlockWithCompletion:(id /* block */)arg1;
- (void)_turnScreenOnOnDashBoardWithCompletion:(id /* block */)arg1;
- (void)_unlockAnimationDidFinish:(id)arg1;
- (void)_unscatterWillBegin:(id)arg1;
- (void)_updateHomeScreenPresenceNotification:(id)arg1;
- (void)_updateOrientationDetectionSettings;
- (void)_updateRecordingPID:(int)arg1;
- (void)_updateRingerState:(int)arg1 withVisuals:(bool)arg2 updatePreferenceRegister:(bool)arg3;
- (void)_waitForCloudCriticalData;
- (id)_windowForSystemAppButtonEventsForScreen:(id)arg1;
- (id)accountStoreController;
- (long long)activeInterfaceOrientation;
- (long long)activeInterfaceOrientationWithoutConsideringTransientOverlays;
- (void)addActiveOrientationObserver:(id)arg1;
- (void)addDisableActiveInterfaceOrientationChangeAssertion:(id)arg1;
- (void)addInCallApp:(id)arg1;
- (void)addNowLocatingApp:(id)arg1;
- (long long)alertInterfaceOrientation;
- (bool)allowCaseLatchLockAndUnlock;
- (id)allowedRemotePeerDisplayNames;
- (bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (id)applicationAutoLaunchService;
- (void)applicationDidFinishLaunching:(id)arg1;
- (id)applicationLaunchAlertService;
- (void)applicationOpenURL:(id)arg1;
- (void)applicationOpenURL:(id)arg1 withApplication:(id)arg2 animating:(bool)arg3 activationSettings:(id)arg4 origin:(id)arg5 notifyLSOnFailure:(bool)arg6 withResult:(id /* block */)arg7;
- (id)appsRegisteredForLockButtonEvents;
- (id)appsRegisteredForVolumeEvents;
- (void)assistantDidAppear:(id)arg1;
- (void)assistantWillAppear:(id)arg1;
- (id)authenticationController;
- (void)backlightController:(id)arg1 willAnimateBacklightToFactor:(float)arg2 source:(long long)arg3;
- (void)batteryStatusDidChange:(id)arg1;
- (void)beginIgnoringInteractionEvents;
- (void)beginIgnoringInteractionEventsForReason:(id)arg1;
- (double)bottomEdgeAmbiguousActivationMargin;
- (void)cache:(id)arg1 didUpdateActiveAudioRoute:(id)arg2;
- (void)cache:(id)arg1 didUpdateRecordingPID:(int)arg2;
- (id)cameraHardwareButton;
- (bool)canOpenURL:(id)arg1;
- (bool)canShowLockScreenCameraGrabber;
- (bool)caseIsEnabledAndLatched;
- (id)combinationHardwareButton;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)daylightSavingsTimer;
- (id)debugDescription;
- (long long)deviceOrientationForDeferredUpdateIfAny;
- (id)deviceOrientationUpdateDeferralAssertionWithReason:(id)arg1;
- (void)didDismissMiniAlert;
- (void)didReceiveMemoryWarning;
- (bool)disablesFrontBoardImplicitWindowScenes;
- (void)endIgnoringInteractionEvents;
- (void)endIgnoringInteractionEventsForReason:(id)arg1;
- (void)endLaunchTest;
- (bool)expectsFaceContact;
- (bool)expectsFaceContactInLandscape;
- (void)failedTest:(id)arg1 withResults:(id)arg2;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3 withTeardownBlock:(id /* block */)arg4;
- (id)formattedDecimalStringForNumber:(id)arg1;
- (id)formattedPercentStringForNumber:(id)arg1;
- (void)frontDisplayDidChange:(id)arg1;
- (bool)handleDoubleHeightStatusBarTapWithStyleOverride:(int)arg1;
- (void)handleKeyHIDEvent:(struct __IOHIDEvent { }*)arg1;
- (void)handleLockButtonPressFromTransientOverlayViewController:(id)arg1;
- (void)handleSignal:(int)arg1;
- (bool)handleStatusBarHoverActionForRegion:(long long)arg1;
- (bool)hasDisableActiveInterfaceOrientationChangeAssertions;
- (bool)hasFinishedLaunching;
- (id)homeHardwareButton;
- (long long)homeScreenRotationStyle;
- (bool)homeScreenRotationStyleWantsUIKitRotation;
- (bool)homeScreenSupportsRotation;
- (bool)iapIsInExtendedMode;
- (id)idleTimer;
- (id)idleTimerPolicyAggregator;
- (id)inCallApp;
- (id)init;
- (void)installNotificationObserverForNotificationName:(id)arg1 forOneNotification:(bool)arg2 usingBlock:(id /* block */)arg3;
- (id)interactiveScreenshotGestureManager;
- (void)interactiveScreenshotGestureManager:(id)arg1 requestsScreenshotPreheatWithPresentationOptions:(id)arg2;
- (void)interactiveScreenshotGestureManager:(id)arg1 requestsScreenshotWithOptionsCollection:(id)arg2 presentationOptions:(id)arg3;
- (long long)interfaceOrientationForCurrentDeviceOrientation:(bool)arg1;
- (bool)isBatterySaverModeActive;
- (bool)isBundleIdentifierRestrictionDisabled:(id)arg1;
- (bool)isCurrentlyDeferringOrientationUpdates;
- (bool)isDeterminingBootTransition;
- (bool)isKeybagRefetchTransactionActive;
- (bool)isLocked;
- (bool)isNowPlayingAppPlaying;
- (bool)isShowingHomescreen;
- (bool)isSpringBoardStatusBarHidden;
- (bool)isTypingActive;
- (id)keyCommands;
- (void)languageChanged;
- (bool)launchApplicationWithIdentifier:(id)arg1 suspended:(bool)arg2;
- (void)launchMusicPlayerSuspended;
- (bool)launchedForUserTransition;
- (id)leastRecentlyForegroundLocatingApp;
- (id)localPeerDisplayName;
- (void)localeChanged;
- (id)lockHardwareButton;
- (id)lockOutController;
- (bool)lockScreenCameraSupported;
- (id)lockScreenService;
- (id)menuButtonInterceptApp;
- (bool)menuButtonInterceptAppEnabledForever;
- (id)modalAlertPresentationCoordinator;
- (void)modalAlertPresentationCoordinator:(id)arg1 didChangeShowingSystemModalAlert:(bool)arg2;
- (id)modalAlertPresentationCoordinatorRequestedForegroundScenes:(id)arg1;
- (void)noteBacklightFadeFinished;
- (void)noteBacklightLevelChanged;
- (void)noteCaseHardwarePresent;
- (void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 logMessage:(id)arg3;
- (void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 updateMirroredDisplays:(bool)arg3 force:(bool)arg4 logMessage:(id)arg5;
- (void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 updateMirroredDisplays:(bool)arg3 logMessage:(id)arg4;
- (void)noteInterfaceOrientationChanged:(long long)arg1 force:(bool)arg2 logMessage:(id)arg3;
- (void)noteInterfaceOrientationChanged:(long long)arg1 logMessage:(id)arg2;
- (void)noteKeybagRefetchTransactionIsActive:(bool)arg1;
- (void)noteMainTransientOverlayPresentationManagerWillChangeToInterfaceOrientation:(long long)arg1;
- (void)noteSceneLayoutDidUpdateOnDisplayWithIdentity:(id)arg1;
- (void)noteSubstantialTransitionOccured;
- (id)notificationDispatcher;
- (void)nowLocatingAppDidEnterForeground:(id)arg1;
- (id)nowLocatingApps;
- (int)nowPlayingProcessPID;
- (id)nowRecordingApp;
- (id)orientationAggregator;
- (id)pluginUserAgent;
- (void)popTransientActiveInterfaceOrientationForReason:(id)arg1;
- (void)prepareForControlCenterPPTHostState:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(id)arg1 userInfo:(id)arg2;
- (id)proximitySensorManager;
- (void)pushTransientActiveInterfaceOrientation:(long long)arg1 forReason:(id)arg2;
- (long long)rawDeviceOrientationIgnoringOrientationLocks;
- (void)registerAnalyticsEventHandlers;
- (void)registerRemoteAlertSceneViewProvider:(id)arg1;
- (id)remoteTransientOverlaySessionManager;
- (long long)remoteTransientOverlaySessionManager:(id)arg1 activeWallpaperVariantForSession:(id)arg2;
- (bool)remoteTransientOverlaySessionManager:(id)arg1 performDismissalRequest:(id)arg2 forSession:(id)arg3;
- (bool)remoteTransientOverlaySessionManager:(id)arg1 performPresentationRequest:(id)arg2 forSession:(id)arg3;
- (bool)remoteTransientOverlaySessionManager:(id)arg1 prefersStatusBarActivityItemVisibleForServiceBundleIdentifier:(id)arg2 forSession:(id)arg3;
- (void)remoteTransientOverlaySessionManager:(id)arg1 requestsHandlingForButtonEvents:(unsigned long long)arg2 forSession:(id)arg3 viewController:(id)arg4;
- (bool)remoteTransientOverlaySessionManager:(id)arg1 shouldActivateOverlayWithContext:(id)arg2 forSession:(id)arg3;
- (void)removeActiveOrientationObserver:(id)arg1;
- (void)removeDisableActiveInterfaceOrientationChangeAssertion:(id)arg1 nudgeOrientationIfRemovingLast:(bool)arg2;
- (void)removeInCallApp;
- (void)removeNowLocatingApp:(id)arg1;
- (void)requestDeviceUnlock;
- (void)resetIdleTimerAndUndim;
- (id)restartManager;
- (void)restartManager:(id)arg1 willRestartWithTransitionRequest:(id)arg2;
- (void)restartManagerExitImminent:(id)arg1;
- (void)restartManagerWillReboot:(id)arg1;
- (void)restartManagerWillShutdown:(id)arg1;
- (int)ringerSwitchState;
- (void)rotateIfNeeded:(long long)arg1 completion:(id /* block */)arg2;
- (void)runFieldTestScript;
- (void)runFolderRotationTest:(int)arg1;
- (void)runHomeScreenRotationIterationWithRemainingIterations:(int)arg1 completionHandler:(id /* block */)arg2;
- (void)runHomeScreenRotationTest:(int)arg1;
- (bool)runTest:(id)arg1 options:(id)arg2;
- (void)screenCapturer:(id)arg1 didCaptureScreenshotsOfScreens:(id)arg2;
- (id)screenshotManager;
- (void)setAppRegisteredForLockButtonEvents:(id)arg1 isActive:(bool)arg2;
- (void)setAppRegisteredForVolumeEvents:(id)arg1 isActive:(bool)arg2;
- (void)setBatterySaverModeActive:(bool)arg1;
- (void)setBottomEdgeAmbiguousActivationMargin:(double)arg1;
- (void)setDaylightSavingsTimer:(id)arg1;
- (void)setExpectsFaceContact:(bool)arg1;
- (void)setExpectsFaceContact:(bool)arg1 inLandscape:(bool)arg2;
- (void)setMenuButtonInterceptApp:(id)arg1 forever:(bool)arg2;
- (void)setNextAssistantRecognitionStrings:(id)arg1;
- (id)setNextVoiceRecognitionAudioInputPaths:(id)arg1;
- (void)setNowLocatingApps:(id)arg1;
- (void)setNowPlayingInfo:(id)arg1 forProcessWithPID:(int)arg2;
- (void)setNowPlayingProcessPID:(int)arg1;
- (void)setStateDumpServerController:(id)arg1;
- (void)setSuspensionAnimationDelay:(double)arg1;
- (void)setSystemVolumeHUDEnabled:(bool)arg1 forAudioCategory:(id)arg2;
- (void)setTypingActive:(bool)arg1;
- (void)setUpDaylightSavingsTimer;
- (void)setWantsOrientationEvents:(bool)arg1 logMessage:(id)arg2;
- (void)setWantsVolumeButtonEvents:(bool)arg1;
- (void)setupMidnightTimer;
- (bool)shouldNeverLock;
- (bool)shouldShowAlertForUnhandledURL:(id)arg1 error:(int)arg2;
- (void)showAlertForUnhandledURL:(id)arg1 error:(int)arg2;
- (void)significantTimeChange;
- (bool)smartCoverIsClosed;
- (id)softwareUpdatePasscodePolicyManager;
- (void)spotlightTransientOverlayViewControllerDidDismiss:(id)arg1;
- (void)spotlightTransientOverlayViewControllerRequestsDismissal:(id)arg1;
- (void)startLaunchTestNamed:(id)arg1 options:(id)arg2;
- (void)startLaunchTestNamed:(id)arg1 options:(id)arg2 withCompletionBlock:(id /* block */)arg3;
- (void)startResumeTestNamed:(id)arg1 options:(id)arg2;
- (void)startedTest:(id)arg1;
- (long long)startupInterfaceOrientation;
- (id)stateDumpServerController;
- (void)stateForStateType:(unsigned long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (int)statusBar:(id)arg1 effectiveStyleOverridesForRequestedStyle:(long long)arg2 overrides:(int)arg3;
- (id)supportedStateTypes;
- (bool)supportsPortraitUpsideDownOrientation;
- (id)systemCursorInteractionManager;
- (id)systemStatusServer;
- (void)takeScreenshot;
- (id)telephonyStateProvider;
- (void)toggleSearchWithWillBeginHandler:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)transactionForDismissingSearchTransientOverlay;
- (bool)underMemoryPressure;
- (void)unregisterRemoteAlertSceneViewProvider:(id)arg1;
- (void)updateMirroredDisplayOrientationWithLogMessage:(id)arg1;
- (void)updateNativeOrientationAndMirroredDisplays:(bool)arg1 logMessage:(id)arg2;
- (void)updateNativeOrientationAnimated:(bool)arg1 logMessage:(id)arg2;
- (void)updateNativeOrientationWithLogMessage:(id)arg1;
- (void)updateNativeOrientationWithOrientation:(long long)arg1 logMessage:(id)arg2;
- (void)updateNativeOrientationWithOrientation:(long long)arg1 updateMirroredDisplays:(bool)arg2 animated:(bool)arg3 logMessage:(id)arg4;
- (id)userSessionController;
- (id)volumeHardwareButton;
- (bool)wantsOrientationEvents;
- (id)widgetController;
- (void)willDisplayMiniAlert;
- (double)windowRotationDuration;
- (void)wipeDeviceNowWithReason:(id)arg1;

@end
