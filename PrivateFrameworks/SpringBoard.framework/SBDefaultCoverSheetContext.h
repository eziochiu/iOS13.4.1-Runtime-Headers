/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBDefaultCoverSheetContext : NSObject <CSAuthenticationManaging, CSCarPlayStatusProviding, CSCoverSheetContextProviding, CSMediaControlling, CSReachabilityControlling, CSResetRestoreStatusProviding, CSSystemCursorInteractionManaging, CSTelephonyStatusProviding, CSTodayOverlayProviding, CSTouchEnvironmentStatusProviding, CSUnlockRequesting, CSUserSessionControlling, CSWallpaperLogging> {
    <CSApplicationInforming> * _applicationInformer;
    <SBFAuthenticationAssertionProviding> * _authenticationAssertionProvider;
    <SBFAuthenticationStatusProvider> * _authenticationStatusProvider;
    <SBUIBiometricResource> * _biometricResource;
    <SBFActionProviding> * _contentActionProvider;
    <SBFDateProviding> * _dateProvider;
    <CSHomeAffordanceControlling> * _homeAffordanceController;
    <CSLegibilityProviding> * _legibilityProvider;
    <SBFLockOutStatusProvider> * _lockOutStatusProvider;
    <CSModalHomeAffordanceControlling> * _modalHomeAffordanceController;
    SBDashBoardNotificationPresenter * _notificationPresenter;
    <SBFPasscodeFieldChangeObserver> * _passcodeFieldChangeObserver;
    NSString * _powerStatusChangeNotificationName;
    <CSPowerStatusProviding> * _powerStatusProvider;
    <CSScreenStateProviding> * _screenStateProvider;
    <SBFScreenWakeAnimationControlling> * _screenWakeAnimationController;
    <CSStatusBarControlling> * _statusBarController;
    SBSyncController * _syncController;
    <CSThermalStatusProviding> * _thermalStatusProvider;
    SBWallpaperAggdLogger * _wallpaperAggdLogger;
    <CSWallpaperViewProviding> * _wallpaperViewProvider;
}

@property (nonatomic, readonly) <CSApplicationInforming> *applicationInformer;
@property (nonatomic, readonly) <SBFAuthenticationAssertionProviding> *authenticationAssertionProvider;
@property (nonatomic, readonly) <CSAuthenticationManaging> *authenticationManager;
@property (nonatomic, readonly) <SBFAuthenticationStatusProvider> *authenticationStatusProvider;
@property (nonatomic, readonly) <SBUIBiometricResource> *biometricResource;
@property (getter=isCarPlayActiveForNotifications, nonatomic, readonly) bool carPlayActiveForNotifications;
@property (nonatomic, readonly) <CSCarPlayStatusProviding> *carPlayStatusProvider;
@property (nonatomic, readonly) <SBFActionProviding> *contentActionProvider;
@property (nonatomic, readonly) <SBFDateProviding> *dateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSArray *dismissableOverlays;
@property (nonatomic, readonly) bool expectsPocketTouches;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <CSHomeAffordanceControlling> *homeAffordanceController;
@property (nonatomic, readonly) <CSLegibilityProviding> *legibilityProvider;
@property (nonatomic, readonly) <SBFLockOutStatusProvider> *lockOutStatusProvider;
@property (getter=isLogoutSupported, nonatomic, readonly) bool logoutSupported;
@property (nonatomic, readonly) <CSMediaControlling> *mediaController;
@property (nonatomic, readonly) <CSModalHomeAffordanceControlling> *modalHomeAffordanceController;
@property (nonatomic, readonly) <CSNotificationPresenting> *notificationPresenter;
@property (nonatomic, readonly) <SBFPasscodeFieldChangeObserver> *passcodeFieldChangeObserver;
@property (nonatomic, readonly, copy) NSString *powerStatusChangeNotificationName;
@property (nonatomic, readonly) <CSPowerStatusProviding> *powerStatusProvider;
@property (nonatomic, readonly) <CSReachabilityControlling> *reachabilityController;
@property (nonatomic, readonly) <CSResetRestoreStatusProviding> *resetRestoreStatusProvider;
@property (nonatomic, readonly) long long resetState;
@property (getter=isResetting, nonatomic, readonly) bool resetting;
@property (nonatomic, readonly) long long restoreState;
@property (getter=isRestoring, nonatomic, readonly) bool restoring;
@property (nonatomic, readonly) <CSScreenStateProviding> *screenStateProvider;
@property (nonatomic, readonly) <SBFScreenWakeAnimationControlling> *screenWakeAnimationController;
@property (nonatomic, readonly) <CSStatusBarControlling> *statusBarController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <CSSystemCursorInteractionManaging> *systemCursorInterationManager;
@property (nonatomic, readonly) <CSTelephonyStatusProviding> *telephonyStatusProvider;
@property (nonatomic, readonly) <CSThermalStatusProviding> *thermalStatusProvider;
@property (nonatomic, readonly) <CSTodayOverlayProviding> *todayOverlayProvider;
@property (nonatomic, readonly) <CSTouchEnvironmentStatusProviding> *touchEnvironmentStatusProvider;
@property (nonatomic, readonly) <CSUnlockRequesting> *unlockRequester;
@property (nonatomic, readonly) <CSUserSessionControlling> *userSessionController;
@property (nonatomic, readonly) <CSWallpaperLogging> *wallpaperLogger;
@property (nonatomic, readonly) <CSWallpaperViewProviding> *wallpaperViewProvider;
@property (nonatomic, readonly) bool wantsTodayOverlay;

- (void).cxx_destruct;
- (id)applicationInformer;
- (void)attemptUnlockWithPasscode:(id)arg1 finishUIUnlock:(bool)arg2 completion:(id /* block */)arg3;
- (id)authenticationAssertionProvider;
- (id)authenticationManager;
- (id)authenticationStatusProvider;
- (id)biometricResource;
- (id)carPlayStatusProvider;
- (id)contentActionProvider;
- (id)createUnlockRequest;
- (id)createUnlockRequestForActionContext:(id)arg1;
- (id)dateProvider;
- (void)deactivateReachability;
- (id)dismissableOverlays;
- (bool)expectsPocketTouches;
- (id)homeAffordanceController;
- (void)incrementIrisPlayCount;
- (id)init;
- (bool)isCarPlayActiveForNotifications;
- (bool)isEmergencyCallSupported;
- (bool)isLogoutSupported;
- (bool)isResetting;
- (bool)isRestoring;
- (id)legibilityProvider;
- (id)lockOutStatusProvider;
- (void)logout;
- (id)mediaController;
- (id)modalHomeAffordanceController;
- (id)newTodayOverlayController;
- (id)notificationPresenter;
- (id)passcodeFieldChangeObserver;
- (id)powerStatusChangeNotificationName;
- (id)powerStatusProvider;
- (id)reachabilityController;
- (void)registerView:(id)arg1 delegate:(id)arg2;
- (id)resetRestoreStatusProvider;
- (long long)resetState;
- (long long)restoreState;
- (id)screenStateProvider;
- (id)screenWakeAnimationController;
- (void)setBiometricAutoUnlockingDisabled:(bool)arg1 forReason:(id)arg2;
- (void)setPasscodeVisible:(bool)arg1 animated:(bool)arg2;
- (id)statusBarController;
- (void)stopMediaPlaybackForSource:(long long)arg1;
- (id)systemCursorInterationManager;
- (id)telephonyStatusProvider;
- (id)thermalStatusProvider;
- (id)todayOverlayProvider;
- (id)touchEnvironmentStatusProvider;
- (id)unlockRequester;
- (void)unlockWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)unregisterView:(id)arg1;
- (id)userSessionController;
- (id)wallpaperLogger;
- (id)wallpaperViewProvider;
- (bool)wantsTodayOverlay;

@end
