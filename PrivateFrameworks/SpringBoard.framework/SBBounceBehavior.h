/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBBounceBehavior : UIDynamicBehavior <UICollisionBehaviorDelegate> {
    UIDynamicItemBehavior * _bodyBehavior;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _boundaryInsets;
    UICollisionBehavior * _collisionBehavior;
    double  _completionThreshold;
    UIAttachmentBehavior * _draggingBehavior;
    double  _elasticity;
    double  _friction;
    double  _gravity;
    UIGravityBehavior * _gravityBehavior;
    _UIEdgeFeedbackGenerator * _hapticGenerator;
    <UIDynamicItem> * _item;
    double  _maxVelocityAssistance;
    double  _maxVelocityToAssist;
    double  _midwayPosition;
    double  _minVelocityToAssist;
    double  _previousLinearVelocity;
    double  _previousPreviousLinearVelocity;
    UIDynamicItemBehavior * _pushBehavior;
    double  _resistance;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _targetFrame;
    double  _velocity;
}

@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } boundaryInsets;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double elasticity;
@property (nonatomic) double friction;
@property (nonatomic) double gravity;
@property (nonatomic, retain) _UIEdgeFeedbackGenerator *hapticGenerator;
@property (readonly) unsigned long long hash;
@property (nonatomic) double maxVelocityAssistance;
@property (nonatomic) double maxVelocityToAssist;
@property (nonatomic) double minVelocityToAssist;
@property (nonatomic) double resistance;
@property (readonly) Class superclass;
@property (nonatomic) double velocity;

- (void).cxx_destruct;
- (double)_adjustedVelocity:(double)arg1;
- (void)_beginInteraction;
- (void)_frameCollisionBoundaryPoints:(struct CGPoint { double x1; double x2; }*)arg1;
- (bool)_isGravityDown;
- (bool)_itemCompleted;
- (double)_itemOriginY;
- (bool)_itemPastMidway;
- (bool)_itemStopped;
- (double)_maxVelocityToAssist;
- (double)_minVelocityToAssist;
- (double)_percentComplete;
- (double)_percentRemaining;
- (void)_removeDraggingBehavior;
- (void)_setupCollisionBoundaries;
- (bool)_shouldAssistWithVelocity:(double)arg1;
- (double)_velocityAssistance;
- (bool)allowsAnimatorToStop;
- (void)bounce;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })boundaryInsets;
- (void)collisionBehavior:(id)arg1 beganContactForItem:(id)arg2 withBoundaryIdentifier:(id)arg3 atPoint:(struct CGPoint { double x1; double x2; })arg4;
- (double)elasticity;
- (void)finishInteraction;
- (void)finishInteractionWithVelocity:(struct CGPoint { double x1; double x2; })arg1;
- (void)finishInteractionWithVelocity:(struct CGPoint { double x1; double x2; })arg1 removingGravityAtMidway:(bool)arg2;
- (double)friction;
- (double)gravity;
- (id)hapticGenerator;
- (id)initWithItem:(id)arg1;
- (id)initWithItem:(id)arg1 targetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 feedbackGenerator:(id)arg3;
- (void)initiateInteractionFromPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)isActive;
- (double)maxVelocityAssistance;
- (double)maxVelocityToAssist;
- (double)minVelocityToAssist;
- (double)resistance;
- (void)setBoundaryInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setElasticity:(double)arg1;
- (void)setFriction:(double)arg1;
- (void)setGravity:(double)arg1;
- (void)setHapticGenerator:(id)arg1;
- (void)setMaxVelocityAssistance:(double)arg1;
- (void)setMaxVelocityToAssist:(double)arg1;
- (void)setMinVelocityToAssist:(double)arg1;
- (void)setResistance:(double)arg1;
- (void)setVelocity:(double)arg1;
- (void)updateInteractionWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (double)velocity;

@end
