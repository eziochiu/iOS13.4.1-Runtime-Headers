/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBSceneLayoutViewController : UIViewController <BSDescriptionProviding, SBDisplayLayoutContext, SBLayoutStateTransitionObserver, SBLayoutStateTransitionSceneEntityFrameProvider, SBSceneViewPresentationConfiguring> {
    <SBSceneLayoutViewControllerDelegate> * _delegate;
    FBDisplayLayoutTransition * _displayLayoutTransition;
    bool  _elementViewControllerUpdatesSuspended;
    NSMutableSet * _elementViewControllerUpdatesSuspensionReasons;
    FBDisplayLayoutElement * _homescreenLayoutElement;
    NSMutableDictionary * _layoutElementControllersByRole;
    NSMutableDictionary * _previousLayoutElementControllersByRole;
    SBWorkspaceApplicationSceneTransitionContext * _previousSuccessfulTransitionContext;
    NSMutableDictionary * _reusableLayoutElementControllers;
    UIView * _sceneContainerView;
    SBSceneManager * _sceneManager;
    SBWorkspaceApplicationSceneTransitionContext * _transitionContext;
    SBLayoutState * _transitioningFromLayoutState;
    SBLayoutState * _transitioningToLayoutState;
    bool  _userResizing;
}

@property (getter=_isCurrentlyRotating, nonatomic, readonly) bool _currentlyRotating;
@property (getter=_isCurrentlyTransitioning, nonatomic, readonly) bool _currentlyTransitioning;
@property (nonatomic, readonly) long long _layoutOrientation;
@property (nonatomic, readonly) SBWorkspaceApplicationSceneTransitionContext *_previousSuccessfulTransitionContext;
@property (nonatomic, readonly) SBWorkspaceApplicationSceneTransitionContext *_transitionContext;
@property (nonatomic, readonly, copy) NSArray *_transitioningAppViewControllers;
@property (nonatomic, readonly) long long _transitioningFromLayoutOrientation;
@property (nonatomic, readonly) SBLayoutState *_transitioningFromLayoutState;
@property (nonatomic, readonly, copy) NSArray *_transitioningLayoutElementControllers;
@property (nonatomic, readonly) long long _transitioningToLayoutOrientation;
@property (nonatomic, readonly) SBLayoutState *_transitioningToLayoutState;
@property (nonatomic, readonly) NSArray *appViewControllers;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBSceneLayoutViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) FBSDisplayIdentity *displayIdentity;
@property (getter=_areElementViewControllerUpdatesSuspended, setter=_setElementViewControllerUpdatesSuspended:, nonatomic) bool elementViewControllerUpdatesSuspended;
@property (nonatomic, readonly) bool hasVisibleElements;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *layoutElementControllers;
@property (nonatomic, readonly) SBLayoutState *layoutState;
@property (nonatomic, readonly) UIView *sceneContainerView;
@property (nonatomic, readonly) SBSceneManager *sceneManager;
@property (readonly) Class superclass;
@property (getter=isUserResizing, nonatomic) bool userResizing;

+ (id)mainDisplaySceneLayoutViewController;
+ (id)sceneLayoutViewControllerForDisplayIdentity:(id)arg1;

- (void).cxx_destruct;
- (void)_addLayoutElementViewController:(id)arg1 forLayoutElement:(id)arg2 entity:(id)arg3;
- (id)_animationWrapperViewForElement:(id)arg1 entity:(id)arg2 layoutState:(id)arg3;
- (bool)_areElementViewControllerUpdatesSuspended;
- (void)_beginLayoutStateTransitionWithTransitionContext:(id)arg1;
- (void)_cleanupDisappearedLayoutElementController:(id)arg1;
- (void)_configureVisibilityForCurrentLayoutState;
- (id)_dequeueLayoutElementControllerForReuseOfClass:(Class)arg1;
- (id)_displayConfiguration;
- (void)_doCommonCleanupUponEndingLayoutTransitionWithInterruption:(bool)arg1;
- (void)_endLayoutStateTransitionForFailure;
- (void)_endLayoutStateTransitionWithInterruption:(bool)arg1;
- (void)_enqueueLayoutViewControllerForReuse:(id)arg1;
- (void)_invalidate;
- (bool)_isCurrentlyRotating;
- (bool)_isCurrentlyTransitioning;
- (bool)_isLayoutElementViewControllerOccluded:(id)arg1;
- (id)_layoutElementControllerForLayoutRole:(long long)arg1;
- (long long)_layoutOrientation;
- (long long)_overrideWindowActiveInterfaceOrientation;
- (id)_previousLayoutElementControllerWithElementIdentifier:(id)arg1;
- (id)_previousSuccessfulTransitionContext;
- (void)_setElementViewControllerUpdatesSuspended:(bool)arg1;
- (bool)_shouldAdjustViewAffordancesAfterTransition;
- (bool)_shouldConsiderHomeScreenAsActive;
- (bool)_shouldRepositionViewAfterTransition;
- (bool)_shouldRotateToLayoutOrientation:(long long)arg1;
- (id)_transitionContext;
- (id)_transitioningAppViewControllers;
- (id)_transitioningFromLayoutElementControllerForLayoutRole:(long long)arg1;
- (long long)_transitioningFromLayoutOrientation;
- (id)_transitioningFromLayoutState;
- (id)_transitioningLayoutElementControllers;
- (long long)_transitioningToLayoutOrientation;
- (id)_transitioningToLayoutState;
- (void)_updateAuxiliaryViews;
- (void)_verifyLayoutElementControllersAreValidForCurrentLayoutState;
- (void)_willEndLayoutStateTransition;
- (id)animationControllerForRotatingWithTransitionRequest:(id)arg1;
- (id)animationControllerForTransitionRequest:(id)arg1;
- (id)animationWrapperViewForLayoutState:(id)arg1 roleMask:(unsigned long long)arg2 interfaceOrientation:(long long)arg3;
- (id)animationWrapperViewForLayoutState:(id)arg1 roleMask:(unsigned long long)arg2 interfaceOrientation:(long long)arg3 maskDisplayCorners:(bool)arg4;
- (id)appViewControllers;
- (id)appViewForWorkspaceEntity:(id)arg1 inLayoutRole:(long long)arg2 withLayoutState:(id)arg3;
- (id)appViewForWorkspaceEntity:(id)arg1 inLayoutRole:(long long)arg2 withLayoutState:(id)arg3 hostRequester:(id)arg4;
- (struct CGPoint { double x1; double x2; })convertPointFromInterfaceOrientationCoordinateSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })convertPointToInterfaceOrientationCoordinateSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectFromInterfaceOrientationCoordinateSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })convertRectToInterfaceOrientationCoordinateSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)coordinateSpace;
- (id)coordinateSpaceForInterfaceOrientation:(long long)arg1;
- (id)coordinateSpaceForLayoutElement:(id)arg1 layoutState:(id)arg2;
- (id)coordinateSpaceForLayoutState:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)displayIdentity;
- (bool)hasVisibleElements;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithSceneManager:(id)arg1;
- (bool)isUserResizing;
- (id)layoutElementControllers;
- (id)layoutState;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidBeginWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidEndWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionWillEndWithTransitionContext:(id)arg2;
- (void)loadView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceFrameForEntity:(id)arg1 inLayoutState:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceFrameForUniqueIdentifier:(id)arg1 inLayoutState:(id)arg2;
- (id)sceneContainerView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sceneEntityFrameForWorkspaceEntity:(id)arg1 inLayoutState:(id)arg2;
- (id)sceneManager;
- (id)sceneViewPresentationIdentifier:(id)arg1;
- (long long)sceneViewPresentationPriority:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setUserResizing:(bool)arg1;
- (bool)shouldAutorotate;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (unsigned long long)supportedInterfaceOrientations;

@end
