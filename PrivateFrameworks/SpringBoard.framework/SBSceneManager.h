/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBSceneManager : NSObject <BSDescriptionProviding, BSInvalidatable, FBSceneDelegate, FBSceneManagerDelegate_Private, FBSceneManagerObserver, SBApplicationSceneHandleProviding, SBSceneLayoutSlaveTransactionProviding, SBSceneLayoutViewControllerDelegate> {
    BSCopyingCacheSet * _allScenes;
    NSCountedSet * _assertedBackgroundScenes;
    SBLayoutState * _currentLayoutState;
    BSCopyingCacheSet * _daemonScenes;
    BSCopyingCacheSet * _externalApplicationSceneHandles;
    BSCopyingCacheSet * _externalForegroundApplicationSceneHandles;
    bool  _hidden;
    NSMutableSet * _incomingSnapshots;
    bool  _layoutControllerCreationReentrancyGuard;
    bool  _layoutControllerHasVisibleElements;
    SBLayoutStateManager * _layoutStateManager;
    SBLayoutStateTransitionCoordinator * _layoutStateTransitionCoordinator;
    NSHashTable * _observers;
    NSMutableSet * _outgoingSnapshots;
    NSMapTable * _persistentMapSceneIdentityToSceneHandle;
    BSCopyingCacheSet * _pluginScenes;
    SBPolicyAggregator * _policyAggregator;
    BSCopyingCacheSet * _reportedExternalForegroundApplicationSceneHandles;
    UIRootWindowScenePresentationBinder * _rootWindowScenePresentationBinder;
    SBSceneLayoutViewController * _sceneLayoutViewController;
    FBSceneManager * _sceneManager;
    SBSceneManagerReference * _selfReference;
    NSMutableSet * _slaveTransactionProviders;
    long long  _state;
    NSMapTable * _transientMapSceneIdentityToSceneHandle;
    SBSceneLayoutWindow * _window;
    BSCopyingCacheSet * _windowScenes;
    BSCopyingCacheSet * _workspaceScenes;
}

@property (nonatomic, readonly) SBLayoutStateManager *_layoutStateManager;
@property (nonatomic, readonly) SBLayoutStateTransitionCoordinator *_layoutStateTransitionCoordinator;
@property (nonatomic, retain) SBLayoutState *currentLayoutState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) FBSDisplayIdentity *displayIdentity;
@property (readonly) unsigned long long hash;
@property (getter=isHidden, nonatomic) bool hidden;
@property (nonatomic, readonly) SBPolicyAggregator *policyAggregator;
@property (nonatomic, readonly) SBSceneLayoutViewController *sceneLayoutViewController;
@property (readonly) Class superclass;
@property (getter=isValid, nonatomic, readonly) bool valid;
@property (nonatomic, readonly) SBSceneLayoutWindow *window;

+ (Class)_applicationSceneHandleClass;
+ (Class)_layoutStateManagerClass;
+ (Class)_sceneLayoutWindowClass;

- (void).cxx_destruct;
- (void)_addReportedForegroundExternalApplicationSceneHandle:(id)arg1;
- (id)_createRootWindowScenePresentationBinder;
- (void)_doObserverCalloutWithBlock:(id /* block */)arg1;
- (id)_fetchOrCreateApplicationSceneHandleForApplication:(id)arg1 withIdentity:(id)arg2 orScene:(id)arg3;
- (bool)_handleAction:(id)arg1 forScene:(id)arg2;
- (id)_layoutStateManager;
- (id)_layoutStateTransitionCoordinator;
- (id)_newSceneLayoutViewController;
- (void)_noteDidChangeToVisibility:(unsigned long long)arg1 previouslyExisted:(bool)arg2 forScene:(id)arg3;
- (void)_noteDidCommitUpdateForScene:(id)arg1;
- (void)_noteObserversDidInvalidate;
- (void)_removeReportedForegroundExternalApplicationSceneHandle:(id)arg1;
- (void)_scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (void)_scene:(id)arg1 interceptUpdateWithNewSettings:(id)arg2;
- (void)_scene:(id)arg1 willUpdateWithSettings:(id)arg2 transitionContext:(id)arg3;
- (id)_sceneIdentifierForBundleIdentifier:(id)arg1;
- (id)_sceneWindowLayoutStrategy;
- (void)_setupLayoutStateTransitionCoordinator:(id)arg1;
- (bool)_shouldAutoHostScene:(id)arg1;
- (bool)_shouldFenceTransitionForScene:(id)arg1 updatedClientSettingsDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (bool)_shouldRequestSnapshotActionsForScene:(id)arg1;
- (bool)_shouldTrackScenesForDeactivation;
- (id)_snapshotRequestsForSceneHandle:(id)arg1 settings:(id)arg2;
- (void)_updateStateForScene:(id)arg1 withSettings:(id)arg2;
- (bool)_windowShouldBeHidden;
- (void)addObserver:(id)arg1;
- (void)addSlaveTransactionProvider:(id)arg1;
- (id)allScenes;
- (id)assertBackgroundedStatusForScenes:(id)arg1;
- (id)currentLayoutState;
- (id)daemonScenes;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (id)displayIdentity;
- (id)existingSceneHandleForPersistenceIdentifier:(id)arg1;
- (id)existingSceneHandleForScene:(id)arg1;
- (id)existingSceneHandleForSceneIdentity:(id)arg1;
- (id)externalApplicationSceneHandles;
- (id)externalForegroundApplicationSceneHandles;
- (id)fetchOrCreateApplicationSceneHandleForApplication:(id)arg1 withIdentity:(id)arg2;
- (id)init;
- (id)initWithReference:(id)arg1;
- (void)invalidate;
- (bool)isHidden;
- (bool)isValid;
- (id)newSceneIdentityForApplication:(id)arg1;
- (id)pluginScenes;
- (id)policyAggregator;
- (void)removeObserver:(id)arg1;
- (void)removeSlaveTransactionProvider:(id)arg1;
- (void)scene:(id)arg1 didApplyUpdateWithContext:(id)arg2;
- (void)scene:(id)arg1 didCompleteUpdateWithContext:(id)arg2 error:(id)arg3;
- (void)scene:(id)arg1 didPrepareUpdateWithContext:(id)arg2;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4;
- (id)sceneIdentityForApplication:(id)arg1;
- (id)sceneIdentityForApplication:(id)arg1 excludingIdentifiers:(id)arg2;
- (id)sceneIdentityForApplication:(id)arg1 targetContentIdentifier:(id)arg2;
- (id)sceneIdentityForApplication:(id)arg1 uniqueIdentifier:(id)arg2;
- (id)sceneIdentityForApplication:(id)arg1 uniqueIdentifier:(id)arg2 targetContentIdentifier:(id)arg3;
- (void)sceneLayoutController:(id)arg1 noteHasVisibleElements:(bool)arg2;
- (id)sceneLayoutViewController;
- (id)sceneManager:(id)arg1 createDefaultTransitionContextForScene:(id)arg2;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 interceptUpdateForScene:(id)arg2 withNewSettings:(id)arg3;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (id)scenesForWorkspaceWithID:(id)arg1;
- (void)setCurrentLayoutState:(id)arg1;
- (void)setHidden:(bool)arg1;
- (id)slaveTransactionsForTransitionRequest:(id)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)transientApplicationSceneHandleIdentityForApplication:(id)arg1;
- (id)window;
- (id)windowScenes;

@end
