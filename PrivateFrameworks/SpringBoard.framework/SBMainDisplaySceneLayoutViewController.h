/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBMainDisplaySceneLayoutViewController : SBSceneLayoutViewController <PTSettingsKeyObserver, SBDeviceApplicationSceneStatusBarBreadcrumbProviderObserver, SBMainDisplaySceneLayoutStatusBarViewDataSource, SBSceneHandleObserver, SBSystemCursorInteractionDelegate, TFBetaLaunchHandleActivationDelegate> {
    bool  __preventsCornerRadiusUpdate;
    NSMutableSet * _activeBetaLaunchHandles;
    NSObject<OS_dispatch_queue> * _betaLaunchUIActivationQueue;
    UIApplicationSceneClientSettingsDiffInspector * _clientSettingsInspector;
    UIView * _contentView;
    SBOrientationTransformWrapperView * _contentWrapperView;
    SBMainDisplaySceneLayoutGestureManager * _gestureManager;
    NSLayoutConstraint * _homeGrabberBottomConstraint;
    NSLayoutConstraint * _homeGrabberLeftConstraint;
    NSLayoutConstraint * _homeGrabberRightConstraint;
    SBHomeGrabberRotationView * _homeGrabberRotationView;
    SBFHomeGrabberSettings * _homeGrabberSettings;
    NSLayoutConstraint * _homeGrabberTopConstraint;
    bool  _isKeyboardShowing;
    NSString * _keyboardFocusSceneID;
    SBKeyboardHomeAffordanceAssertion * _keyboardHomeAffordanceAssertion;
    id  _keyboardWillChangeFrameObserver;
    FBScene * _medusaKeyboardScene;
    SBMedusaSettings * _medusaSettings;
    unsigned long long  _nubStyle;
    NSMutableSet * _pushPopTransformReasons;
    NSMutableSet * _pushPopWallpaperReasons;
    <BSInvalidatable> * _pushPopWallpaperRequireAssertion;
    SBSceneHandleBlockObserver * _sceneHandleObserver;
    SBSeparatorView * _separatorView;
    double  _separatorViewAlpha;
    double  _separatorViewKeyboardMargin;
    bool  _showsPushInWallpaper;
    SBMainDisplaySceneLayoutStatusBarView * _statusBarView;
}

@property (nonatomic, readonly) SBHomeGrabberView *_activeHomeGrabberView;
@property (setter=_setNubStyle:, nonatomic) unsigned long long _nubStyle;
@property (setter=_setPreventsCornerRadiusUpdate:, nonatomic) bool _preventsCornerRadiusUpdate;
@property (nonatomic, readonly) UIView *_separatorView;
@property (setter=_setSeparatorViewAlpha:, nonatomic) double _separatorViewAlpha;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _separatorViewHitTestFrame;
@property (nonatomic, readonly) double _separatorViewWidth;
@property (nonatomic, readonly, copy) NSArray *_transitioningAppViewControllers;
@property (nonatomic, readonly) SBMainDisplayLayoutState *_transitioningFromLayoutState;
@property (nonatomic, readonly) SBMainDisplayLayoutState *_transitioningToLayoutState;
@property (nonatomic, readonly) NSArray *appViewControllers;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SBHomeGrabberRotationView *homeGrabberRotationView;
@property (getter=_keyboardFocusSceneID, setter=_setKeyboardFocusSceneID:, nonatomic, copy) NSString *keyboardFocusSceneID;
@property (nonatomic, readonly) SBMainDisplayLayoutState *layoutState;
@property (nonatomic, retain) <BSInvalidatable> *pushPopWallpaperRequireAssertion;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_activeHomeGrabberView;
- (void)_addLayoutElementViewController:(id)arg1 forLayoutElement:(id)arg2 entity:(id)arg3;
- (void)_addSingleSceneForTransitionRequest:(id)arg1 completion:(id /* block */)arg2;
- (unsigned int)_anchorEdgeForLayoutRole:(long long)arg1;
- (unsigned int)_anchorEdgeForLayoutRole:(long long)arg1 inInterfaceOrientation:(long long)arg2;
- (id)_animationWrapperViewForElement:(id)arg1 entity:(id)arg2 layoutState:(id)arg3;
- (id)_applicationSceneLayoutElementControllerForLayoutRole:(long long)arg1;
- (void)_beginLayoutStateTransitionWithTransitionContext:(id)arg1;
- (void)_beginRequiringPushedInWallpaperForReason:(id)arg1 animationFactory:(id)arg2;
- (void)_configureHomeGrabberForLayoutStateTransition;
- (void)_configureHomeGrabberForSettingsChangeWithDiff:(id)arg1 transitionContext:(id)arg2;
- (unsigned int)_convertAnchorEdge:(unsigned int)arg1 toLayoutOrientation:(long long)arg2;
- (struct CGPoint { double x1; double x2; })_convertPointFromContentViewCoordinateSpaceToReferenceCoordinateSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })_convertPointFromReferenceCoordinateSpaceToContentViewCoordinateSpace:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertRectFromContentViewCoordinateSpaceToReferenceCoordinateSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_convertRectFromReferenceCoordinateSpaceToContentViewCoordinateSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_convertTransformFromContentViewCoordinateSpaceToReferenceCoordinateSpace:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_convertTransformFromReferenceCoordinateSpaceToContentViewCoordinateSpace:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (id)_createFadeOutInlineOverlayWithTransitionRequest:(id)arg1;
- (void)_createOrDestroyHomeGrabberRotationViewIfNecessary;
- (id)_createSlideOverAndFadeElementOffscreenWithTransitionRequest:(id)arg1;
- (id)_createSplitAnimationControllerWithTransitionRequest:(id)arg1;
- (id)_createStatusBarWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 interfaceOrientation:(long long)arg2 reason:(id)arg3;
- (id)_displayConfiguration;
- (void)_doCommonCleanupUponEndingLayoutTransitionWithInterruption:(bool)arg1;
- (void)_endRequiringPushedInWallpaperForReason:(id)arg1 animationFactory:(id)arg2;
- (void)_fadeOutInlineOverlayForTransitionRequest:(id)arg1 completion:(id /* block */)arg2;
- (id)_inlineAppExposeOverlayForLayoutRole:(long long)arg1;
- (bool)_isCurrentlyRotating;
- (bool)_isEdgeProtectedForHomeGestureAtEdgeLocation:(double)arg1;
- (bool)_isLayoutElementViewControllerOccluded:(id)arg1;
- (bool)_isStatusBarHidden;
- (bool)_isTransitioningNoninteractivelyFromAppToApp;
- (id)_jiggleAppAnimationControllerForTransitionRequest:(id)arg1;
- (id)_keyboardFocusSceneID;
- (bool)_keyboardIsSuppressedForMedusaKeyboardScene;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (id)_layoutElementForSceneWithIdentifier:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_layoutFrameForLayoutRole:(long long)arg1 inLayoutState:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_layoutFrameForSize:(struct CGSize { double x1; double x2; })arg1 withRole:(long long)arg2 inInterfaceOrientation:(long long)arg3 frameOptions:(unsigned long long)arg4;
- (long long)_layoutRoleForSceneWithIdentifier:(id)arg1;
- (struct CGSize { double x1; double x2; })_layoutSizeForLayoutRole:(long long)arg1 spaceConfiguration:(long long)arg2 interfaceOrientation:(long long)arg3 frameOptions:(unsigned long long)arg4;
- (struct CGSize { double x1; double x2; })_layoutSizeForLayoutRole:(long long)arg1 spaceConfiguration:(long long)arg2 layoutState:(id)arg3;
- (unsigned int)_layoutSpaceAnchorEdgeForLayoutRole:(long long)arg1;
- (double)_layoutWidthForLayoutRole:(long long)arg1 inSpaceConfiguration:(long long)arg2 interfaceOrientation:(long long)arg3;
- (id)_leadingStatusBarStyleRequest;
- (id)_medusaKeyboardSceneHandle;
- (void)_noteKeyboardIsForMedusaWithOwningScene:(id)arg1;
- (void)_noteKeyboardIsNotForMedusa;
- (unsigned long long)_nubStyle;
- (void)_orderFrontLayoutElementViewController:(id)arg1;
- (void)_orderFrontLayoutElementViewControllerForLayoutRole:(long long)arg1;
- (void)_orderFrontOverlayViews;
- (long long)_overrideInterfaceOrientationMechanics;
- (void)_performJiggleHintAnimationForApplicationSceneHandle:(id)arg1 completion:(id /* block */)arg2;
- (void)_popOutForReason:(id)arg1 animationFactory:(id)arg2;
- (bool)_preventsCornerRadiusUpdate;
- (void)_pushInForReason:(id)arg1 animationFactory:(id)arg2;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_pushedInTransform;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_referenceFrameForLayoutElement:(id)arg1 inLayoutState:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_referenceFrameForLayoutRole:(long long)arg1 spaceConfiguration:(long long)arg2 interfaceOrientation:(long long)arg3 frameOptions:(unsigned long long)arg4;
- (id)_removeAppAnimationControllerWithTransitionRequest:(id)arg1;
- (void)_removeAppForTransitionRequest:(id)arg1 completion:(id /* block */)arg2;
- (id)_replaceSingleAppAnimationControllerWithTransitionRequest:(id)arg1;
- (void)_replaceSingleSceneForTransitionRequest:(id)arg1 animationSettings:(id)arg2 completion:(id /* block */)arg3;
- (void)_resizeAppViewsWithAnimationSettings:(id)arg1 completion:(id /* block */)arg2;
- (id)_resizeAppsAnimationControllerWithTransitionRequest:(id)arg1;
- (void)_rotateAppViewsWithAnimationSettings:(id)arg1 completion:(id /* block */)arg2;
- (id)_rotateAppsAnimationControllerWithTransitionRequest:(id)arg1;
- (id)_sceneHandleForBottomEdgeLocation:(double)arg1;
- (id)_sceneHandleForLayoutRole:(long long)arg1;
- (id)_sceneHandlesIntersectingHomeGrabber;
- (id)_separatorView;
- (double)_separatorViewAlpha;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_separatorViewFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_separatorViewHitTestFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_separatorViewReferenceFrameForSpaceConfiguration:(long long)arg1 interfaceOrientation:(long long)arg2 frameOptions:(unsigned long long)arg3;
- (double)_separatorViewWidth;
- (void)_setKeyboardFocusSceneID:(id)arg1;
- (void)_setMaskDisplayCorners:(bool)arg1 forReason:(id)arg2;
- (void)_setNubStyle:(unsigned long long)arg1;
- (void)_setPreventsCornerRadiusUpdate:(bool)arg1;
- (void)_setSeparatorViewAlpha:(double)arg1;
- (void)_setUpObservationWithCurrentEntities:(id)arg1 previousEntities:(id)arg2;
- (bool)_shouldAdjustViewAffordancesAfterTransition;
- (bool)_shouldConsiderHomeScreenAsActive;
- (bool)_shouldDrawHomeGrabber;
- (bool)_shouldNubViewBeVisibleForLayoutRole:(long long)arg1 inLayoutState:(id)arg2;
- (bool)_shouldRepositionViewAfterTransition;
- (bool)_shouldReverseLayoutDirection;
- (bool)_shouldRotateToLayoutOrientation:(long long)arg1;
- (bool)_shouldTakeKeyboardHomeAffordanceAssertion;
- (void)_slideOverAndFadeElementOffscreenForTransitionRequest:(id)arg1 completion:(id /* block */)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_statusBarAvoidanceFrameForLayoutState:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_statusBarAvoidanceFrameForLayoutState:(id)arg1 layoutRole:(long long)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_statusBarEdgeInsetsForLayoutState:(id)arg1;
- (id)_trailingStatusBarStyleRequest;
- (id)_transitioningAppViewControllers;
- (void)_updateAuxiliaryViews;
- (void)_updateAuxiliaryViewsWhichWantToAnimateDuringRotation;
- (void)_updateHomeGrabberEdgeProtectAndAutoHideForAppRequest;
- (void)_updateHomeGrabberEdgeProtectAndAutoHideWithResetDelay:(double)arg1 unhideDelay:(double)arg2;
- (void)_updateKeyboardHomeAffordanceAssertion;
- (struct CGPoint { double x1; double x2; })_updatePointInReferenceCoordinateSpace:(struct CGPoint { double x1; double x2; })arg1 withBlock:(id /* block */)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_updateRectInReferenceCoordinateSpace:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withBlock:(id /* block */)arg2;
- (void)_updateSuppressingHomeAffordanceBounce;
- (void)_updateViewControllerNubViewHighlightState:(id)arg1 forKeyboardFocusSceneID:(id)arg2;
- (void)_updateWallpaperStyleAndBackgroundColorWithAnimationFactory:(id)arg1;
- (bool)allowsConfiguringIndividualStatusBarParts;
- (id)animationControllerForRotatingWithTransitionRequest:(id)arg1;
- (id)animationControllerForTransitionRequest:(id)arg1;
- (id)animationWrapperViewForLayoutState:(id)arg1 roleMask:(unsigned long long)arg2 interfaceOrientation:(long long)arg3 maskDisplayCorners:(bool)arg4;
- (id)appViewControllers;
- (void)betaLaunchHandle:(id)arg1 activateIfNeededEndedWithResult:(bool)arg2;
- (id)currentlyValidStatusBarPartIdentifiers;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })cursorInteractionHitTestInsetsForView:(id)arg1;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForSceneIdentifier:(id)arg1 inView:(id)arg2;
- (id)homeGrabberRotationView;
- (id)initWithSceneManager:(id)arg1;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidBeginWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionDidEndWithTransitionContext:(id)arg2;
- (void)layoutStateTransitionCoordinator:(id)arg1 transitionWillEndWithTransitionContext:(id)arg2;
- (double)normalizedDismissLeftLocation;
- (double)normalizedDismissRightLocation;
- (double)normalizedHalfHalfLocation;
- (double)normalizedNarrowWideLocation;
- (double)normalizedWideNarrowLocation;
- (id)pushPopWallpaperRequireAssertion;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceFrameForEntity:(id)arg1 inLayoutState:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceFrameForUniqueIdentifier:(id)arg1 inLayoutState:(id)arg2;
- (void)sceneHandle:(id)arg1 didUpdateSettingsWithDiff:(id)arg2 previousSettings:(id)arg3;
- (void)setPushPopWallpaperRequireAssertion:(id)arg1;
- (void)setUserResizing:(bool)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldBeginCursorInteractionAtLocation:(struct CGPoint { double x1; double x2; })arg1 forView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })statusBarAvoidanceFrame;
- (void)statusBarBreadcrumbProviderDidUpdateDisplayProperties:(id)arg1;
- (id)statusBarDescriberAtPoint:(struct CGPoint { double x1; double x2; })arg1 inView:(id)arg2 pointInSceneLayoutSpace:(struct CGPoint { double x1; double x2; }*)arg3;
- (id)statusBarDescriberForStatusBarPart:(id)arg1;
- (id)statusBarDescribers;
- (long long)statusBarOrientation;
- (id)statusBarPartsForSceneWithIdentifier:(id)arg1;
- (id)styleForRegion:(id)arg1 forView:(id)arg2;
- (void)viewDidLoad;

@end
