/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIPeripheralHost : NSObject <UIGestureRecognizerDelegate, UIScrollViewIntersectionDelegate> {
    NSDate * __transitionStartTime;
    bool  _allowNilResponderReload;
    double  _ambiguousControlCenterActivationMargin;
    bool  _animateCornerRefresh;
    bool  _animationFencingEnabled;
    NSMutableArray * _animationStyleStack;
    bool  _automaticAppearanceEnabled;
    bool  _automaticAppearanceEnabledInternal;
    UIKeyboardAutomatic * _automaticKeyboard;
    bool  _automaticKeyboardAnimatingIn;
    bool  _automaticKeyboardAnimatingOut;
    bool  _blockedReloadInputViewsForDictation;
    id /* block */  _bounceCompletionBlock;
    int  _currentState;
    id /* block */  _deferredTransitionTask;
    bool  _didFadeInputViews;
    long long  _disableAnimationsCount;
    CADisplayLink * _displayLink;
    UITextInputMode * _documentInputMode;
    NSMutableArray * _extraViews;
    bool  _hasCustomAnimationProperties;
    UIPeripheralHostView * _hostView;
    int  _hostedAnimationToggleCount;
    int  _ignoredReloads;
    bool  _ignoresPinning;
    int  _ignoringReloadInputViews;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _initialTransform;
    UIInputViewSet * _inputViewSet;
    bool  _interfaceAutorotationDisabled;
    bool  _isSplitting;
    bool  _isTranslating;
    bool  _isUndocked;
    double  _lastAutomaticKeyboardDuration;
    double  _lastBounceTime;
    double  _lastKeyplaneResize;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _lastKnownIAVFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _lastKnownIVFrame;
    double  _lastTranslationNotificationTime;
    int  _nextAutomaticOrderInDirection;
    double  _nextAutomaticOrderInDuration;
    NSMutableArray * _persistentInputAccessoryResponderOrder;
    NSMutableDictionary * _persistentInputAccessoryResponders;
    NSMutableSet * _pinningResponders;
    UIInputViewPostPinningReloadState * _postPinningReloadState;
    NSMutableDictionary * _preservedViewSets;
    bool  _preservingInputViews;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _previousShadowFrameLeft;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _previousShadowFrameRight;
    bool  _reloadInputViewsForcedIsAllowed;
    UIResponder * _responder;
    UIResponder * _responderWithoutAutomaticAppearanceEnabled;
    UIKBRenderConfig * _restorableRenderConfig;
    UIKeyboardRotationState * _rotationState;
    UIResponder * _selfHostingTrigger;
    int  _shadowStyle;
    bool  _showCorners;
    bool  _splitLockState;
    bool  _suppresingNotifications;
    long long  _targetRotatedOrientation;
    NSMutableArray * _targetStateStack;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _targetTransform;
    UIInputViewSet * _transientInputViewSet;
    UIPanGestureRecognizer * _translateRecognizer;
    bool  _useHideNotificationsWhenNotVisible;
    struct CGPoint { 
        double x; 
        double y; 
    }  _velocity;
    bool  _wasBackgroundSplit;
    double  m_keyboardAttachedViewHeight;
}

@property (nonatomic, retain) UIInputViewSet *_inputViews;
@property (nonatomic, retain) UIInputViewSet *_transientInputViews;
@property (nonatomic, retain) NSDate *_transitionStartTime;
@property (nonatomic) double ambiguousControlCenterActivationMargin;
@property (nonatomic) bool animationFencingEnabled;
@property (nonatomic, readonly) bool animationsEnabled;
@property (nonatomic) bool automaticAppearanceEnabled;
@property (nonatomic) bool automaticAppearanceInternalEnabled;
@property (nonatomic, readonly) bool automaticAppearanceReallyEnabled;
@property (nonatomic, readonly) UIKeyboard *automaticKeyboard;
@property (nonatomic, readonly) UIKeyboardAutomatic *automaticKeyboard;
@property (nonatomic) int currentState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UITextInputMode *documentInputMode;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoresPinning;
@property (getter=_isIgnoringReloadInputViews, nonatomic, readonly) bool ignoringReloadInputViews;
@property (nonatomic, retain) UIInputViewSet *inputViews;
@property (nonatomic, readonly) bool keyClicksEnabled;
@property (nonatomic) double lastKeyplaneResize;
@property (nonatomic, readonly) UIInputViewSet *loadAwareInputViews;
@property (nonatomic, retain) UIInputViewPostPinningReloadState *postPinningReloadState;
@property (nonatomic) bool preservingInputViews;
@property (nonatomic, readonly, retain) UIResponder *responder;
@property (nonatomic, retain) UIResponder *responder;
@property (nonatomic, retain) UIKBRenderConfig *restorableRenderConfig;
@property (nonatomic, retain) UIKeyboardRotationState *rotationState;
@property (nonatomic, retain) UIResponder *selfHostingTrigger;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIPeripheralHostState *targetState;
@property (nonatomic, readonly) UIView *view;

+ (void)_releaseSharedInstance;
+ (id)activeInstance;
+ (void)adjustFloatingPersistentOffsetForKeyboardSize:(struct CGSize { double x1; double x2; })arg1;
+ (id)allVisiblePeripheralFrames;
+ (void)deactivateFloatingWithCompletion:(id /* block */)arg1;
+ (struct CGPoint { double x1; double x2; })defaultUndockedOffset;
+ (id)endPlacementForInputViewSet:(id)arg1;
+ (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })floatingChromeBuffer;
+ (double)gridViewRubberBandValueForValue:(double)arg1 target:(double)arg2 timeInterval:(double)arg3 velocity:(double*)arg4;
+ (Class)hostViewClass;
+ (bool)inputViewSetContainsView:(id)arg1;
+ (id)passthroughViews;
+ (bool)pointIsWithinKeyboardContent:(struct CGPoint { double x1; double x2; })arg1;
+ (void)prepareToHideFloatingIfNecessaryWithCompletion:(id /* block */)arg1;
+ (void)prepareToShowFloatingIfNecessaryWithCompletion:(id /* block */)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })screenBoundsInAppOrientation;
+ (void)setFloating:(bool)arg1 onCompletion:(id /* block */)arg2;
+ (id)sharedInstance;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleInputViewFrame;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visiblePeripheralFrame;

- (void)_beginDisablingAnimations;
- (void)_beginIgnoringReloadInputViews;
- (void)_beginPersistingInputAccessoryViewForResponder:(id)arg1 withId:(id)arg2;
- (void)_beginPinningInputViewsOnBehalfOfResponder:(id)arg1;
- (void)_clearMultiDocumentTokenIfNecessary:(id)arg1 withId:(id)arg2;
- (void)_clearPinningResponders;
- (void)_clearPreservedInputViewsWithId:(id)arg1 clearKeyboard:(bool)arg2;
- (void)_clearPreservedInputViewsWithRestorableResponder:(id)arg1;
- (unsigned long long)_clipCornersOfView:(id)arg1;
- (id)_currentInputView;
- (void)_endDisablingAnimations;
- (int)_endIgnoringReloadInputViews;
- (void)_endPersistingInputAccessoryViewWithId:(id)arg1;
- (bool)_hasPostPinningReloadState;
- (bool)_hostFirstResponder:(id)arg1 onBehalfOfResponder:(id)arg2;
- (id)_inheritedRenderConfig;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_inputViewRectToAvoid;
- (id)_inputViews;
- (id)_inputViewsForResponder:(id)arg1;
- (id)_inputViewsForResponder:(id)arg1 withAutomaticKeyboard:(bool)arg2;
- (bool)_isAccessoryViewChangedOnly;
- (bool)_isCoordinatingWithSystemGestures;
- (bool)_isIgnoringReloadInputViews;
- (int)_isKeyboardDeactivated;
- (bool)_isPinningInputViewsOnBehalfOfResponder:(id)arg1;
- (bool)_isSelfHosting;
- (bool)_isSuppressedByManualKeyboard;
- (bool)_isTrackingResponder:(id)arg1;
- (bool)_isTransitioning;
- (void)_onScreenStateDidChange;
- (void)_pinInputViewsOnBehalfOfResponder:(id)arg1 duringBlock:(id /* block */)arg2;
- (void)_preserveInputViewsWithId:(id)arg1;
- (void)_preserveInputViewsWithId:(id)arg1 animated:(bool)arg2;
- (void)_preserveInputViewsWithId:(id)arg1 animated:(bool)arg2 reset:(bool)arg3;
- (bool)_preserveMultiDocumentTokenIfNecessary:(id)arg1 withId:(id)arg2 reset:(bool)arg3;
- (void)_reloadInputViewsForResponder:(id)arg1;
- (id)_renderConfigForCurrentResponder;
- (id)_renderConfigForResponder:(id)arg1;
- (void)_resignFirstResponderIfHostingOnBehalfOfResponder:(id)arg1;
- (void)_restoreInputAccessoryViewOverrideWithId:(id)arg1;
- (bool)_restoreInputViewsWithId:(id)arg1 animated:(bool)arg2;
- (bool)_restoreMultiDocumentTokenIfNecessary:(id)arg1 withId:(id)arg2;
- (id)_sceneForFirstResponder:(id)arg1;
- (id)_screenForFirstResponder:(id)arg1;
- (void)_setHosted:(bool)arg1;
- (void)_setIgnoresPinning:(bool)arg1 allowImmediateReload:(bool)arg2;
- (void)_setReloadInputViewsForcedIsAllowed:(bool)arg1;
- (bool)_shouldDelayRotationForWindow:(id)arg1;
- (void)_stopPinningInputViewsOnBehalfOfResponder:(id)arg1;
- (id)_transientInputViews;
- (id)_transitionStartTime;
- (void)_updateContainerWindowLevel;
- (struct CGPoint { double x1; double x2; })adjustedPersistentOffset;
- (double)ambiguousControlCenterActivationMargin;
- (bool)animationFencingEnabled;
- (bool)animationsEnabled;
- (bool)automaticAppearanceEnabled;
- (bool)automaticAppearanceInternalEnabled;
- (bool)automaticAppearanceReallyEnabled;
- (id)automaticKeyboard;
- (id)containerRootController;
- (id)containerTextEffectsWindow;
- (id)containerTextEffectsWindowAboveStatusBar;
- (id)containerWindow;
- (id)contentView;
- (void)createAutomaticKeyboardIfNeeded;
- (int)currentState;
- (void)dealloc;
- (void)disableInterfaceAutorotation:(bool)arg1;
- (id)documentInputMode;
- (void)enableKeyboardTyping;
- (void)extendKeyboardBackdropHeight:(double)arg1 withDuration:(double)arg2;
- (void)fadeInInputViews:(bool)arg1;
- (void)fadeInputViewsIfNeeded;
- (void)finishRotation;
- (void)finishRotationOfKeyboard:(id)arg1;
- (void)flushDelayedTasks;
- (void)forceOrderInAutomatic;
- (void)forceOrderInAutomaticAnimated:(bool)arg1;
- (void)forceOrderInAutomaticFromDirection:(int)arg1 withDuration:(double)arg2;
- (void)forceOrderOutAutomatic;
- (void)forceOrderOutAutomaticAnimated:(bool)arg1;
- (void)forceOrderOutAutomaticToDirection:(int)arg1 withDuration:(double)arg2;
- (void)forceReloadInputViews;
- (double)getLastAutomaticDuration;
- (double)getVerticalOverlapForView:(id)arg1 usingKeyboardInfo:(id)arg2;
- (bool)hasCustomInputView;
- (bool)hasDictationKeyboard;
- (bool)ignoresPinning;
- (void)implBoundsHeightChangeDoneForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1;
- (id)init;
- (void)inputModeChangedForRenderConfig:(id)arg1;
- (id)inputViews;
- (bool)isHostingActiveImpl;
- (bool)isOffScreen;
- (bool)isOnScreen;
- (bool)isRotating;
- (bool)isSplitting;
- (bool)isTranslating;
- (bool)isUndocked;
- (bool)keyClicksEnabled;
- (double)keyboardAttachedViewHeight;
- (double)lastKeyplaneResize;
- (id)lastUsedInputModeForCurrentContext;
- (void)layoutIfNeeded;
- (void)layoutInputViews;
- (id)loadAwareInputViews;
- (void)logGeometryDescriptionFromUserInfo:(id)arg1;
- (void)manualKeyboardWasOrderedIn:(id)arg1;
- (void)manualKeyboardWasOrderedOut:(id)arg1;
- (void)manualKeyboardWillBeOrderedIn:(id)arg1;
- (void)manualKeyboardWillBeOrderedOut:(id)arg1;
- (bool)maximize;
- (bool)maximizeWithAnimation:(bool)arg1;
- (bool)minimize;
- (double)minimumOffsetForBuffer:(double)arg1;
- (void)moveToPersistentOffset;
- (id)nextAnimationStyle;
- (id)nextAnimationStyle:(bool)arg1;
- (struct CGPoint { double x1; double x2; })offHostPointForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)orderInAutomatic;
- (void)orderInAutomaticFromDirection:(int)arg1 withDuration:(double)arg2;
- (void)orderInAutomaticSkippingAnimation;
- (void)orderInWithAnimationStyle:(id)arg1;
- (void)orderOutAutomatic;
- (void)orderOutAutomaticExceptAccessoryView;
- (void)orderOutAutomaticSkippingAnimation;
- (void)orderOutAutomaticToDirection:(int)arg1 withDuration:(double)arg2;
- (void)orderOutWithAnimation:(bool)arg1 toDirection:(int)arg2 duration:(double)arg3;
- (void)orderOutWithAnimationStyle:(id)arg1;
- (void)performMultipleOperations:(id /* block */)arg1 withAnimationStyle:(id)arg2;
- (void)performWithAllowingNilResponderReload:(id /* block */)arg1;
- (void)performWithoutDeactivation:(id /* block */)arg1;
- (void)peripheralHostWillResume:(id)arg1;
- (void)peripheralViewMinMaximized:(bool)arg1 state:(id)arg2;
- (bool)pinningPreventsInputViews:(id)arg1;
- (void)popAnimationStyle;
- (void)postDidHideNotification;
- (void)postDidHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1;
- (void)postDidShowNotification;
- (void)postDidShowNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1;
- (void)postKeyboardFrameChangeNotification:(id)arg1 withInfo:(id)arg2;
- (id)postPinningReloadState;
- (void)postWillHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1 duration:(double)arg2;
- (void)postWillShowNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1 duration:(double)arg2;
- (void)prepareForAlongsideTransitionWithContext:(id)arg1;
- (void)prepareForPinning;
- (void)prepareForRotationOfKeyboard:(id)arg1 toOrientation:(long long)arg2;
- (void)prepareForRotationToOrientation:(long long)arg1;
- (void)prepareToMoveKeyboardForInputViewSet:(id)arg1 animationStyle:(id)arg2;
- (bool)preservingInputViews;
- (void)pushAnimationStyle:(id)arg1;
- (void)queueDelayedTask:(id /* block */)arg1;
- (void)removePreservedInputViewSetForInputView:(id)arg1;
- (void)resetCurrentOrderOutAnimationDuration:(double)arg1;
- (void)resetNextAutomaticOrderInDirectionAndDuration;
- (id)responder;
- (id)restorableRenderConfig;
- (id)retain;
- (void)rotateKeyboard:(id)arg1 toOrientation:(long long)arg2;
- (void)rotateToOrientation:(long long)arg1;
- (id)rotationState;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })screenRectFromBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 atCenter:(struct CGPoint { double x1; double x2; })arg2 applyingSourceHeightDelta:(double)arg3;
- (void)scrollView:(id)arg1 didFinishPanGesture:(id)arg2;
- (void)scrollView:(id)arg1 didPanWithGesture:(id)arg2;
- (id)selfHostingTrigger;
- (void)setAccessoryViewVisible:(bool)arg1 delay:(double)arg2;
- (void)setAmbiguousControlCenterActivationMargin:(double)arg1;
- (void)setAnimationFencingEnabled:(bool)arg1;
- (void)setAutomaticAppearanceEnabled:(bool)arg1;
- (void)setAutomaticAppearanceInternalEnabled:(bool)arg1;
- (void)setCurrentState:(int)arg1;
- (void)setDeactivatedKeyboard:(bool)arg1 forScene:(id)arg2;
- (void)setDocumentInputMode:(id)arg1;
- (void)setIgnoresPinning:(bool)arg1;
- (void)setInputViews:(id)arg1;
- (void)setInputViews:(id)arg1 animated:(bool)arg2;
- (void)setInputViews:(id)arg1 animationStyle:(id)arg2;
- (void)setInputViewsHidden:(bool)arg1;
- (void)setKeyboardFencingEnabled:(bool)arg1;
- (void)setKeyboardOnScreenNotifyKey:(bool)arg1;
- (void)setLastKeyplaneResize:(double)arg1;
- (void)setNextAutomaticOrderInDirection:(int)arg1 duration:(double)arg2;
- (void)setPostPinningReloadState:(id)arg1;
- (void)setPreservingInputViews:(bool)arg1;
- (void)setResponder:(id)arg1;
- (void)setRestorableRenderConfig:(id)arg1;
- (void)setRotationState:(id)arg1;
- (void)setSelfHostingTrigger:(id)arg1;
- (void)setTargetState:(id)arg1;
- (void)setTextEffectsWindowLevelForInputView:(id)arg1 responder:(id)arg2;
- (void)setUndockedWithOffset:(struct CGPoint { double x1; double x2; })arg1 animated:(bool)arg2;
- (void)set_inputViews:(id)arg1;
- (void)set_transientInputViews:(id)arg1;
- (void)set_transitionStartTime:(id)arg1;
- (void)setkeyboardAttachedViewHeight:(double)arg1;
- (bool)shouldApplySettingsForBackdropView:(id)arg1;
- (bool)shouldUseHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1;
- (void)showInputViewsIfNeeded;
- (struct CGSize { double x1; double x2; })sizeOfInputViewForInputViewSet:(id)arg1 withInterfaceOrientation:(long long)arg2;
- (void)syncToExistingAnimations;
- (id)targetState;
- (void)textEffectsWindowDidRotate:(id)arg1;
- (id)topAnimationStyle;
- (struct CGSize { double x1; double x2; })totalPeripheralSizeForOrientation:(long long)arg1;
- (id)transformedContainerView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitioningFrame;
- (id)transitioningView;
- (id)undockedInfoFromDefaultInfo:(id)arg1 forNotification:(id)arg2;
- (void)updateBackdrop;
- (void)updateInputAccessoryViewVisibility:(bool)arg1 withDuration:(double)arg2;
- (void)updateRenderConfigForCurrentResponder;
- (void)updateRenderConfigForResponder:(id)arg1;
- (void)updateToPlacement:(id)arg1 withNormalAnimationsAndNotifications:(bool)arg2;
- (bool)userInfoContainsActualGeometryChange:(id)arg1;
- (id)userInfoFromGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_3_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_3_1_2; } x3; struct CGAffineTransform { double x_4_1_1; double x_4_1_2; double x_4_1_3; double x_4_1_4; double x_4_1_5; double x_4_1_6; } x4; double x5; })arg1 duration:(double)arg2 forWill:(bool)arg3 forShow:(bool)arg4;
- (id)view;
- (id)viewForTransitionScreenSnapshot;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visiblePeripheralFrame:(bool)arg1;

@end
