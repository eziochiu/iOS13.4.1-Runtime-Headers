/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface UIMultiSelectInteraction : NSObject <UIGestureRecognizerDelegate, UIInteraction, _UIMultiSelectOneFingerPanGestureDelegate> {
    <UIMultiSelectInteractionDelegate> * _delegate;
    bool  _delegateConformsToProtocol;
    bool  _isScrollView;
    UIPanGestureRecognizer * _multiFingerPan;
    UITapGestureRecognizer * _multiFingerTap;
    _UIMultiSelectOneFingerPanGesture * _multiSelectModePan;
    struct { 
        unsigned int respondsToShouldPreventDragLiftGesture : 1; 
        unsigned int respondsToShouldAllowSelectionExtensionAtPoint : 1; 
        unsigned int respondsToDidCancelMultiSelectInteraction : 1; 
        unsigned int respondsToShouldBeginMultiSelectInteraction : 1; 
    }  _optionalDelegateFlags;
    _UISingleFingerTapExtensionGesture * _singleFingerExtensionTap;
    UIView * _view;
}

@property (nonatomic, retain) UIPanGestureRecognizer *_multiFingerPan;
@property (nonatomic, retain) UITapGestureRecognizer *_multiFingerTap;
@property (nonatomic, retain) _UIMultiSelectOneFingerPanGesture *_multiSelectModePan;
@property (nonatomic, retain) _UISingleFingerTapExtensionGesture *_singleFingerExtensionTap;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIMultiSelectInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *gesturesForFailureRequirements;
@property (readonly) unsigned long long hash;
@property (nonatomic) double singleTouchPanGestureHysteresis;
@property (readonly) Class superclass;
@property (nonatomic) UIView *view;

- (void).cxx_destruct;
- (void)_askDelegateToAutomaticallyTransitionToMultiSelectModeAtPoint:(struct CGPoint { double x1; double x2; })arg1 keepingSelection:(bool)arg2;
- (bool)_attemptToAutomaticallyTransitionToMultiSelectModeIfNecessaryAtPoint:(struct CGPoint { double x1; double x2; })arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2;
- (void)_beginCommonPan:(id)arg1;
- (void)_beginObservingScrollViewOffsetUpdates;
- (void)_cancelCommonPan:(id)arg1;
- (void)_cancelScrollingInViewForGesture:(id)arg1;
- (unsigned long long)_currentExtensionTypeForOneFingerTapGesture:(id)arg1;
- (void)_didInvokeMultiSelectAppendGestureAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_didInvokeMultiSelectExtendGestureAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (void)_endCommonPan:(id)arg1;
- (void)_endObservingScrollViewOffsetUpdates;
- (long long)_gestureTypeForGestureInstance:(id)arg1;
- (void)_handleCommonPanGestureStateChanged:(id)arg1;
- (void)_handleSelectionExtensionTapGesture:(id)arg1;
- (id)_interactionDelegate;
- (bool)_isCommandKeyBeingHeldWithGesture:(id)arg1;
- (bool)_isShiftKeyBeingHeldWithGesture:(id)arg1;
- (id)_multiFingerPan;
- (id)_multiFingerTap;
- (void)_multiFingerTapGesture:(id)arg1;
- (id)_multiSelectModePan;
- (id)_singleFingerExtensionTap;
- (bool)_triggeredLegacyPathInsteadForGestureRecognizer:(id)arg1 velocity:(struct CGPoint { double x1; double x2; })arg2 shouldBegin:(out bool*)arg3;
- (void)_updateCommonPan:(id)arg1;
- (void)_updateDelegateConformance;
- (id)delegate;
- (void)didMoveToView:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gesturesForFailureRequirements;
- (id)init;
- (bool)multiSelectOneFingerPanGestureShouldPreventDragInteractionGesture:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setDelegate:(id)arg1;
- (void)setSingleTouchPanGestureHysteresis:(double)arg1;
- (void)setView:(id)arg1;
- (void)set_multiFingerPan:(id)arg1;
- (void)set_multiFingerTap:(id)arg1;
- (void)set_multiSelectModePan:(id)arg1;
- (void)set_singleFingerExtensionTap:(id)arg1;
- (double)singleTouchPanGestureHysteresis;
- (id)view;
- (void)willMoveToView:(id)arg1;

@end
