/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UICollectionCompositionalLayoutSolver : NSObject <_UICollectionLayoutAuxillaryHosting, _UIDynamicReferenceSystem> {
    struct CGSize { 
        double width; 
        double height; 
    }  _actualContentSize;
    NSMutableDictionary * _cachedDecorationAttributes;
    NSMutableDictionary * _cachedItemAttributes;
    NSMutableDictionary * _cachedSupplementaryAttributes;
    <NSCollectionLayoutContainer> * _container;
    _UIDataSourceSnapshotter * _dataSourceSnapshot;
    _UICollectionCompositionalLayoutDynamicAnimator * _dynamicAnimator;
    _UICollectionLayoutDynamicsConfiguration * _dynamicsConfiguration;
    id /* block */  _dynamicsConfigurationHandler;
    bool  _estimatesSizes;
    NSArray * _globalSupplementaryItems;
    _UICollectionPreferredSizes * _globalSupplementaryPreferredSizes;
    _UICollectionLayoutAuxillaryItemSolver * _globalSupplementarySolver;
    bool  _hasOrthogonalSrollingSections;
    double  _interSectionSpacing;
    Class  _invalidationContextClass;
    id /* block */  _invalidationHandler;
    Class  _layoutAttributeClass;
    unsigned long long  _layoutAxis;
    bool  _layoutRTL;
    double  _memoizedScreenScale;
    long long  _numberOfSectionsWithTransformVisibleItemsHandler;
    _UICollectionCompositionalLayoutSolverOptions * _options;
    NSIndexSet * _orthogonalScrollingSectionIndexes;
    bool  _roundsToScreenScale;
    _UICollectionLayoutSectionGeometryTranslator * _sectionGeometryTranslator;
    _UIRTree * _sectionIndexer;
    id /* block */  _sectionProvider;
    bool  _shouldPerformPhysicalRTLTransforms;
    NSIndexSet * _solutionBookmarkIndexesWithPinnedSupplementaryItems;
    NSArray * _solutionBookmarks;
    UITraitCollection * _traitCollection;
}

@property (nonatomic) struct CGSize { double x1; double x2; } actualContentSize;
@property (nonatomic, retain) NSMutableDictionary *cachedDecorationAttributes;
@property (nonatomic, retain) NSMutableDictionary *cachedItemAttributes;
@property (nonatomic, retain) NSMutableDictionary *cachedSupplementaryAttributes;
@property (nonatomic, retain) <NSCollectionLayoutContainer> *container;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } contentSize;
@property (nonatomic, retain) _UIDataSourceSnapshotter *dataSourceSnapshot;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) _UICollectionCompositionalLayoutDynamicAnimator *dynamicAnimator;
@property (nonatomic, retain) _UICollectionLayoutDynamicsConfiguration *dynamicsConfiguration;
@property (nonatomic, copy) id /* block */ dynamicsConfigurationHandler;
@property (nonatomic) bool estimatesSizes;
@property (nonatomic, retain) NSArray *globalSupplementaryItems;
@property (nonatomic, retain) _UICollectionPreferredSizes *globalSupplementaryPreferredSizes;
@property (nonatomic, retain) _UICollectionLayoutAuxillaryItemSolver *globalSupplementarySolver;
@property (nonatomic) bool hasOrthogonalSrollingSections;
@property (nonatomic, readonly) bool hasPinnedSupplementaryItems;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double interSectionSpacing;
@property (nonatomic, retain) Class invalidationContextClass;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic, retain) Class layoutAttributeClass;
@property (nonatomic, readonly) NSArray *layoutAttributesForPinnedSupplementaryItems;
@property (nonatomic) unsigned long long layoutAxis;
@property (nonatomic) bool layoutRTL;
@property (nonatomic) double memoizedScreenScale;
@property (nonatomic) long long numberOfSectionsWithTransformVisibleItemsHandler;
@property (nonatomic, retain) _UICollectionCompositionalLayoutSolverOptions *options;
@property (nonatomic, retain) NSIndexSet *orthogonalScrollingSectionIndexes;
@property (nonatomic) bool roundsToScreenScale;
@property (nonatomic, retain) _UICollectionLayoutSectionGeometryTranslator *sectionGeometryTranslator;
@property (nonatomic, retain) _UIRTree *sectionIndexer;
@property (nonatomic, copy) id /* block */ sectionProvider;
@property (nonatomic) bool shouldPerformPhysicalRTLTransforms;
@property (nonatomic, readonly) bool shouldTransformVisibleItemsDuringContentOffsetChanges;
@property (nonatomic, readonly) bool shouldUpdateVisibleBoundsForDynamicAnimator;
@property (nonatomic, retain) NSIndexSet *solutionBookmarkIndexesWithPinnedSupplementaryItems;
@property (nonatomic, retain) NSArray *solutionBookmarks;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITraitCollection *traitCollection;

- (void).cxx_destruct;
- (struct CGSize { double x1; double x2; })_adjustedContentSizeIncludingContainerInsetsForSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })_attributesOffsetFromContainer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_attributesQueryRectForRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_attributesQueryRectsForQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_cachedDecorationAttributesForElementKind:(id)arg1 indexPath:(id)arg2;
- (id)_cachedSupplementaryAttributesForElementKind:(id)arg1 indexPath:(id)arg2;
- (bool)_canResolveWithoutQueryingSectionDefintionsForContainerChange;
- (struct CGSize { double x1; double x2; })_clampedSolutionSizeForSolution:(id)arg1 layoutAxis:(unsigned long long)arg2 scrollsOrthogonally:(bool)arg3;
- (void)_computeDeletedItemsAffectingSupplementariesForUpdate:(id)arg1 resolveResult:(id)arg2;
- (id)_computeInitialSupplementaryKeysSectionDictForUpdate:(id)arg1;
- (void)_configureLayoutForSections:(id)arg1;
- (id)_createAndCacheLayoutAttributesForDecorationItemAtIndexPath:(id)arg1 elementKind:(id)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 additionalContentInset:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg4 zIndex:(long long)arg5;
- (id)_createAndCacheLayoutAttributesForItemAtIndexPath:(id)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 zIndex:(long long)arg3;
- (id)_createAndCacheLayoutAttributesForSupplementaryItemAtIndexPath:(id)arg1 elementKind:(id)arg2 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 zIndex:(long long)arg4;
- (void)_diffNonItemSupplementariesForUpdate:(id)arg1 resolveResult:(id)arg2 initialSupplementaryKeysSectionDict:(id)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_dynamicReferenceBounds;
- (void)_enrichLayoutAttributes:(id)arg1 inSection:(id)arg2;
- (struct CGPoint { double x1; double x2; })_firstBookmarkOffset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_globalFrameForSolutionFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 bookmark:(id)arg2;
- (struct CGPoint { double x1; double x2; })_globalSupplementaryFrameOffset;
- (void)_invalidateAllAttributes;
- (void)_invalidateAttributes:(id)arg1;
- (void)_layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 handler:(id /* block */)arg2;
- (id)_queryClientForSectionDefintionForSectionIndex:(long long)arg1;
- (id)_rebasedPreferredSizesWithDataSourceTranslator:(id)arg1;
- (id)_rebasedSectionLayoutsWithDataSourceTranslator:(id)arg1;
- (void)_recomputeSolutionBookmarksAndContentSize;
- (void)_registerDecorationItemsIfNeeded:(id)arg1;
- (id)_resolveOptionallyQueryingForSectionDefintions:(bool)arg1;
- (id)_resolveOptionallyQueryingForSectionDefintions:(bool)arg1 retainPreferredSizing:(bool)arg2;
- (void)_restoreStateFromBookmarkSnapshots:(id)arg1 bookmarks:(id)arg2 update:(id)arg3;
- (bool)_sectionHasBackgroundDecorationView:(long long)arg1;
- (void)_setCachedDecorationAttributesForElementKind:(id)arg1 indexPath:(id)arg2 attributes:(id)arg3;
- (void)_setCachedSupplementaryAttributesForElementKind:(id)arg1 indexPath:(id)arg2 attributes:(id)arg3;
- (id)_snapshotBookmarks:(id)arg1;
- (void)_solve;
- (void)_solveWithSectionLayouts:(id)arg1 preferredSizesDict:(id)arg2 dataSourceSnapshot:(id)arg3 update:(id)arg4;
- (void)_updateBookmarkOffsetsForGlobalSupplementariesIfNeeded;
- (void)_updateGeometryTranslator;
- (void)_updateSectionIndexer:(id)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 solution:(id)arg3 section:(long long)arg4;
- (struct CGSize { double x1; double x2; })actualContentSize;
- (id)auxillaryHostAuxillaryItems;
- (long long)auxillaryHostAuxillaryKind;
- (id)auxillaryHostContainer;
- (struct CGSize { double x1; double x2; })auxillaryHostContentSize;
- (unsigned long long)auxillaryHostLayoutAxis;
- (struct CGSize { double x1; double x2; })auxillaryHostPinningContentSize;
- (id)auxillaryHostPreferredSizes;
- (bool)auxillaryHostShouldLayoutRTL;
- (id)auxillaryHostSupplementaryEnroller;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (id)cachedDecorationAttributes;
- (id)cachedItemAttributes;
- (id)cachedSupplementaryAttributes;
- (id)container;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })contentInsetsForSection:(long long)arg1;
- (struct CGSize { double x1; double x2; })contentSize;
- (id)dataSourceSnapshot;
- (id)dynamicAnimator;
- (id)dynamicsConfiguration;
- (id /* block */)dynamicsConfigurationHandler;
- (struct CGSize { double x1; double x2; })effectiveContentSizeForSection:(long long)arg1;
- (bool)elementShouldAppearAbove:(id)arg1;
- (bool)estimatesSizes;
- (id)extendedAttributesQueryIncludingOrthogonalScrollingRegions:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)globalSupplementaryItems;
- (id)globalSupplementaryPreferredSizes;
- (id)globalSupplementarySolver;
- (bool)hasOrthogonalSrollingSections;
- (bool)hasPinnedSupplementaryItems;
- (id)initWithContainer:(id)arg1 traitCollection:(id)arg2 layoutAxis:(unsigned long long)arg3 dataSourceSnapshot:(id)arg4 options:(id)arg5 sectionProvider:(id /* block */)arg6;
- (double)interSectionSpacing;
- (void)invalidateCachedDecorationAttributes;
- (void)invalidateCachedDecorationAttributesForElementKind:(id)arg1 atIndexPaths:(id)arg2;
- (void)invalidateCachedItemsAttributes;
- (void)invalidateCachedItemsAttributesForItemsAtIndexPaths:(id)arg1;
- (void)invalidateCachedSupplementaryAttributes;
- (void)invalidateCachedSupplementaryAttributesForElementKind:(id)arg1 atIndexPaths:(id)arg2;
- (Class)invalidationContextClass;
- (id /* block */)invalidationHandler;
- (Class)layoutAttributeClass;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 withIndexPath:(id)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForPinnedSupplementaryItems;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 withIndexPath:(id)arg2;
- (unsigned long long)layoutAxis;
- (bool)layoutRTL;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })layoutRectForSection:(long long)arg1;
- (double)memoizedScreenScale;
- (id)mutatedVisibleItemsForElementsForVisibleBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)numberOfSectionsWithTransformVisibleItemsHandler;
- (id)options;
- (struct CGPoint { double x1; double x2; })orthogonalContentOffsetForProposedContentOffset:(struct CGPoint { double x1; double x2; })arg1 section:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })orthogonalFrameWithOffsetElidedForItemWithLayoutAttributes:(id)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGPoint { double x1; double x2; })orthogonalOffsetForSection:(long long)arg1;
- (long long)orthogonalScrollingBehaviorForSection:(long long)arg1;
- (double)orthogonalScrollingDecelerationRateForSection:(long long)arg1;
- (double)orthogonalScrollingPagingDimensionForSection:(long long)arg1;
- (bool)orthogonalScrollingSectionDecorationShouldScrollWithContentForIndexPath:(id)arg1 elementKind:(id)arg2;
- (id)orthogonalScrollingSectionIndexes;
- (bool)orthogonalScrollingSectionSupplementaryShouldScrollWithContentForIndexPath:(id)arg1 elementKind:(id)arg2;
- (bool)orthogonalScrollingUsesCustomContentOffsetForSection:(long long)arg1;
- (void)prepareForPreferredAttributesQueryForView:(id)arg1 withLayoutAttributes:(id)arg2;
- (id)resolveForContainerChange:(id)arg1;
- (id)resolveForInvalidatedPreferredAttributes:(id)arg1;
- (id)resolveForMarginsChange:(id)arg1;
- (id)resolveForUpdatedGlobalSupplementaries:(id)arg1;
- (id)resolveSolutionForUpdate:(id)arg1;
- (bool)roundsToScreenScale;
- (struct CGVector { double x1; double x2; })scrollingUnitVectorForOrthogonalScrollingSection:(long long)arg1;
- (id)sectionGeometryTranslator;
- (id)sectionIndexer;
- (id /* block */)sectionProvider;
- (void)setActualContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCachedDecorationAttributes:(id)arg1;
- (void)setCachedItemAttributes:(id)arg1;
- (void)setCachedSupplementaryAttributes:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)setDataSourceSnapshot:(id)arg1;
- (void)setDynamicAnimator:(id)arg1;
- (void)setDynamicsConfiguration:(id)arg1;
- (void)setDynamicsConfigurationHandler:(id /* block */)arg1;
- (void)setEstimatesSizes:(bool)arg1;
- (void)setGlobalSupplementaryItems:(id)arg1;
- (void)setGlobalSupplementaryPreferredSizes:(id)arg1;
- (void)setGlobalSupplementarySolver:(id)arg1;
- (void)setHasOrthogonalSrollingSections:(bool)arg1;
- (void)setInvalidationContextClass:(Class)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setLayoutAttributeClass:(Class)arg1;
- (void)setLayoutAxis:(unsigned long long)arg1;
- (void)setLayoutRTL:(bool)arg1;
- (void)setMemoizedScreenScale:(double)arg1;
- (void)setNumberOfSectionsWithTransformVisibleItemsHandler:(long long)arg1;
- (void)setOptions:(id)arg1;
- (void)setOrthogonalOffset:(struct CGPoint { double x1; double x2; })arg1 forSection:(long long)arg2;
- (void)setOrthogonalScrollingSectionIndexes:(id)arg1;
- (void)setRoundsToScreenScale:(bool)arg1;
- (void)setSectionGeometryTranslator:(id)arg1;
- (void)setSectionIndexer:(id)arg1;
- (void)setSectionProvider:(id /* block */)arg1;
- (void)setShouldPerformPhysicalRTLTransforms:(bool)arg1;
- (void)setSolutionBookmarkIndexesWithPinnedSupplementaryItems:(id)arg1;
- (void)setSolutionBookmarks:(id)arg1;
- (bool)shouldCenterOrthogonalScrollingPageForSection:(long long)arg1;
- (bool)shouldInvalidateForNewTraitCollection:(id)arg1;
- (bool)shouldPerformPhysicalRTLTransforms;
- (bool)shouldTransformVisibleItemsDuringContentOffsetChanges;
- (bool)shouldUpdateVisibleBoundsForDynamicAnimator;
- (id)solutionBookmarkIndexesWithPinnedSupplementaryItems;
- (id)solutionBookmarks;
- (id)traitCollection;
- (id)updatePinnedSectionSupplementaryItemsForVisibleBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)updatePreferredSizeIfNeededForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (bool)updateVisibleBoundsForDynamicAnimator:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 previousVisibleBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)visualDescription;

@end
