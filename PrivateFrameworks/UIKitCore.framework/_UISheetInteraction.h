/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UISheetInteraction : NSObject <UIGestureRecognizerDelegate, UIInteraction, _UIScrollViewScrollableAncestor> {
    UIPanGestureRecognizer * _backgroundGestureRecognizer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _currentOffset;
    <_UISheetInteractionDelegate> * _delegate;
    NSArray * _detents;
    id  _dragSource;
    bool  _enabled;
    bool  _horizontalRubberBandingEnabled;
    long long  _indexOfCurrentDetent;
    double  _offsetWhenGestureBegan;
    UIViewPropertyAnimator * _propertyAnimator;
    NSMutableArray * _registeredPanGestureRecognizers;
    double  _rubberBandExtentBeyondMaximumOffset;
    double  _rubberBandExtentBeyondMinimumOffset;
    <UITimingCurveProvider> * _timingCurve;
    double  _unconstrainedOffset;
    bool  _verticalPanningEnabled;
    UIView * _view;
}

@property (getter=isAnimating, nonatomic, readonly) bool animating;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } attachmentPoint;
@property (nonatomic, readonly) UIPanGestureRecognizer *backgroundGestureRecognizer;
@property (nonatomic) struct CGPoint { double x1; double x2; } currentOffset;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_UISheetInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSArray *detents;
@property (nonatomic, retain) id dragSource;
@property (getter=isDragging, nonatomic, readonly) bool dragging;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool horizontalRubberBandingEnabled;
@property (nonatomic) long long indexOfCurrentDetent;
@property (nonatomic, readonly) double maximumOffset;
@property (nonatomic, readonly) double minimumOffset;
@property (nonatomic, readonly) double offsetAtCurrentDetent;
@property (nonatomic) double offsetWhenGestureBegan;
@property (nonatomic, retain) UIViewPropertyAnimator *propertyAnimator;
@property (nonatomic, readonly) NSMutableArray *registeredPanGestureRecognizers;
@property (nonatomic) double rubberBandExtentBeyondMaximumOffset;
@property (nonatomic) double rubberBandExtentBeyondMinimumOffset;
@property (readonly) Class superclass;
@property (nonatomic, retain) <UITimingCurveProvider> *timingCurve;
@property (nonatomic) double unconstrainedOffset;
@property (nonatomic) bool verticalPanningEnabled;
@property (nonatomic) UIView *view;

- (void).cxx_destruct;
- (id)_currentDragPanGesture;
- (double)_currentRubberBandCoefficient;
- (bool)_descendentScrollView:(id)arg1 shouldPreserveStartOffset:(struct CGPoint { double x1; double x2; })arg2;
- (void)_descendentScrollViewDidCancelDragging:(id)arg1;
- (void)_descendentScrollViewDidEndDragging:(id)arg1;
- (bool)_gestureRecognizer:(id)arg1 shouldReceiveEvent:(id)arg2;
- (struct CGPoint { double x1; double x2; })_scrollView:(id)arg1 adjustedUnconstrainedOffsetForUnconstrainedOffset:(struct CGPoint { double x1; double x2; })arg2 startOffset:(struct CGPoint { double x1; double x2; })arg3 horizontalVelocity:(inout double*)arg4 verticalVelocity:(inout double*)arg5 animator:(out id*)arg6;
- (void)_setCurrentOffsetX:(double)arg1;
- (void)_setCurrentOffsetY:(double)arg1;
- (bool)_shouldInteractWithDescendentScrollView:(id)arg1 startOffset:(struct CGPoint { double x1; double x2; })arg2 maxTopOffset:(double)arg3;
- (struct CGPoint { double x1; double x2; })attachmentPoint;
- (id)backgroundGestureRecognizer;
- (void)cancelDraggingIfNeeded;
- (double)constrainedOffsetForUnconstrainedOffset:(double)arg1;
- (struct CGPoint { double x1; double x2; })currentOffset;
- (id)delegate;
- (double)detentAtIndex:(long long)arg1;
- (id)detents;
- (void)didMoveToView:(id)arg1;
- (id)dragSource;
- (void)draggingBeganFromSource:(id)arg1;
- (void)draggingCancelledInSource:(id)arg1;
- (void)draggingChangedInSource:(id)arg1 withTranslation:(struct CGPoint { double x1; double x2; })arg2 animateChange:(bool)arg3;
- (void)draggingEndedInSource:(id)arg1 withVelocity:(double)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handlePan:(id)arg1;
- (bool)horizontalRubberBandingEnabled;
- (long long)indexOfCurrentDetent;
- (long long)indexOfDetentClosestToOffset:(double)arg1;
- (id)init;
- (bool)isAnimating;
- (bool)isDragging;
- (bool)isEnabled;
- (double)maximumOffset;
- (double)minimumOffset;
- (double)offsetAtCurrentDetent;
- (double)offsetWhenGestureBegan;
- (id)propertyAnimator;
- (void)registerPanGestureRecognizer:(id)arg1;
- (id)registeredPanGestureRecognizers;
- (double)rubberBandExtentBeyondMaximumOffset;
- (double)rubberBandExtentBeyondMinimumOffset;
- (double)rubberBandExtentForOffset:(double)arg1;
- (void)sendCurrentOffsetDidChange;
- (void)setCurrentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetents:(id)arg1;
- (void)setDragSource:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setHorizontalRubberBandingEnabled:(bool)arg1;
- (void)setIndexOfCurrentDetent:(long long)arg1;
- (void)setOffsetWhenGestureBegan:(double)arg1;
- (void)setPropertyAnimator:(id)arg1;
- (void)setRubberBandExtentBeyondMaximumOffset:(double)arg1;
- (void)setRubberBandExtentBeyondMinimumOffset:(double)arg1;
- (void)setTimingCurve:(id)arg1;
- (void)setUnconstrainedOffset:(double)arg1;
- (void)setVerticalPanningEnabled:(bool)arg1;
- (void)setView:(id)arg1;
- (id)timingCurve;
- (double)unconstrainedOffset;
- (void)unregisterPanGestureRecognizer:(id)arg1;
- (void)updateCurrentOffsetToCurrentDetent;
- (void)updateRegisteredPanGestureRecognizerEnabled:(id)arg1;
- (bool)verticalPanningEnabled;
- (id)view;
- (void)willMoveToView:(id)arg1;

@end
