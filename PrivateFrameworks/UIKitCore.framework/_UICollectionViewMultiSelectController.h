/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UICollectionViewMultiSelectController : NSObject <UIMultiSelectInteractionDelegate> {
    UICollectionView * _collectionView;
    unsigned long long  _computedAxisConstraint;
    UIMultiSelectInteraction * _multiSelectInteraction;
    UIMultiSelectInteractionState * _selectionState;
}

@property (nonatomic) UICollectionView *collectionView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIMultiSelectInteraction *multiSelectInteraction;
@property (nonatomic, retain) UIMultiSelectInteractionState *selectionState;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_antecedentIndexPathsForLayoutAttributes:(id)arg1 inDirection:(double)arg2;
- (id)_collectionViewDelegate;
- (void)_deselectIndexPaths:(id)arg1;
- (void)_extendSelectionToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_isPointInsideEditControl:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_isUsingTableViewLayout;
- (bool)_point:(struct CGPoint { double x1; double x2; })arg1 liesBeyondFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inDirection:(double)arg3;
- (void)_selectIndexPaths:(id)arg1;
- (bool)_shouldBeginInteractionAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)automaticallyTransitionToMultiSelectModeKeepingCurrentSelection:(bool)arg1;
- (unsigned long long)axisConstraint;
- (id)collectionView;
- (void)dealloc;
- (void)didCancelMultiSelectInteraction:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)didEndMultiSelectInteraction:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (id)indexPathsBetweenIndexPath:(id)arg1 andIndexPath:(id)arg2;
- (id)initWithCollectionView:(id)arg1;
- (bool)interaction:(id)arg1 shouldAutomaticallyTransitionToMultiSelectModeAtPoint:(struct CGPoint { double x1; double x2; })arg2 withVelocity:(struct CGPoint { double x1; double x2; })arg3;
- (bool)isInMultiSelectMode;
- (id)multiSelectInteraction;
- (void)multiSelectInteraction:(id)arg1 appendSelectionAtPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)multiSelectInteraction:(id)arg1 toggleSelectionStateUpToPoint:(struct CGPoint { double x1; double x2; })arg2;
- (bool)multiSelectInteractionGestureShouldPreventDragLiftGesture:(id)arg1;
- (void)selectedIndexPathsChanged:(id)arg1;
- (id)selectionEndIndexPath;
- (id)selectionStartIndexPath;
- (id)selectionState;
- (void)setCollectionView:(id)arg1;
- (void)setMultiSelectInteraction:(id)arg1;
- (void)setSelectionState:(id)arg1;
- (bool)shouldAllowSelectionExtensionAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (bool)shouldBeginMultiSelectInteraction:(id)arg1 ofType:(long long)arg2 atPoint:(struct CGPoint { double x1; double x2; })arg3 withVelocity:(struct CGPoint { double x1; double x2; })arg4;
- (bool)supportsMultiSelectInteraction:(id)arg1;
- (void)uninstallFromCollectionView;
- (void)updateSelectedIndexPaths:(id)arg1;
- (void)willBeginMultiSelectInteraction:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;

@end
