/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
 */

@interface _UICollectionLayoutItemSolver : NSObject <NSCopying, _UICollectionLayoutAuxillaryHosting> {
    <NSCollectionLayoutContainer> * _container;
    NSCollectionLayoutItem * _item;
    unsigned long long  _layoutAxis;
    bool  _layoutRTL;
    long long  _maxFrameCount;
    <_UICollectionPreferredSizes> * _preferredSizes;
    long long  _solutionRecursionDepth;
    _UICollectionLayoutItemSolverState * _solveResult;
    <_UICollectionLayoutSupplementaryEnrolling> * _supplementaryEnroller;
    UITraitCollection * _traitCollection;
}

@property (nonatomic, readonly) long long auxillaryFrameCount;
@property (nonatomic, readonly) NSArray *auxillaryFrames;
@property (nonatomic, readonly) <NSCollectionLayoutContainer> *container;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentFrame;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long frameCount;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSCollectionLayoutItem *item;
@property (nonatomic, readonly) long long itemFrameCount;
@property (nonatomic, readonly) NSArray *itemFrames;
@property (nonatomic, readonly) unsigned long long layoutAxis;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } layoutFrame;
@property (nonatomic, readonly) bool layoutRTL;
@property (nonatomic, readonly) long long maxFrameCount;
@property (nonatomic, retain) <_UICollectionPreferredSizes> *preferredSizes;
@property (nonatomic, readonly) long long solutionRecursionDepth;
@property (nonatomic, retain) _UICollectionLayoutItemSolverState *solveResult;
@property (readonly) Class superclass;
@property (nonatomic, retain) <_UICollectionLayoutSupplementaryEnrolling> *supplementaryEnroller;
@property (nonatomic, readonly) <_UICollectionLayoutAuxillaryOffsets> *supplementaryOffsets;
@property (nonatomic, readonly) UITraitCollection *traitCollection;

- (void).cxx_destruct;
- (double)_additionalDimensionForEdgeSpacingAlongAxis:(unsigned long long)arg1 group:(id)arg2 trailingEdgeOnly:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_adjustedFrameForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 offset:(struct CGPoint { double x1; double x2; })arg2;
- (id)_arrangeSolutionItems:(id)arg1 alongLayoutAxis:(unsigned long long)arg2 forContainer:(id)arg3 additionalLayoutOffset:(struct CGPoint { double x1; double x2; })arg4 interItemSpacing:(id)arg5;
- (unsigned long long)_directionalEdgeForLayoutAxis:(unsigned long long)arg1 preEdge:(bool)arg2;
- (struct CGSize { double x1; double x2; })_effectiveContainerSizeForContainer:(id)arg1;
- (struct CGSize { double x1; double x2; })_effectiveGroupSizeForGroup:(id)arg1 container:(id)arg2;
- (void)_enumerateSolutionFramesForQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 itemLimit:(long long)arg2 withHandler:(id /* block */)arg3;
- (id)_frameForAbsoluteIndex:(long long)arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2 interSolutionSpacing:(double)arg3 repeatAxis:(unsigned long long)arg4;
- (struct CGPoint { double x1; double x2; })_frameOffsetForAdditionalFrameOffset:(struct CGPoint { double x1; double x2; })arg1 repeatOffset:(long long)arg2 repeatAxis:(unsigned long long)arg3 interSolutionSpacing:(double)arg4;
- (unsigned long long)_layoutAxisForGroup:(id)arg1;
- (struct CGPoint { double x1; double x2; })_layoutOffsetForContainer:(id)arg1;
- (id)_normalizeVisualFormatParserItems:(id)arg1 layoutAxis:(unsigned long long)arg2;
- (struct CGPoint { double x1; double x2; })_outerContainerOffsetForGroup:(id)arg1 groupComputedSize:(struct CGSize { double x1; double x2; })arg2 container:(id)arg3 outerLayoutAxis:(unsigned long long)arg4;
- (id)_queryFramesWithQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2 itemIndexOffset:(long long)arg3 itemLimit:(long long)arg4 supplementaryRepeatOffset:(long long)arg5;
- (id)_queryFramesWithQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2 itemIndexOffset:(long long)arg3 supplementaryOffsets:(id)arg4 itemLimit:(long long)arg5;
- (void)_solve;
- (void)_solveForContainer:(id)arg1 layoutAxis:(unsigned long long)arg2 traitCollection:(id)arg3 maxFrameCount:(long long)arg4 layoutRTL:(bool)arg5 preferredSizes:(id)arg6 solutionRecursionDepth:(long long)arg7;
- (void)_solveGroup;
- (void)_solveSingleItem;
- (void)_solveWithCustomGroupItemProvider;
- (id)_supplementaryFrameWithKind:(id)arg1 absoluteIndex:(long long)arg2 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg3 interSolutionSpacing:(double)arg4 repeatAxis:(unsigned long long)arg5;
- (id)_supplementaryFrameWithKind:(id)arg1 index:(long long)arg2 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg3;
- (void)_transformGroupArrangementItemsForRTL:(id)arg1;
- (void)_updateGroupByQueryingItemsIfNeeded:(id)arg1 container:(id)arg2;
- (void)_warnIfClientSpecifiesFlexibleRootGroupEdgeSpacingAlongLayoutAxisAsNeededForGroup:(id)arg1 layoutAxis:(unsigned long long)arg2;
- (long long)auxillaryFrameCount;
- (id)auxillaryFrames;
- (struct CGPoint { double x1; double x2; })auxillaryHostAdditionalFrameOffset;
- (id)auxillaryHostAuxillaryItems;
- (long long)auxillaryHostAuxillaryKind;
- (id)auxillaryHostContainer;
- (struct CGSize { double x1; double x2; })auxillaryHostContentSize;
- (unsigned long long)auxillaryHostLayoutAxis;
- (struct CGSize { double x1; double x2; })auxillaryHostPinningContentSize;
- (id)auxillaryHostPreferredSizes;
- (bool)auxillaryHostShouldLayoutRTL;
- (id)auxillaryHostSupplementaryEnroller;
- (id)availableLayoutSpaces;
- (bool)canAccomodateItemWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)container;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentFrame;
- (struct CGSize { double x1; double x2; })contentSizeForFrameCount:(long long)arg1 layoutAxis:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (long long)frameCount;
- (id)frameForAbsoluteIndex:(long long)arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2 interSolutionSpacing:(double)arg3 repeatAxis:(unsigned long long)arg4;
- (id)initWithItem:(id)arg1;
- (id)initWithItem:(id)arg1 supplementaryEnroller:(id)arg2;
- (id)initWithItem:(id)arg1 supplementaryEnroller:(id)arg2 container:(id)arg3 layoutAxis:(unsigned long long)arg4 traitCollection:(id)arg5 maxFrameCount:(long long)arg6 layoutRTL:(bool)arg7 preferredSizes:(id)arg8 solverResult:(id)arg9 solutionRecursionDepth:(long long)arg10;
- (id)item;
- (long long)itemFrameCount;
- (id)itemFrames;
- (unsigned long long)layoutAxis;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })layoutFrame;
- (bool)layoutRTL;
- (long long)maxFrameCount;
- (id)preferredSizes;
- (id)queryFramesApplyingFrameOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)queryFramesWithItemLimit:(long long)arg1;
- (id)queryFramesWithQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)queryFramesWithQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2;
- (id)queryFramesWithQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2 itemIndexOffset:(long long)arg3 itemLimit:(long long)arg4 supplementaryRepeatOffset:(long long)arg5;
- (id)queryFramesWithQueryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg2 itemIndexOffset:(long long)arg3 supplementaryOffsets:(id)arg4 itemLimit:(long long)arg5;
- (void)setPreferredSizes:(id)arg1;
- (void)setSolveResult:(id)arg1;
- (void)setSupplementaryEnroller:(id)arg1;
- (long long)solutionRecursionDepth;
- (void)solveForContainer:(id)arg1 layoutAxis:(unsigned long long)arg2 traitCollection:(id)arg3 maxFrameCount:(long long)arg4 layoutRTL:(bool)arg5;
- (void)solveForContainer:(id)arg1 layoutAxis:(unsigned long long)arg2 traitCollection:(id)arg3 maxFrameCount:(long long)arg4 layoutRTL:(bool)arg5 preferredSizes:(id)arg6;
- (id)solveResult;
- (id)supplementaryEnroller;
- (id)supplementaryFrameWithKind:(id)arg1 absoluteIndex:(long long)arg2 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg3 interSolutionSpacing:(double)arg4 repeatAxis:(unsigned long long)arg5;
- (id)supplementaryFrameWithKind:(id)arg1 index:(long long)arg2 additionalFrameOffset:(struct CGPoint { double x1; double x2; })arg3;
- (id)supplementaryOffsets;
- (id)traitCollection;
- (id)visualDescription;

@end
