/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI
 */

@interface VUIStoreAuxMediaItem : TVPBaseMediaItem <TVPContentKeyLoading, TVPMediaItemReporting, TVPMediaItemReportingDelegate, VUIStoreFPSKeyLoaderDelegate> {
    VUIMutableBookmark * _bookmark;
    NSString * _bookmarkID;
    NSNumber * _bookmarkOverrideTime;
    bool  _disableResumeMenu;
    bool  _disableScrubbing;
    NSDictionary * _fpsAdditionalServerParams;
    NSURL * _fpsCertificateURL;
    NSError * _fpsKeyError;
    NSURL * _fpsKeyServerURL;
    bool  _ignoreExistingOfflineKeyData;
    bool  _isAudioOnly;
    bool  _isForStartingDownload;
    bool  _isHLS;
    NSObject * _parentReportingToken;
    long long  _playbackType;
    TVPPlayer * _scrubPlayer;
    bool  _sharedPurchase;
    VUIStoreFPSKeyLoader * _storeFPSKeyLoader;
    NSURL * _url;
    VUIVideoManagedObject * _videoManagedObject;
}

@property (nonatomic, retain) VUIMutableBookmark *bookmark;
@property (nonatomic, copy) NSString *bookmarkID;
@property (nonatomic, copy) NSNumber *bookmarkOverrideTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableResumeMenu;
@property (nonatomic) bool disableScrubbing;
@property (nonatomic, copy) NSDictionary *fpsAdditionalServerParams;
@property (nonatomic, copy) NSURL *fpsCertificateURL;
@property (nonatomic, retain) NSError *fpsKeyError;
@property (nonatomic, copy) NSURL *fpsKeyServerURL;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreExistingOfflineKeyData;
@property (nonatomic) bool isAudioOnly;
@property (nonatomic) bool isForStartingDownload;
@property (nonatomic) bool isHLS;
@property (nonatomic, retain) NSObject *parentReportingToken;
@property (nonatomic) long long playbackType;
@property (nonatomic, retain) TVPPlayer *scrubPlayer;
@property (nonatomic) bool sharedPurchase;
@property (nonatomic, retain) VUIStoreFPSKeyLoader *storeFPSKeyLoader;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSURL *url;
@property (nonatomic, retain) VUIVideoManagedObject *videoManagedObject;

+ (void)initialize;

- (void).cxx_destruct;
- (void)_keepKeyLoaderAlive:(id)arg1;
- (id)_offlineKeyDataForKeyRequest:(id)arg1;
- (id)_replacementErrorForPlaybackError:(id)arg1;
- (id)_replacementErrorForSharedPurchasePlaybackError:(id)arg1;
- (void)_scrubPlayerItemDidLoad:(id)arg1;
- (id)_tvpRatingDomainFromUTSRatingDomain:(id)arg1;
- (id)bookmark;
- (id)bookmarkID;
- (id)bookmarkOverrideTime;
- (void)cleanUpMediaItem;
- (void)dealloc;
- (bool)disableResumeMenu;
- (bool)disableScrubbing;
- (id)fpsAdditionalServerParams;
- (id)fpsCertificateURL;
- (id)fpsKeyError;
- (id)fpsKeyServerURL;
- (bool)hasTrait:(id)arg1;
- (bool)ignoreExistingOfflineKeyData;
- (id)initWithURL:(id)arg1;
- (id)initWithVideoManagedObject:(id)arg1 isForStartingDownload:(bool)arg2 externalBookmarkTime:(id)arg3 externalBookmarkTimeStamp:(id)arg4;
- (bool)isAudioOnly;
- (bool)isEqualToMediaItem:(id)arg1;
- (bool)isForStartingDownload;
- (bool)isHLS;
- (void)loadFairPlayStreamingKeyRequests:(id)arg1;
- (void)loadFairPlayStreamingKeyRequests:(id)arg1 completion:(id /* block */)arg2;
- (void)mediaItem:(id)arg1 didChangeFromPlaybackState:(id)arg2 toPlaybackState:(id)arg3 updatedRate:(double)arg4 player:(id)arg5;
- (void)mediaItem:(id)arg1 errorDidOccur:(id)arg2 player:(id)arg3;
- (id)mediaItemMetadataForProperty:(id)arg1;
- (id)mediaItemURL;
- (id)parentReportingToken;
- (long long)playbackType;
- (void)prepareForLoadingWithCompletion:(id /* block */)arg1;
- (id)replacementErrorForPlaybackError:(id)arg1;
- (id)reportingDelegate;
- (id)scrubPlayer;
- (void)setBookmark:(id)arg1;
- (void)setBookmarkID:(id)arg1;
- (void)setBookmarkOverrideTime:(id)arg1;
- (void)setDisableResumeMenu:(bool)arg1;
- (void)setDisableScrubbing:(bool)arg1;
- (void)setFpsAdditionalServerParams:(id)arg1;
- (void)setFpsCertificateURL:(id)arg1;
- (void)setFpsKeyError:(id)arg1;
- (void)setFpsKeyServerURL:(id)arg1;
- (void)setIgnoreExistingOfflineKeyData:(bool)arg1;
- (void)setIsAudioOnly:(bool)arg1;
- (void)setIsForStartingDownload:(bool)arg1;
- (void)setIsHLS:(bool)arg1;
- (void)setParentReportingToken:(id)arg1;
- (void)setPlaybackType:(long long)arg1;
- (void)setScrubPlayer:(id)arg1;
- (void)setSharedPurchase:(bool)arg1;
- (void)setStoreFPSKeyLoader:(id)arg1;
- (void)setUrl:(id)arg1;
- (void)setVideoManagedObject:(id)arg1;
- (bool)sharedPurchase;
- (id)storeFPSKeyLoader;
- (void)storeFPSKeyLoader:(id)arg1 didLoadOfflineKeyData:(id)arg2 forKeyRequest:(id)arg3;
- (void)storeFPSKeyLoader:(id)arg1 willFailWithError:(id)arg2 forKeyRequest:(id)arg3;
- (void)updateBookmarkWithSuggestedTime:(double)arg1 forElapsedTime:(double)arg2 duration:(double)arg3 playbackOfMediaItemIsEnding:(bool)arg4;
- (void)updateOfflineKeyWithIdentifier:(id)arg1 updatedOfflineKeyData:(id)arg2;
- (id)url;
- (id)videoManagedObject;

@end
