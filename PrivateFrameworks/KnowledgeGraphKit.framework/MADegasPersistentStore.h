/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/KnowledgeGraphKit.framework/KnowledgeGraphKit
 */

@interface MADegasPersistentStore : NSObject <MAPersistentStoreProtocol> {
    NSMutableDictionary * _attrIdByPropertyName;
    unsigned long long  _batchCounter;
    struct Database { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_1_1_1; } x1; struct sqlite3 {} *x2; struct LabelTable { int (**x_3_1_1)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_6_1; unsigned long long x_1_6_2; unsigned long long x_1_6_3; } x_1_5_1; struct __short { BOOL x_2_6_1[23]; struct { unsigned char x_2_7_1; } x_2_6_2; } x_1_5_2; struct __raw { unsigned long long x_3_6_1[3]; } x_1_5_3; } x_1_4_1; } x_1_3_1; } x_2_2_1; } x_3_1_2; struct sqlite3 {} *x_3_1_3; struct shared_ptr<degas::Statement> { struct Statement {} *x_4_2_1; struct __shared_weak_count {} *x_4_2_2; } x_3_1_4; struct shared_ptr<degas::Statement> { struct Statement {} *x_5_2_1; struct __shared_weak_count {} *x_5_2_2; } x_3_1_5; struct shared_ptr<degas::Statement> { struct Statement {} *x_6_2_1; struct __shared_weak_count {} *x_6_2_2; } x_3_1_6; struct shared_ptr<degas::Statement> { struct Statement {} *x_7_2_1; struct __shared_weak_count {} *x_7_2_2; } x_3_1_7; } x3; } * _database;
    NSMutableDictionary * _degasLabelByDomain;
    NSMutableDictionary * _degasLabelByLabelName;
    NSMutableDictionary * _domainByDegasLabel;
    NSURL * _fileURL;
    NSMutableDictionary * _labelNameByDegasLabel;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    unsigned long long  _markerCounter;
    NSMutableDictionary * _propertyNameByAttrId;
    unsigned long long  _transactionCounter;
}

@property (nonatomic, retain) NSMutableDictionary *attrIdByPropertyName;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSMutableDictionary *degasLabelByDomain;
@property (nonatomic, retain) NSMutableDictionary *degasLabelByLabelName;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool doesCascadeEdgeDelete;
@property (nonatomic, retain) NSMutableDictionary *domainByDegasLabel;
@property (nonatomic, readonly) NSURL *fileURL;
@property (nonatomic, readonly) NSUUID *graphIdentifier;
@property (nonatomic) unsigned long long graphVersion;
@property (nonatomic, readonly) bool hasMarker;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *labelNameByDegasLabel;
@property (nonatomic, retain) NSMutableDictionary *propertyNameByAttrId;
@property (readonly) Class superclass;

+ (id)_markerFilePathForPersistentStoreFileURL:(id)arg1;
+ (bool)copyFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+ (void)deleteClosedDatabaseFilesAtBaseURL:(id)arg1;
+ (void)deleteClosedDatabaseFilesAtStoreURL:(id)arg1;
+ (void)deleteMarkerAtURL:(id)arg1;
+ (bool)destroyAtURL:(id)arg1 error:(id*)arg2;
+ (id)errorForKGDBReturnCode:(int)arg1 description:(id)arg2;
+ (bool)hasMarker:(id)arg1;
+ (bool)migrateFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+ (void)performBitmapTest;
+ (id)persistentStoreFileExtension;
+ (bool)setMarkerAtURL:(id)arg1;

- (void).cxx_destruct;
- (void)_enumerateModelEdgesForCursor:(struct EdgeCursor { struct shared_ptr<degas::Statement> { struct Statement {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; }*)arg1 withBlock:(id /* block */)arg2;
- (void)_enumerateModelNodesForCursor:(struct NodeCursor { struct shared_ptr<degas::Statement> { struct Statement {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; }*)arg1 withBlock:(id /* block */)arg2;
- (id)_markerFilePath;
- (void)_setModelEdgePropertyValue:(id)arg1 forKey:(id)arg2 andIdentifier:(long long)arg3;
- (void)_setModelNodePropertyValue:(id)arg1 forKey:(id)arg2 andIdentifier:(long long)arg3;
- (void)addEdge:(id)arg1 requiresTesting:(bool)arg2;
- (void)addNode:(id)arg1 requiresTesting:(bool)arg2;
- (void)appendPropertyValuesForElementId:(unsigned long long)arg1 cursors:(struct map<unsigned long long, degas::AttributeInstanceCursor, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceCursor> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; }*)arg2 dataTypes:(struct map<unsigned long long, degas::DataType, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::DataType> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::DataType> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::DataType>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; }*)arg3 dictionary:(id)arg4;
- (id)attrIdByPropertyName;
- (unsigned long long)attrIdForPropertyName:(id)arg1 sampleValue:(id)arg2;
- (void)beginTransactionIfNeeded;
- (void)checkTransaction;
- (void)closePersistentStore;
- (void)dealloc;
- (id)degasLabelByDomain;
- (id)degasLabelByLabelName;
- (unsigned long long)degasLabelIdForLabelName:(id)arg1;
- (unsigned long long)degasLabelIdForMatisseDomain:(unsigned short)arg1;
- (void)deleteMarker;
- (bool)doesCascadeEdgeDelete;
- (id)domainByDegasLabel;
- (void)enterBatch;
- (void)enumerateModelEdgesForDomains:(id)arg1 withBlock:(id /* block */)arg2;
- (void)enumerateModelEdgesForIdentifiers:(id)arg1 withBlock:(id /* block */)arg2;
- (void)enumerateModelEdgesForLabels:(id)arg1 withBlock:(id /* block */)arg2;
- (void)enumerateModelEdgesPropertiesWithBlock:(id /* block */)arg1;
- (void)enumerateModelEdgesWithBlock:(id /* block */)arg1;
- (void)enumerateModelNodesForDomains:(id)arg1 withBlock:(id /* block */)arg2;
- (void)enumerateModelNodesForIdentifiers:(id)arg1 withBlock:(id /* block */)arg2;
- (void)enumerateModelNodesForLabels:(id)arg1 withBlock:(id /* block */)arg2;
- (void)enumerateModelNodesPropertiesWithBlock:(id /* block */)arg1;
- (void)enumerateModelNodesWithBlock:(id /* block */)arg1;
- (void)enumeratePropertiesForDataTypes:(struct map<unsigned long long, degas::DataType, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::DataType> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::DataType> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::DataType>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; }*)arg1 usingCursors:(struct map<unsigned long long, degas::AttributeInstanceCursor, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceCursor> > > { struct __tree<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; }*)arg2 withBlock:(id /* block */)arg3;
- (id)fileURL;
- (id)graphIdentifier;
- (unsigned long long)graphVersion;
- (bool)hasMarker;
- (id)initWithFileURL:(id)arg1 options:(long long)arg2;
- (void)invalidateMemoryCaches;
- (void)invalidatePersistentStores;
- (id)labelNameByDegasLabel;
- (id)labelforDegasLabelId:(unsigned long long)arg1;
- (void)leaveBatch;
- (void)leaveTransaction;
- (void)leaveTransactionWithRollback;
- (void)loadLabelsAndDomains;
- (void)loadPropertyNames;
- (id)localLabelNameForDegasLabel:(unsigned long long)arg1;
- (short)matisseDomainForDegasLabel:(unsigned long long)arg1;
- (bool)migrateToURL:(id)arg1 error:(id*)arg2;
- (id)propertyNameByAttrId;
- (id)propertyNameForAttrId:(unsigned long long)arg1;
- (void)removeModelEdgeForIdentifier:(unsigned long long)arg1;
- (void)removeModelEdgePropertiesForIdentifier:(long long)arg1;
- (void)removeModelEdgePropertyForKey:(id)arg1 andIdentifier:(long long)arg2;
- (void)removeModelEdgesForIdentifiers:(id)arg1;
- (void)removeModelEdgesPropertiesForIdentifiers:(id)arg1;
- (void)removeModelNodeForIdentifier:(unsigned long long)arg1;
- (void)removeModelNodePropertiesForIdentifier:(long long)arg1;
- (void)removeModelNodePropertyForKey:(id)arg1 andIdentifier:(long long)arg2;
- (void)removeModelNodesForIdentifiers:(id)arg1;
- (void)removeModelNodesPropertiesForIdentifiers:(id)arg1;
- (void)removePreviousPersistenceStore;
- (id)returnLabelAndDomain:(short*)arg1 forDegasLabels:(struct Bitmap { unsigned long long x1; unsigned long long x2; struct vector<degas::BitsetPtr, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr {} *x_3_1_1; struct BitsetPtr {} *x_3_1_2; struct __compressed_pair<degas::BitsetPtr *, std::__1::allocator<degas::BitsetPtr> > { struct BitsetPtr {} *x_3_2_1; } x_3_1_3; } x3; bool x4; }*)arg2;
- (void)save:(id /* block */)arg1;
- (void)setAttrIdByPropertyName:(id)arg1;
- (void)setDegasLabelByDomain:(id)arg1;
- (void)setDegasLabelByLabelName:(id)arg1;
- (void)setDomainByDegasLabel:(id)arg1;
- (void)setGraphVersion:(unsigned long long)arg1;
- (void)setLabel:(id)arg1 forDegasLabel:(unsigned long long)arg2;
- (void)setLabelNameByDegasLabel:(id)arg1;
- (void)setMarker;
- (void)setModelEdgeProperties:(id)arg1 forIdentifier:(long long)arg2 clobberExisting:(bool)arg3;
- (void)setModelEdgePropertyValue:(id)arg1 forKey:(id)arg2 andIdentifier:(long long)arg3;
- (void)setModelNodeProperties:(id)arg1 forIdentifier:(long long)arg2 clobberExisting:(bool)arg3;
- (void)setModelNodePropertyValue:(id)arg1 forKey:(id)arg2 andIdentifier:(long long)arg3;
- (void)setPropertyNameByAttrId:(id)arg1;

@end
