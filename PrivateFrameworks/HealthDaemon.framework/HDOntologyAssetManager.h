/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
 */

@interface HDOntologyAssetManager : NSObject <HDPeriodicActivityDelegate> {
    id /* block */  _AWDMetricPosterBlock;
    bool  _assetDownloadEnabled;
    _HKMobileAssetDownloadManager * _assetDownloadManager;
    NSURL * _assetFileURL;
    HDPeriodicActivity * _catalogUpdatePeriodicActivity;
    NSMutableDictionary * _completionsByActivityName;
    MAAsset * _currentOntologyAsset;
    HDDaemon * _daemon;
    NSObject<OS_dispatch_queue> * _downloadManagerCallbackQueue;
    NSObject<OS_dispatch_queue> * _handlerInvocationQueue;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _ivarLock;
    MAAsset * _latestOntologyAsset;
    int  _notificationRegistrationToken;
    NSMutableDictionary * _registeredHandlers;
    long long  _simulatedCompatibilityVersion;
}

@property (nonatomic, copy) id /* block */ AWDMetricPosterBlock;
@property (nonatomic) bool assetDownloadEnabled;
@property (nonatomic, readonly) _HKMobileAssetDownloadManager *assetDownloadManager;
@property (nonatomic, copy) NSURL *assetFileURL;
@property (nonatomic, readonly) long long assetFileVersion;
@property (nonatomic, retain) HDPeriodicActivity *catalogUpdatePeriodicActivity;
@property (nonatomic, readonly, copy) NSMutableDictionary *completionsByActivityName;
@property (nonatomic, retain) MAAsset *currentOntologyAsset;
@property (nonatomic, readonly) HDDaemon *daemon;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MAAsset *latestOntologyAsset;
@property (nonatomic) long long simulatedCompatibilityVersion;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id /* block */)AWDMetricPosterBlock;
- (id)_bestAssetInArray:(id)arg1;
- (double)_catalogUpdateIntervalOverride;
- (void)_downloadManagerCallbackQueue_assetDownloadDidComplete:(id)arg1;
- (void)_downloadManagerCallbackQueue_assetDownloadDidFail:(id)arg1;
- (void)_downloadManagerCallbackQueue_catalogUpdateDidComplete:(id)arg1;
- (void)_downloadManagerCallbackQueue_catalogUpdateDidFail:(id)arg1;
- (long long)_effectiveSystemCompatibilityVersion;
- (long long)_hoursSinceLastModifiedForFileAtURL:(id)arg1;
- (bool)_ignoreAssetEqualityComparison;
- (id)_lastModifiedDateForFileAtURL:(id)arg1;
- (id)_localFileURLForAsset:(id)arg1;
- (long long)_lock_assetAvailability;
- (id)_lock_currentOntologyAssetFileURL;
- (void)_lock_invokeAvailabilityHandlers;
- (void)_lock_invokeCompletionForPeriodicActivityName:(id)arg1 withResult:(long long)arg2 error:(id)arg3;
- (bool)_lock_saveContentInfoForAsset:(id)arg1;
- (void)_lock_schedulePeriodicActivity;
- (void)_lock_unschedulePeriodicActivity;
- (id)_newAssetDownloadManager;
- (id)_newPeriodicActivityWithName:(id)arg1;
- (double)_normalIntervalForActivityNamed:(id)arg1;
- (void)_postAWDMetricEventWithAssetDownloadPhase:(int)arg1;
- (void)_registerNotifyDispatchHandler;
- (double)_retryIntervalForActivityNamed:(id)arg1;
- (void)_startAssetDownload;
- (void)_updateAssetCatalogForReason:(unsigned long long)arg1;
- (id)_userDefaultOverrideAssetFileURL;
- (bool)assetDownloadEnabled;
- (id)assetDownloadManager;
- (id)assetFileURL;
- (long long)assetFileVersion;
- (id)catalogUpdatePeriodicActivity;
- (bool)clearUserDefaultOverrideAssetFileURLWithError:(id*)arg1;
- (id)completionsByActivityName;
- (id)currentOntologyAsset;
- (id)daemon;
- (void)dealloc;
- (id)initWithDaemon:(id)arg1;
- (void)invalidateAndWait;
- (id)latestOntologyAsset;
- (void)performPeriodicActivity:(id)arg1 completion:(id /* block */)arg2;
- (void)periodicActivity:(id)arg1 configureXPCActivityCriteria:(id)arg2;
- (id)registerAssetAvailabilityHandler:(id /* block */)arg1;
- (void)setAWDMetricPosterBlock:(id /* block */)arg1;
- (void)setAssetDownloadEnabled:(bool)arg1;
- (void)setAssetFileURL:(id)arg1;
- (void)setCatalogUpdatePeriodicActivity:(id)arg1;
- (void)setCurrentOntologyAsset:(id)arg1;
- (void)setLatestOntologyAsset:(id)arg1;
- (void)setSimulatedCompatibilityVersion:(long long)arg1;
- (id)setUserDefaultOverrideAssetFileURL:(id)arg1 error:(id*)arg2;
- (long long)simulatedCompatibilityVersion;
- (void)unregisterHandlerForToken:(id)arg1;

@end
