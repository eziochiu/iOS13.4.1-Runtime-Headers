/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHStrokeGroup : NSObject {
    long long  _ancestorIdentifier;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _bounds;
    long long  _classification;
    <CHStrokeIdentifier> * _firstStrokeIdentifier;
    struct CGPoint { 
        double x; 
        double y; 
    }  _firstStrokeOrigin;
    double  _groupingConfidence;
    <CHStrokeIdentifier> * _lastStrokeIdentifier;
    NSString * _strategyIdentifier;
    NSSet * _strokeIdentifiers;
    long long  _uniqueIdentifier;
}

@property (nonatomic, readonly) long long ancestorIdentifier;
@property (nonatomic, readonly) struct CGVector { double x1; double x2; } averageWritingOrientation;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) long long classification;
@property (nonatomic, readonly) <CHStrokeIdentifier> *firstStrokeIdentifier;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } firstStrokeOrigin;
@property (nonatomic, readonly) double groupingConfidence;
@property (nonatomic, readonly) <CHStrokeIdentifier> *lastStrokeIdentifier;
@property (nonatomic, readonly) NSString *strategyIdentifier;
@property (nonatomic, readonly) NSSet *strokeIdentifiers;
@property (nonatomic, readonly) long long uniqueIdentifier;

+ (long long)_newStrokeGroupUniqueIdentifier;
+ (bool)isStrokeGroupSet:(id)arg1 equivalentToStrokeGroupSet:(id)arg2;

- (long long)ancestorIdentifier;
- (struct CGVector { double x1; double x2; })averageWritingOrientation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (long long)classification;
- (void)dealloc;
- (id)description;
- (id)firstStrokeIdentifier;
- (struct CGPoint { double x1; double x2; })firstStrokeOrigin;
- (id)groupByAddingStrokeIdentifiers:(id)arg1 removingStrokeIdentifiers:(id)arg2 firstStrokeIdentifier:(id)arg3 lastStrokeIdentifier:(id)arg4 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 classification:(long long)arg6 groupingConfidence:(double)arg7 firstStrokeOrigin:(struct CGPoint { double x1; double x2; })arg8;
- (double)groupingConfidence;
- (id)init;
- (id)initWithAncestorIdentifier:(long long)arg1 strokeIdentifiers:(id)arg2 firstStrokeIdentifier:(id)arg3 lastStrokeIdentifier:(id)arg4 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 classification:(long long)arg6 groupingConfidence:(double)arg7 strategyIdentifier:(id)arg8 firstStrokeOrigin:(struct CGPoint { double x1; double x2; })arg9;
- (id)initWithStrokeIdentifiers:(id)arg1 firstStrokeIdentifier:(id)arg2 lastStrokeIdentifier:(id)arg3 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 classification:(long long)arg5 groupingConfidence:(double)arg6 strategyIdentifier:(id)arg7 firstStrokeOrigin:(struct CGPoint { double x1; double x2; })arg8;
- (bool)isEquivalentToStrokeGroup:(id)arg1;
- (id)lastStrokeIdentifier;
- (id)strategyIdentifier;
- (id)strokeIdentifiers;
- (long long)uniqueIdentifier;

@end
