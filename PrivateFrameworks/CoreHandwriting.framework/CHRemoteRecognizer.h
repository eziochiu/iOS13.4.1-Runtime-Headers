/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHRemoteRecognizer : NSObject <CHRecognizing> {
    NSXPCConnection * __connection;
    NSCharacterSet * _activeCharacterSet;
    int  _contentType;
    NSLocale * _locale;
    unsigned long long  _maxRecognitionResultCount;
    struct CGSize { 
        double width; 
        double height; 
    }  _minimumDrawingSize;
    long long  _priority;
    int  _recognitionMode;
    bool  _shouldEnableCachingIfAvailable;
    bool  _shouldUseTextReplacements;
}

@property (nonatomic, readonly) NSXPCConnection *_connection;
@property (nonatomic, retain) NSCharacterSet *activeCharacterSet;
@property (nonatomic) int contentType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSLocale *locale;
@property (nonatomic) unsigned long long maxRecognitionResultCount;
@property (nonatomic) struct CGSize { double x1; double x2; } minimumDrawingSize;
@property (nonatomic) long long priority;
@property (nonatomic, readonly) int recognitionMode;
@property (nonatomic) bool shouldEnableCachingIfAvailable;
@property (nonatomic) bool shouldUseTextReplacements;
@property (readonly) Class superclass;

+ (long long)maxRequestStrokeCountForLocale:(id)arg1;

- (id)_connection;
- (id)_recognitionRequestWithDrawing:(id)arg1 options:(id)arg2;
- (id)_recognitionResultForRequest:(id)arg1 error:(id*)arg2;
- (void)_setupXPCConnectionIfNeeded;
- (void)_teardownXPCConnection;
- (id)activeCharacterSet;
- (int)contentType;
- (void)dealloc;
- (unsigned long long)hash;
- (id)initWithMode:(int)arg1 locale:(id)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToRemoteRecognizer:(id)arg1;
- (id)locale;
- (unsigned long long)maxRecognitionResultCount;
- (struct CGSize { double x1; double x2; })minimumDrawingSize;
- (long long)priority;
- (int)recognitionMode;
- (void)setActiveCharacterSet:(id)arg1;
- (void)setContentType:(int)arg1;
- (void)setMaxRecognitionResultCount:(unsigned long long)arg1;
- (void)setMinimumDrawingSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPriority:(long long)arg1;
- (void)setShouldEnableCachingIfAvailable:(bool)arg1;
- (void)setShouldUseTextReplacements:(bool)arg1;
- (bool)shouldEnableCachingIfAvailable;
- (bool)shouldUseTextReplacements;
- (id)textRecognitionResultForDrawing:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)transcriptionPathsForTokenizedTextResult:(id)arg1 withHistory:(id)arg2 scores:(id*)arg3 error:(id*)arg4;

@end
