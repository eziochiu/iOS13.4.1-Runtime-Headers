/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoreHandwriting.framework/CoreHandwriting
 */

@interface CHSegmentDescriptor : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _contextBounds;
    CHCutPoint * _endCutPoint;
    NSMutableArray * _relatedSegmentIDs;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _segmentBounds;
    NSNumber * _segmentID;
    CHCutPoint * _startCutPoint;
    double  _trailingCharBoundaryProbability;
    double  _trailingSpaceProbability;
    double  _trailingSpaceRatio;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contextBounds;
@property (nonatomic, readonly) CHCutPoint *endCutPoint;
@property (nonatomic, readonly) NSArray *relatedSegmentIDs;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } segmentBounds;
@property (nonatomic, readonly) NSNumber *segmentID;
@property (nonatomic, readonly) CHCutPoint *startCutPoint;
@property (nonatomic) double trailingCharBoundaryProbability;
@property (nonatomic) double trailingSpaceProbability;
@property (nonatomic) double trailingSpaceRatio;

+ (void)_computeLocalContextForSegments:(id)arg1 withContextSizeRadius:(long long)arg2;
+ (void)_resassignSpaceProbabilitiesFromDelayedSegments:(id)arg1 toSegments:(id)arg2;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingBoxFromSegmentID:(long long)arg1 toSegmentID:(long long)arg2 withSegments:(id)arg3 withSourceDrawing:(id)arg4;
+ (void)computeRelatedSegments:(id)arg1 withDelayedSegments:(id)arg2;
+ (id)generateSegmentsFromDrawing:(id)arg1;
+ (id)generateSegmentsFromDrawing:(id)arg1 withSegmentationPoints:(id)arg2 buildingContextBoundsWithRadius:(long long)arg3 spaceProbabilities:(const struct vector<double, std::__1::allocator<double> > { double *x1; double *x2; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x_3_1_1; } x3; }*)arg4 charBoundaryProbabilities:(const struct vector<double, std::__1::allocator<double> > { double *x1; double *x2; struct __compressed_pair<double *, std::__1::allocator<double> > { double *x_3_1_1; } x3; }*)arg5 extractDelayedStrokeIDs:(const struct set<long, std::__1::less<long>, std::__1::allocator<long> > { struct __tree<long, std::__1::less<long>, std::__1::allocator<long> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<long, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::less<long> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; }*)arg6 extractedDelayedSegments:(id*)arg7;
+ (long long)indexForSegmentID:(id)arg1 fromSegments:(id)arg2;
+ (id)resolvedCutPoint:(id)arg1 withReferenceDrawing:(id)arg2;

- (void)_addRelatedSegmentID:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contextBounds;
- (void)dealloc;
- (id)endCutPoint;
- (id)initWithSegmentID:(id)arg1 startCutPoint:(id)arg2 endCutPoint:(id)arg3 trailingSpaceProbability:(double)arg4 trailingCharBoundaryProbability:(double)arg5 referenceDrawing:(id)arg6;
- (bool)isSinglePointSegment;
- (id)relatedSegmentIDs;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })segmentBounds;
- (id)segmentID;
- (void)setContextBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setTrailingCharBoundaryProbability:(double)arg1;
- (void)setTrailingSpaceProbability:(double)arg1;
- (void)setTrailingSpaceRatio:(double)arg1;
- (id)startCutPoint;
- (long long)strokeCount;
- (id)strokeIndexSet;
- (double)trailingCharBoundaryProbability;
- (double)trailingSpaceProbability;
- (double)trailingSpaceRatio;

@end
