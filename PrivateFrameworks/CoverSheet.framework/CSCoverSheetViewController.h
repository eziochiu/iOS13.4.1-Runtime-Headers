/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoverSheet.framework/CoverSheet
 */

@interface CSCoverSheetViewController : UIViewController <BSDescriptionProviding, CSCoverSheetViewControllerProtocol, CSCoverSheetViewDelegate, CSCoverSheetViewTransitionSource, CSDateTimeLayoutAggregating, CSInterstitialTransitionDelegate, CSLegibilityProviderDelegate, CSLocketTransitionDelegate, CSLocketViewControllerDelegate, CSNotificationClearingTriggerDelegate, CSNotificationDestination, CSPasscodeViewControllerDelegate, CSPersistentContentLayoutProviding, CSScrollGestureControllerDelegate, CSTimerViewControllerDelegate, FBSDisplayLayoutPublisherObserving, SBCoverSheetSlidingViewControllerContentViewController, SBFIrisWallpaperViewDelegate, SBFTodayOverlayObserving, SBLockScreenActionProvider, UIGestureRecognizerDelegate, _UISettingsKeyObserver> {
    double  _accessibilityTimeLabelBaselineY;
    double  _accessibilityTimeSubtitleBaselineY;
    CSAppearance * _activeAppearance;
    CSBehavior * _activeBehavior;
    CSPresentation * _activePresentation;
    NSArray * _allowedPageViewControllers;
    double  _appearanceFraction;
    NSHashTable * _applicationHosters;
    <CSApplicationLaunching> * _applicationLauncher;
    bool  _authenticated;
    double  _backlightLevel;
    <CSCameraPrewarming> * _cameraPrewarmer;
    SBFLockScreenDateSubtitleView * _chargingLabel;
    CSChargingViewController * _chargingViewController;
    BSTimer * _chargingViewControllerTimer;
    id /* block */  _chargingViewTimerHandler;
    bool  _contentAboveIsControlCenter;
    <CSCoverSheetContextProviding> * _coverSheetContext;
    <CSCoverSheetViewTransitionSource> * _currentTransitionSource;
    SBFLockScreenActionContext * _customLockScreenActionContext;
    SBFLockScreenDateViewController * _dateViewController;
    <CSCoverSheetViewControllerDelegate> * _delegate;
    CSDismissableModalViewController * _dismissableModalViewController;
    <CSNotificationDispatcher> * _dispatcher;
    FBDisplayLayoutTransition * _displayLayoutTransition;
    long long  _effectiveInterfaceOrientationOverride;
    <CSEmergencyCalling> * _emergencyCaller;
    NSHashTable * _externalAppearanceProviders;
    NSHashTable * _externalBehaviorProviders;
    NSHashTable * _externalEventHandlers;
    NSHashTable * _externalLockProviders;
    NSHashTable * _externalPresentationProviders;
    UIStatusBar * _fakeStatusBar;
    CSFixedFooterViewController * _fixedFooterViewController;
    bool  _hasContentAboveCoverSheet;
    CSHomeButtonShowPasscodeRecognizer * _homeButtonShowPasscodeRecognizer;
    CSHomeButtonSuppressAfterUnlockRecognizer * _homeButtonSuppressAfterUnlockRecognizer;
    <CSIdleTimerControlling> * _idleTimerController;
    double  _initialInterstitialTransitionProgress;
    SBFSteppedAnimationTimingFunctionCalculator * _interactiveAnimationCalculator;
    CSInterstitialTransitionSource * _interstitialTransitionSource;
    bool  _interstitialTransitionStartedFromPasscodePresented;
    CSBehavior * _irisBehavior;
    bool  _irisPlayerIsInteracting;
    <SBFIrisWallpaperView> * _irisWallpaperView;
    int  _lastAppearState;
    unsigned long long  _lastSettledPageIndex;
    CSLayoutStrategy * _layoutStrategy;
    <CSLegibilityProviding> * _legibilityProvider;
    bool  _listeningForDisplayLayoutChanges;
    CSAppearance * _localAppearance;
    CSBehavior * _localBehavior;
    <SBFLockOutStatusProvider> * _lockOutController;
    SBLockScreenDefaults * _lockScreenDefaults;
    SBFLockScreenWakeAnimator * _lockScreenWakeAnimator;
    CSLocketForcePressGestureRecognizer * _locketGestureRecognizer;
    CSLocketTransitionSource * _locketTransitionSource;
    CSMainPageContentViewController * _mainPageContentViewController;
    CSModalPresentationViewController * _modalPresentationController;
    bool  _needsAccessibilityContentSizesUpdate;
    CSNotificationClearingTrigger * _notificationClearingTrigger;
    CSNotificationDispatcher * _notificationDispatcher;
    NSHashTable * _observers;
    <CSOrientationUpdateControlling> * _orientationUpdateController;
    NSArray * _pageViewControllers;
    long long  _participantState;
    CSPowerChangeObserver * _powerChangeObserver;
    bool  _preventAppearanceUpdatesForRotation;
    CSAppearance * _previousAppearance;
    CSLockScreenSettings * _prototypeSettings;
    CSProudLockViewController * _proudLockViewController;
    CSQuickActionsViewController * _quickActionsViewController;
    UITapGestureRecognizer * _quickNoteGestureRecognizer;
    bool  _screenOffMode;
    bool  _screenOnForLiftToWake;
    <SBFScreenWakeAnimationControlling> * _screenWakeAnimationController;
    CSScrollGestureController * _scrollGestureController;
    bool  _shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes;
    <CSSpotlightPresenting> * _spotlightPresenter;
    UIVisualEffectView * _statusBarBackgroundView;
    bool  _statusBarInLockdownForTeardown;
    <BSInvalidatable> * _suspendWallpaperAnimationAssertion;
    CSTeachableMomentsContainerViewController * _teachableMomentsContainerViewController;
    CSTimerViewController * _timerViewController;
    <SBFTodayOverlayControlling><CSExternalBehaviorProviding><CSExternalEventHandling> * _todayOverlayController;
    struct { 
        double value; 
        struct { 
            struct { 
                double value; 
                bool inclusive; 
            } start; 
            struct { 
                double value; 
                bool inclusive; 
            } end; 
        } interval; 
        long long mode; 
    }  _transitionContext;
    bool  _transitionDisabledIdleTimer;
    long long  _transitionType;
    CSUserPresenceMonitor * _userPresenceMonitor;
    SBWallpaperAggdLogger * _wallpaperAggdLogger;
    <CSWallpaperColorProvider> * _wallpaperColorProvider;
    UIGestureRecognizer * _wallpaperGestureRecognizer;
    bool  _wantsAccessibilityContentSizes;
}

@property (nonatomic, copy) CSAppearance *activeAppearance;
@property (nonatomic, copy) CSBehavior *activeBehavior;
@property (nonatomic, retain) CSPresentation *activePresentation;
@property (getter=_allowedPageViewControllers, setter=_setAllowedPageViewControllers:, nonatomic, copy) NSArray *allowedPageViewControllers;
@property (nonatomic) double appearanceFraction;
@property (nonatomic, readonly, copy) NSString *appearanceIdentifier;
@property (nonatomic) <CSApplicationLaunching> *applicationLauncher;
@property (getter=isAuthenticated, nonatomic) bool authenticated;
@property (nonatomic, readonly) UIColor *backgroundColor;
@property (nonatomic, readonly) long long backgroundStyle;
@property (nonatomic) double backlightLevel;
@property (nonatomic, retain) <CSCameraPrewarming> *cameraPrewarmer;
@property (nonatomic, readonly, copy) NSSet *components;
@property (nonatomic, readonly) bool contentOccludesBackground;
@property (nonatomic, readonly, copy) NSString *coverSheetIdentifier;
@property (nonatomic, readonly) CSCoverSheetView *coverSheetView;
@property (nonatomic, retain) <CSCoverSheetViewTransitionSource> *currentTransitionSource;
@property (nonatomic, readonly) double customIdleExpirationTimeout;
@property (nonatomic, readonly) double customIdleWarningTimeout;
@property (getter=_customLockScreenActionContext, nonatomic, retain) SBFLockScreenActionContext *customLockScreenActionContext;
@property (nonatomic, retain) SBFLockScreenDateViewController *dateViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CSCoverSheetViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) <CSNotificationDispatcher> *dispatcher;
@property (nonatomic, readonly) long long effectiveInterfaceOrientation;
@property (nonatomic) long long effectiveInterfaceOrientationOverride;
@property (nonatomic) <CSEmergencyCalling> *emergencyCaller;
@property (nonatomic, readonly) bool externalLockProvidersRequireUnlock;
@property (nonatomic, readonly) bool externalLockProvidersShowPasscode;
@property (nonatomic, readonly, copy) CSPresentation *externalPresentation;
@property (nonatomic, retain) UIStatusBar *fakeStatusBar;
@property (nonatomic, readonly) bool hasContentAboveCoverSheet;
@property (readonly) unsigned long long hash;
@property (nonatomic) <CSIdleTimerControlling> *idleTimerController;
@property (nonatomic, readonly) long long idleTimerDuration;
@property (nonatomic, readonly) long long idleTimerMode;
@property (nonatomic, readonly) long long idleWarnMode;
@property (nonatomic, retain) CSInterstitialTransitionSource *interstitialTransitionSource;
@property (nonatomic, retain) CSBehavior *irisBehavior;
@property (nonatomic) bool irisPlayerIsInteracting;
@property (nonatomic, retain) <SBFIrisWallpaperView> *irisWallpaperView;
@property (nonatomic) unsigned long long lastSettledPageIndex;
@property (nonatomic, retain) CSLayoutStrategy *layoutStrategy;
@property (nonatomic, retain) <CSLegibilityProviding> *legibilityProvider;
@property (nonatomic, readonly) _UILegibilitySettings *legibilitySettings;
@property (nonatomic, copy) CSAppearance *localAppearance;
@property (nonatomic, retain) CSBehavior *localBehavior;
@property (getter=_lockOutController, setter=_setLockOutController:, nonatomic, retain) <SBFLockOutStatusProvider> *lockOutController;
@property (nonatomic, readonly) <SBFScreenWakeAnimationTarget> *lockScreenWakeAnimator;
@property (nonatomic, retain) CSLocketTransitionSource *locketTransitionSource;
@property (setter=_setMainPageContentViewController:, nonatomic, retain) CSMainPageContentViewController *mainPageContentViewController;
@property (nonatomic, readonly) CSPresentationViewController *mainPagePresentationViewController;
@property (nonatomic, retain) CSModalPresentationViewController *modalPresentationController;
@property (nonatomic, readonly) long long notificationBehavior;
@property (nonatomic, readonly) <SBNotificationDestination> *notificationDestination;
@property (nonatomic, retain) <CSOrientationUpdateControlling> *orientationUpdateController;
@property (setter=_setPageViewControllers:, nonatomic, copy) NSArray *pageViewControllers;
@property (nonatomic, readonly) long long participantState;
@property (nonatomic, retain) CSPowerChangeObserver *powerChangeObserver;
@property (nonatomic, readonly) long long presentationAltitude;
@property (nonatomic, readonly) <UICoordinateSpace> *presentationCoordinateSpace;
@property (nonatomic, readonly) long long presentationPriority;
@property (nonatomic, readonly, copy) NSArray *presentationRegions;
@property (nonatomic, readonly) long long presentationStyle;
@property (nonatomic, readonly) long long presentationTransition;
@property (nonatomic, readonly) long long presentationType;
@property (nonatomic) <CSCoverSheetViewPresenting> *presenter;
@property (nonatomic, copy) CSAppearance *previousAppearance;
@property (nonatomic, readonly) long long proximityDetectionMode;
@property (nonatomic, readonly) unsigned long long restrictedCapabilities;
@property (getter=_screenWakeAnimationController, setter=_setScreenWakeAnimationController:, nonatomic, retain) <SBFScreenWakeAnimationControlling> *screenWakeAnimationController;
@property (nonatomic, readonly) long long scrollingStrategy;
@property (nonatomic, readonly) bool shouldShowLockStatusBarTime;
@property (nonatomic) bool shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes;
@property (getter=isShowingMediaControls, nonatomic) bool showingMediaControls;
@property (nonatomic) <CSSpotlightPresenting> *spotlightPresenter;
@property (nonatomic, retain) UIVisualEffectView *statusBarBackgroundView;
@property (readonly) Class superclass;
@property (nonatomic, retain) <BSInvalidatable> *suspendWallpaperAnimationAssertion;
@property (nonatomic, retain) CSTimerViewController *timerViewController;
@property (nonatomic, retain) <SBFTodayOverlayControlling><CSExternalBehaviorProviding><CSExternalEventHandling> *todayOverlayController;
@property (nonatomic, readonly) struct { double x1; struct { struct { double x_1_2_1; bool x_1_2_2; } x_2_1_1; struct { double x_2_2_1; bool x_2_2_2; } x_2_1_2; } x2; long long x3; } transitionContext;
@property (getter=isTransitioning, nonatomic, readonly) bool transitioning;
@property (nonatomic, retain) SBWallpaperAggdLogger *wallpaperAggdLogger;
@property (nonatomic) <CSWallpaperColorProvider> *wallpaperColorProvider;
@property (nonatomic, retain) UIGestureRecognizer *wallpaperGestureRecognizer;

- (void).cxx_destruct;
- (id)__currentDesiredAppearanceWithStartIndex:(unsigned long long*)arg1 targetIndex:(unsigned long long*)arg2 targetAppearance:(id*)arg3 targetPresentation:(id*)arg4 modalAppearance:(id*)arg5 proudLockAppearance:(id*)arg6;
- (void)_activateCameraAnimated:(bool)arg1 actions:(id)arg2 completion:(id /* block */)arg3;
- (id)_activeViewControllers;
- (void)_actuallyUpdateUIForIrisNotPlaying;
- (void)_actuallyUpdateUIForIrisPlaying;
- (void)_actuallyUpdateUIForIrisPlaying:(bool)arg1;
- (void)_addBedtimeGreetingBackgroundView;
- (void)_addOrRemoveBlockedViewIfNecessaryAnimated:(bool)arg1;
- (void)_addOrRemoveResetRestoreViewIfNecessaryAnimated:(bool)arg1;
- (void)_addOrRemoveThermalTrapViewIfNecessaryAnimated:(bool)arg1;
- (void)_addStateCaptureHandlers;
- (void)_addVisiblePageViewController:(id)arg1;
- (id)_allowedPageViewControllers;
- (double)_alphaForTransitionFromHidden:(bool)arg1 toHidden:(bool)arg2 timingFunction:(id)arg3;
- (double)_alphaForTransitionFromHidden:(bool)arg1 toHidden:(bool)arg2 unhiddenAlpha:(double)arg3 timingFunction:(id)arg4;
- (id)_appearanceForParticipant:(id)arg1;
- (id)_averageLockScreenWallpaperColor;
- (void)_beginAppearanceTransitionForPageViewControllersToVisible:(bool)arg1 animated:(bool)arg2;
- (id)_behaviorForParticipant:(id)arg1;
- (void)_calculateAppearanceForCurrentOrientation;
- (bool)_canShowWhileLocked;
- (void)_cleanupLocketPresentationForCompleted:(bool)arg1;
- (id)_componentForHidingWithType:(long long)arg1;
- (void)_conformsToCSCoverSheetViewPresenting;
- (id)_createFakeStatusBar;
- (void)_createStatusBarBackgroundViewIfNeeded;
- (id)_customLockScreenActionContext;
- (double)_dateTimeAlphaForFade;
- (double)_dateTimeInsetXForPage:(id)arg1;
- (unsigned long long)_dateTimeLayoutForPage:(id)arg1;
- (double)_dateViewAlphaForCurrentWakeState;
- (void)_dismissModalViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_dismissModalViewControllersWithIdentifier:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_dismissToMainPageFromPageViewController:(id)arg1;
- (void)_displayDidDisappearImplementation;
- (void)_displayWillAppearImplementation;
- (void)_displayWillDisappearImplementation;
- (void)_displayWillTurnOnWhileOnCoverSheet:(id)arg1;
- (id)_eligiblePageViewControllers;
- (void)_endAppearanceTransitionForPageViewControllersToVisible:(bool)arg1;
- (id)_fakeStatusBarSettings;
- (struct CGPoint { double x1; double x2; })_finalizeOffset:(struct CGPoint { double x1; double x2; })arg1 referenceFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (bool)_gestureRecognizer:(id)arg1 isLocatedOverHorizontalContentRegionInViewController:(id)arg2;
- (bool)_handleEvent:(id)arg1;
- (bool)_handleEventType:(long long)arg1;
- (void)_handleLocketForcePressGestureRecognizer:(id)arg1;
- (void)_handleQuickNoteLaunch:(id)arg1;
- (unsigned long long)_indexOfCameraPage;
- (unsigned long long)_indexOfMainPage;
- (unsigned long long)_indexOfPageViewControllerForRole:(id)arg1;
- (unsigned long long)_indexOfTodayPage;
- (void)_invalidateStatusBarAssertions;
- (bool)_isKnownTransitionConflictFrom:(id)arg1 to:(id)arg2;
- (bool)_isMainPageShowing;
- (bool)_isPageContentHidden;
- (bool)_isPresentingModalViewControllerWithIdentifier:(id)arg1;
- (bool)_isSlideableContentOffsetOnscreen:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_isSlideableContentOnscreen;
- (bool)_isSourceForHorizontalScrolling:(id)arg1;
- (bool)_isWakeAnimationInProgress;
- (void)_listenForDisplayLayoutChanges:(bool)arg1;
- (void)_loadViewsForRestrictedPagesIfPossible;
- (id)_lockOutController;
- (double)_minDateListSpacingForPage:(id)arg1;
- (struct CGPoint { double x1; double x2; })_offsetForTransitionFromOffset:(struct CGPoint { double x1; double x2; })arg1 toOffset:(struct CGPoint { double x1; double x2; })arg2 timingFunction:(id)arg3;
- (bool)_overSlidingControlForLocation:(struct CGPoint { double x1; double x2; })arg1 inView:(id)arg2;
- (unsigned long long)_pageCapabilities;
- (id)_pageForScrollPercent:(double)arg1;
- (id)_passcodeViewController;
- (void)_powerStatusChangedToConnectedState:(bool)arg1;
- (void)_preferredContentSizeDidChange;
- (void)_prepareForLocketPresentation;
- (void)_prepareForViewWillAppearIfNecessary;
- (void)_presentModalViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)_presentationForParticipant:(id)arg1;
- (id)_presentedModalViewControllerWithIdentifier:(id)arg1;
- (bool)_quickActionsSupported;
- (void)_removeAllowedPageViewController:(id)arg1;
- (void)_removeBedtimeGreetingBackgroundViewAnimated:(bool)arg1;
- (double)_scaleForTransitionFromScale:(double)arg1 toScale:(double)arg2 timingFunction:(id)arg3;
- (id)_screenWakeAnimationController;
- (void)_sendAuthenticationChangedEvent;
- (void)_setAllowedPageViewControllers:(id)arg1;
- (void)_setFakeStatusBarEnabled:(bool)arg1;
- (void)_setHasContentAboveCoverSheet:(bool)arg1;
- (void)_setLockOutController:(id)arg1;
- (void)_setMainPageContentViewController:(id)arg1;
- (void)_setModalPresentationControllerVisibility:(bool)arg1;
- (void)_setModalPresentationControllerVisibility:(bool)arg1 cancelTouches:(bool)arg2;
- (void)_setPageViewControllers:(id)arg1;
- (void)_setScreenWakeAnimationController:(id)arg1;
- (void)_setupLocketGestureRecognizer;
- (void)_setupQuickNoteGestureRecognizer;
- (void)_setupWallpaperGesture;
- (bool)_shouldUpdateActiveAppearanceForReason:(id)arg1;
- (struct CGPoint { double x1; double x2; })_slideableContentOffset;
- (void)_startFadeInAnimationForSource:(long long)arg1;
- (double)_timeLabelScrollPercentForDateTimeLayout:(unsigned long long)arg1;
- (void)_transitionChargingDateSubtitleToVisible:(bool)arg1 animated:(bool)arg2 force:(bool)arg3;
- (void)_transitionChargingViewToVisible:(bool)arg1 showBattery:(bool)arg2 animated:(bool)arg3;
- (void)_transitionTimerViewToVisible:(bool)arg1 animated:(bool)arg2;
- (void)_updateAccessibilityContentSizesIfNeeded;
- (void)_updateActiveAppearanceForReason:(id)arg1;
- (void)_updateActiveBehaviorsForReason:(id)arg1;
- (void)_updateActiveBehaviorsForReason:(id)arg1 updatingAppearanceIfNeeded:(bool)arg2;
- (void)_updateAppearance:(id)arg1 forComponentType:(long long)arg2 shouldHide:(bool)arg3;
- (void)_updateBackground;
- (void)_updateControlCenterGrabber;
- (void)_updateDateSubtitleAppearanceForBattery:(bool)arg1 animated:(bool)arg2 chargingVisible:(bool)arg3;
- (void)_updateDateTimeView;
- (void)_updateFixedFooterView;
- (void)_updateForegroundView;
- (void)_updateHomeAffordance;
- (void)_updateIdleTimerBehavior;
- (void)_updateLegibilitySettings;
- (void)_updateLocalAppearanceForPresentation;
- (void)_updateLocalAppearanceForRequester:(id)arg1 animationSettings:(id)arg2 actions:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)_updateLocketPresentationWithProgress:(double)arg1 completed:(bool)arg2;
- (void)_updateModalPresentationControllerVisibility;
- (void)_updateNotificationClearingTriggerForEvent:(id)arg1;
- (void)_updatePageContent;
- (void)_updateProudLockView;
- (void)_updateProudLockViewUpdateSuspension;
- (void)_updateQuickActions;
- (void)_updateRestrictedBehavior;
- (void)_updateScalableContent;
- (void)_updateScrollingBehavior;
- (void)_updateStatusBar;
- (void)_updateStatusBarBackground;
- (void)_updateStatusBarGradient;
- (void)_updateTintingView;
- (void)_updateUIForPlaying:(bool)arg1 immediately:(bool)arg2;
- (void)_updateVisibilityForPageViewControllersWithVisiblePageViewController:(id)arg1;
- (void)_updateWallpaperEffectView;
- (double)_valueForTransitionInterval:(struct { struct { double x_1_1_1; bool x_1_1_2; } x1; struct { double x_2_1_1; bool x_2_1_2; } x2; })arg1 timingFunction:(id)arg2;
- (bool)_wallpaperGestureShouldRequireUserPresence;
- (id)_windowsFromViewControllers:(id)arg1;
- (bool)_wouldUpdateActiveAppearance;
- (void)activateCameraViewAnimated:(bool)arg1 sendingActions:(id)arg2 completion:(id /* block */)arg3;
- (void)activateMainPageWithCompletion:(id /* block */)arg1;
- (void)activatePage:(unsigned long long)arg1 animated:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)activateTodayViewWithCompletion:(id /* block */)arg1;
- (id)activeAppearance;
- (id)activeBehavior;
- (id)activePresentation;
- (void)addApplicationHoster:(id)arg1;
- (void)addCoverSheetObserver:(id)arg1;
- (double)appearanceFraction;
- (id)appearanceIdentifier;
- (id)applicationLauncher;
- (id)backgroundColor;
- (long long)backgroundStyle;
- (double)backlightLevel;
- (double)bottomContentInset;
- (id)cameraPrewarmer;
- (bool)canBeDeactivatedForUIUnlockFromSource:(int)arg1;
- (bool)canHostAnApp;
- (void)cancelTransition;
- (void)cleanupInterstitialPresentationToPresented:(bool)arg1 inPlace:(bool)arg2;
- (id)components;
- (bool)containsCenteredDateTimeLayout;
- (bool)contentOccludesBackground;
- (bool)controller:(id)arg1 shouldAllowPanScrollingWithSystemGestureRecognizer:(id)arg2;
- (void)controllerWillCancelHorizontalScrolling:(id)arg1;
- (id)coverSheetIdentifier;
- (void)coverSheetLegibilityProviderDidUpdate:(id)arg1;
- (void)coverSheetNotificationClearingTriggerDidFire:(id)arg1;
- (id)coverSheetView;
- (id)createHomeButtonShowPasscodeRecognizerForHomeButtonPress;
- (id)createHomeButtonSuppressAfterUnlockRecognizerForUnlockSource:(int)arg1;
- (id)currentTransitionSource;
- (double)dateBaselineToListY;
- (double)dateTimeMostExtremeLeadingX;
- (double)dateTimeMostExtremeTrailingX;
- (double)dateTimeSubtitleMaximumWidth;
- (id)dateView;
- (id)dateViewController;
- (id)delegate;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)dismissLocketViewController:(double)arg1;
- (bool)dismissNotificationInLongLookAnimated:(bool)arg1;
- (void)dismissOverlaysAnimated:(bool)arg1;
- (void)dismissTodayOverlay;
- (id)dispatcher;
- (long long)effectiveInterfaceOrientation;
- (long long)effectiveInterfaceOrientationOverride;
- (id)emergencyCaller;
- (void)externalAppearanceProviderBehaviorChanged:(id)arg1;
- (void)externalBehaviorProviderBehaviorChanged:(id)arg1;
- (void)externalLockProviderStateChanged:(id)arg1;
- (bool)externalLockProvidersRequireUnlock;
- (bool)externalLockProvidersShowPasscode;
- (id)externalPresentation;
- (void)externalPresentationProviderPresentationChanged:(id)arg1;
- (id)fakeStatusBar;
- (void)finishUIUnlockFromSource:(int)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleAction:(id)arg1 fromSender:(id)arg2;
- (void)handleBiometricEvent:(unsigned long long)arg1;
- (bool)handleEvent:(id)arg1;
- (bool)handleHeadsetButtonPress:(bool)arg1;
- (bool)handleHomeButtonDoublePress;
- (bool)handleHomeButtonLongPress;
- (bool)handleHomeButtonPress;
- (bool)handleLockButtonPress;
- (bool)handleVolumeDownButtonPress;
- (bool)handleVolumeUpButtonPress;
- (bool)hasContentAboveCoverSheet;
- (id)hostedAppSceneHandle;
- (id)hostedAppSceneHandles;
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)arg1;
- (id)idleTimerController;
- (void)idleTimerDidChange;
- (void)idleTimerDidExpire;
- (void)idleTimerDidRefresh;
- (void)idleTimerDidWarn;
- (long long)idleTimerDuration;
- (long long)idleTimerMode;
- (void)idleTimerWillRefresh;
- (long long)idleWarnMode;
- (id)initWithPageViewControllers:(id)arg1 mainPageContentViewController:(id)arg2 context:(id)arg3;
- (id)interstitialTransitionSource;
- (void)invalidateLockScreenActionContext;
- (id)irisBehavior;
- (bool)irisPlayerIsInteracting;
- (id)irisWallpaperView;
- (void)irisWallpaperView:(id)arg1 didReplaceGestureRecognizer:(id)arg2 withGestureRecognizer:(id)arg3;
- (void)irisWallpaperViewIsInteractingDidChange:(id)arg1;
- (void)irisWallpaperViewPlaybackStateDidChange:(id)arg1;
- (bool)isAuthenticated;
- (bool)isHostingAnApp;
- (bool)isInScreenOffMode;
- (bool)isLockScreenShowingDefaultContent;
- (bool)isMainPageVisible;
- (bool)isNotificationContentExtensionVisible:(id)arg1;
- (bool)isPasscodeLockVisible;
- (bool)isPresentingNotificationInLongLook;
- (bool)isShowingMediaControls;
- (bool)isShowingModalView;
- (bool)isShowingTodayView;
- (bool)isTransitioning;
- (bool)isTransitioningInteractively;
- (bool)isUnlockDisabled;
- (void)jiggleLockIcon;
- (unsigned long long)lastSettledPageIndex;
- (id)layoutStrategy;
- (id)legibilityProvider;
- (id)legibilitySettings;
- (double)listMinY;
- (void)loadView;
- (id)localAppearance;
- (id)localBehavior;
- (id)lockScreenActionContext;
- (id)lockScreenWakeAnimator;
- (id)locketTransitionSource;
- (id)mainPageContentViewController;
- (id)mainPagePresentationViewController;
- (id)modalPresentationController;
- (void)noteDeviceBlockedStatusUpdated;
- (void)noteResetRestoreStateUpdated;
- (void)noteWillPresentForUserGesture;
- (long long)notificationBehavior;
- (id)notificationDestination;
- (id)orientationUpdateController;
- (id)pageViewControllerAtIndex:(unsigned long long)arg1;
- (id)pageViewControllers;
- (long long)participantState;
- (void)passcodeViewController:(id)arg1 didCompletePasscodeEntry:(bool)arg2;
- (void)passcodeViewControllerDidBeginPasscodeEntry:(id)arg1;
- (void)passcodeViewControllerDidCancelPasscodeEntry:(id)arg1;
- (void)postNotificationRequest:(id)arg1;
- (id)powerChangeObserver;
- (long long)preferredInterfaceOrientationForPresentation;
- (void)prepareForInterstitialPresentation;
- (void)prepareForUILock;
- (void)prepareForUIUnlock;
- (void)presentModalViewController:(id)arg1 fromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 inView:(id)arg3 animated:(bool)arg4;
- (void)presentModalViewController:(id)arg1 withTransition:(int)arg2;
- (void)presentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)presentViewController:(id)arg1 withTransition:(int)arg2 completion:(id /* block */)arg3;
- (long long)presentationAltitude;
- (id)presentationCoordinateSpace;
- (long long)presentationPriority;
- (id)presentationRegions;
- (long long)presentationStyle;
- (long long)presentationTransition;
- (long long)presentationType;
- (id)presenter;
- (id)previousAppearance;
- (long long)proximityDetectionMode;
- (void)publisher:(id)arg1 didUpdateLayout:(id)arg2 withTransition:(id)arg3;
- (void)registerExternalAppearanceProvider:(id)arg1;
- (void)registerExternalBehaviorProvider:(id)arg1;
- (void)registerExternalEventHandler:(id)arg1;
- (void)registerExternalLockProvider:(id)arg1;
- (void)registerExternalPresentationProvider:(id)arg1;
- (id)relinquishHostingOfWallpaperOverlay;
- (void)removeApplicationHoster:(id)arg1;
- (void)removeCoverSheetObserver:(id)arg1;
- (void)resetMainPageContentOffset;
- (unsigned long long)restrictedCapabilities;
- (void)scrollPanGestureDidUpdate:(id)arg1;
- (long long)scrollingStrategy;
- (void)setActiveAppearance:(id)arg1;
- (void)setActiveBehavior:(id)arg1;
- (void)setActivePresentation:(id)arg1;
- (void)setAppearanceFraction:(double)arg1;
- (void)setApplicationLauncher:(id)arg1;
- (void)setAuthenticated:(bool)arg1;
- (void)setBacklightLevel:(double)arg1;
- (void)setCameraPrewarmer:(id)arg1;
- (void)setCoverSheetIsVisible:(bool)arg1;
- (void)setCurrentTransitionSource:(id)arg1;
- (void)setCustomLockScreenActionContext:(id)arg1;
- (void)setDateViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDispatcher:(id)arg1;
- (void)setEffectiveInterfaceOrientationOverride:(long long)arg1;
- (void)setEmergencyCaller:(id)arg1;
- (void)setFakeStatusBar:(id)arg1;
- (void)setIdleTimerController:(id)arg1;
- (void)setInScreenOffMode:(bool)arg1;
- (void)setInScreenOffMode:(bool)arg1 forAutoUnlock:(bool)arg2 fromUnlockSource:(int)arg3;
- (void)setInterstitialTransitionSource:(id)arg1;
- (void)setIrisBehavior:(id)arg1;
- (void)setIrisPlayerIsInteracting:(bool)arg1;
- (void)setIrisWallpaperView:(id)arg1;
- (void)setLastSettledPageIndex:(unsigned long long)arg1;
- (void)setLayoutStrategy:(id)arg1;
- (void)setLegibilityProvider:(id)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setLocalAppearance:(id)arg1;
- (void)setLocalBehavior:(id)arg1;
- (void)setLocketTransitionSource:(id)arg1;
- (void)setModalPresentationController:(id)arg1;
- (void)setOrientationUpdateController:(id)arg1;
- (void)setPasscodeLockVisible:(bool)arg1 animated:(bool)arg2;
- (void)setPasscodeLockVisible:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setPasscodeLockVisible:(bool)arg1 animated:(bool)arg2 forceBiometricPresentation:(bool)arg3 completion:(id /* block */)arg4;
- (void)setPowerChangeObserver:(id)arg1;
- (void)setPresenter:(id)arg1;
- (void)setPreviousAppearance:(id)arg1;
- (void)setShouldTransitionIrisWallpaperToStillWhenPlaybackFinishes:(bool)arg1;
- (void)setShowingMediaControls:(bool)arg1;
- (void)setSpotlightPresenter:(id)arg1;
- (void)setStatusBarBackgroundView:(id)arg1;
- (void)setSuspendWallpaperAnimationAssertion:(id)arg1;
- (void)setTimerViewController:(id)arg1;
- (void)setTodayOverlayController:(id)arg1;
- (void)setWallpaperAggdLogger:(id)arg1;
- (void)setWallpaperColorProvider:(id)arg1;
- (void)setWallpaperGestureRecognizer:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (bool)shouldAutoUnlockForSource:(int)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldAutorotate;
- (bool)shouldDisableALS;
- (bool)shouldModifyPageScrolling;
- (bool)shouldShowLockStatusBarTime;
- (bool)shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes;
- (bool)shouldUnlockUIOnKeyDownEvent;
- (id)spotlightPresenter;
- (void)startHostingWallpaperOverlay:(id)arg1;
- (void)startLockScreenFadeInAnimationForSource:(int)arg1;
- (id)statusBarBackgroundView;
- (long long)statusBarStyle;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)superviewForDateViewAnimation;
- (unsigned long long)supportedInterfaceOrientations;
- (bool)suppressesBanners;
- (bool)suppressesControlCenter;
- (bool)suppressesScreenshots;
- (id)suspendWallpaperAnimationAssertion;
- (double)timeLabelBaselineY;
- (double)timeLabelOffsetForScrollPercent:(double)arg1;
- (double)timeToSubtitleLabelBaselineDifferenceY;
- (void)timerControllerDidStartTimer:(id)arg1;
- (void)timerControllerDidStopTimer:(id)arg1;
- (id)timerViewController;
- (id)todayOverlayController;
- (void)todayOverlayController:(id)arg1 didChangePresentationProgress:(double)arg2;
- (struct { double x1; struct { struct { double x_1_2_1; bool x_1_2_2; } x_2_1_1; struct { double x_2_2_1; bool x_2_2_2; } x_2_1_2; } x2; long long x3; })transitionContext;
- (void)transitionSource:(id)arg1 didEndWithContext:(struct { double x1; struct { struct { double x_1_2_1; bool x_1_2_2; } x_2_1_1; struct { double x_2_2_1; bool x_2_2_2; } x_2_1_2; } x2; long long x3; })arg2;
- (void)transitionSource:(id)arg1 didUpdateTransitionWithContext:(struct { double x1; struct { struct { double x_1_2_1; bool x_1_2_2; } x_2_1_1; struct { double x_2_2_1; bool x_2_2_2; } x_2_1_2; } x2; long long x3; })arg2;
- (void)transitionSource:(id)arg1 willBeginWithType:(long long)arg2;
- (void)unregisterExternalAppearanceProvider:(id)arg1;
- (void)unregisterExternalBehaviorProvider:(id)arg1;
- (void)unregisterExternalEventHandler:(id)arg1;
- (void)unregisterExternalLockProvider:(id)arg1;
- (void)unregisterExternalPresentationProvider:(id)arg1;
- (void)updateAppearanceForController:(id)arg1;
- (void)updateAppearanceForController:(id)arg1 withAnimationSettings:(id)arg2 completion:(id /* block */)arg3;
- (void)updateBehaviorForController:(id)arg1;
- (void)updateCallToActionForMesaMatchFailure;
- (void)updateInterstitialPresentationWithProgress:(double)arg1;
- (void)updateNotificationRequest:(id)arg1;
- (void)updateNotificationSectionSettings:(id)arg1 previousSectionSettings:(id)arg2;
- (void)updateQuickActionsVisibility;
- (void)updateStatusBarForLockScreenComeback;
- (void)updateStatusBarForLockScreenTeardown;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)visiblePageViewController;
- (id)wallpaperAggdLogger;
- (id)wallpaperColorProvider;
- (id)wallpaperGestureRecognizer;
- (bool)willUIUnlockFromSource:(int)arg1;
- (void)withdrawNotificationRequest:(id)arg1;
- (bool)wouldHandleButtonEvent:(id)arg1;

@end
