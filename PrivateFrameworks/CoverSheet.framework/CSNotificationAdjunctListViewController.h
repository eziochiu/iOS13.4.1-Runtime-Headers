/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/CoverSheet.framework/CoverSheet
 */

@interface CSNotificationAdjunctListViewController : CSCoverSheetViewControllerBase <CSAdjunctListModelDelegate> {
    CSContentActionInterpreter * _actionInterpreter;
    <CSNotificationAdjunctListViewControllerDelegate> * _delegate;
    NSMutableArray * _dismissingItems;
    NSMutableDictionary * _identifiersToItems;
    CSAdjunctListModel * _model;
    CSNowPlayingController * _nowPlayingController;
    bool  _respondingToSubviewLayoutChange;
    UIStackView * _stackView;
}

@property (nonatomic, retain) CSContentActionInterpreter *actionInterpreter;
@property (nonatomic) <SBFActionProviding> *contentActionProvider;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CSNotificationAdjunctListViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableArray *dismissingItems;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *identifiersToItems;
@property (nonatomic, readonly) double listViewContentAnimationDampingRatio;
@property (nonatomic, readonly) double listViewContentAnimationDuration;
@property (nonatomic, retain) CSNowPlayingController *nowPlayingController;
@property (getter=isPresentingContent, nonatomic, readonly) bool presentingContent;
@property (nonatomic) bool respondingToSubviewLayoutChange;
@property (getter=isShowingMediaControls, nonatomic, readonly) bool showingMediaControls;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } sizeToMimic;
@property (nonatomic, retain) UIStackView *stackView;
@property (readonly) Class superclass;

+ (Class)viewClass;

- (void).cxx_destruct;
- (bool)_canAnimate;
- (id)_createPlatterForHost:(id)arg1 recipe:(long long)arg2;
- (void)_didUpdateDisplay;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_disappearedTransformForContentWithHeight:(double)arg1;
- (id)_groupNameBase;
- (void)_insertItem:(id)arg1 animated:(bool)arg2;
- (void)_removeItem:(id)arg1 animated:(bool)arg2;
- (id)actionInterpreter;
- (void)adjunctListModel:(id)arg1 didAddItem:(id)arg2;
- (void)adjunctListModel:(id)arg1 didRemoveItem:(id)arg2;
- (id)contentActionProvider;
- (id)delegate;
- (id)dismissingItems;
- (bool)handleEvent:(id)arg1;
- (id)identifiersToItems;
- (id)init;
- (bool)isPresentingContent;
- (bool)isShowingMediaControls;
- (double)listViewContentAnimationDampingRatio;
- (double)listViewContentAnimationDuration;
- (id)nowPlayingController;
- (bool)respondingToSubviewLayoutChange;
- (void)setActionInterpreter:(id)arg1;
- (void)setContentActionProvider:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissingItems:(id)arg1;
- (void)setIdentifiersToItems:(id)arg1;
- (void)setNowPlayingController:(id)arg1;
- (void)setRespondingToSubviewLayoutChange:(bool)arg1;
- (void)setStackView:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeToMimic;
- (id)stackView;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
