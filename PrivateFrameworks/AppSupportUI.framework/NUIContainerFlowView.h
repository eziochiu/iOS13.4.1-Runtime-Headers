/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/AppSupportUI.framework/AppSupportUI
 */

@interface NUIContainerFlowView : NUIContainerView <_NUIFlowArrangementContainer> {
    struct _NUIFlowArrangement { 
        <_NUIFlowArrangementContainer> *container; 
        unsigned long long columns; 
        double rowSpacing; 
        double columnSpacing; 
        bool hasValidMeasurement; 
        struct vector<_NUIFlowArrangementCell, std::__1::allocator<_NUIFlowArrangementCell> > { 
            struct _NUIFlowArrangementCell {} *__begin_; 
            struct _NUIFlowArrangementCell {} *__end_; 
            struct __compressed_pair<_NUIFlowArrangementCell *, std::__1::allocator<_NUIFlowArrangementCell> > { 
                struct _NUIFlowArrangementCell {} *__value_; 
            } __end_cap_; 
        } cells; 
        struct CGSize { 
            double width; 
            double height; 
        } measureSize; 
        struct CGSize { 
            double width; 
            double height; 
        } maxSize; 
        struct vector<CGRect, std::__1::allocator<CGRect> > { 
            struct CGRect {} *__begin_; 
            struct CGRect {} *__end_; 
            struct __compressed_pair<CGRect *, std::__1::allocator<CGRect> > { 
                struct CGRect {} *__value_; 
            } __end_cap_; 
        } viewFrames; 
        struct { 
            double baseLineFromTop; 
            double baseLineFromBottom; 
        } maxBaseLinePair; 
    }  _arrangement;
    struct { 
        unsigned int horzAlign : 8; 
        unsigned int vertAlign : 8; 
    }  _flowFlags;
}

@property (nonatomic) double columnSpacing;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long horizontalAlignment;
@property (nonatomic, readonly) long long horizontalDistribution;
@property (nonatomic) long long numberOfColumns;
@property (nonatomic) double rowSpacing;
@property (readonly) Class superclass;
@property (nonatomic) long long verticalAlignment;
@property (nonatomic, readonly) long long verticalDistribution;

+ (id)containerFlowViewWithArrangedSubviews:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)_effectiveAlignmentForArrangedSubview:(id)arg1 inAxis:(long long)arg2;
- (id)arrangedDescription;
- (struct CGSize { double x1; double x2; })calculateArrangedSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (id)calculateViewForFirstBaselineLayout;
- (id)calculateViewForLastBaselineLayout;
- (double)columnSpacing;
- (void)dealloc;
- (id)debugDictionary;
- (long long)horizontalAlignment;
- (long long)horizontalDistribution;
- (id)initWithArrangedSubviews:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isLayoutSizeDependentOnPerpendicularAxis;
- (void)layoutArrangedSubviewsInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)numberOfColumns;
- (void)populateFlowArrangementCells:(struct vector<_NUIFlowArrangementCell, std::__1::allocator<_NUIFlowArrangementCell> > { struct _NUIFlowArrangementCell {} *x1; struct _NUIFlowArrangementCell {} *x2; struct __compressed_pair<_NUIFlowArrangementCell *, std::__1::allocator<_NUIFlowArrangementCell> > { struct _NUIFlowArrangementCell {} *x_3_1_1; } x3; }*)arg1;
- (double)rowSpacing;
- (void)setBaselineRelativeArrangement:(bool)arg1;
- (void)setColumnSpacing:(double)arg1;
- (void)setHorizontalAlignment:(long long)arg1;
- (void)setHorizontalDistribution:(long long)arg1;
- (bool)setNeedsInvalidation:(long long)arg1;
- (void)setNumberOfColumns:(long long)arg1;
- (void)setRowSpacing:(double)arg1;
- (void)setVerticalAlignment:(long long)arg1;
- (void)setVerticalDistribution:(long long)arg1;
- (long long)verticalAlignment;
- (long long)verticalDistribution;

@end
