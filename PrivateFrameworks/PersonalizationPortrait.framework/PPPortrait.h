/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait
 */

@interface PPPortrait : NSObject

// Image: /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait

+ (unsigned long long)assetVersion;
+ (bool)clearNamedEntityStore:(id*)arg1;
+ (bool)clearTopicStore:(id*)arg1;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 error:(id*)arg2;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4;
+ (bool)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3;
+ (bool)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4;
+ (bool)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4;
+ (bool)deleteAllTopicsWithTopicId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3;
+ (bool)donateLocationNamedEntities:(id)arg1 bundleId:(id)arg2 error:(id*)arg3;
+ (bool)donateNamedEntities:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 cloudSync:(bool)arg4 error:(id*)arg5;
+ (bool)donateSiriQuery:(id)arg1 qid:(id)arg2 error:(id*)arg3;
+ (void)flushNamedEntityDonation;
+ (id)getPortraitVariantName;
+ (id)namedEntityRecordsWithLimit:(unsigned long long)arg1 matchingName:(id)arg2 matchingSourceBundleId:(id)arg3 sinceDate:(id)arg4 error:(id*)arg5;
+ (id)namedEntityRecordsWithLimit:(unsigned long long)arg1 matchingName:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)namedEntityRecordsWithQuery:(id)arg1 error:(id*)arg2;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 error:(id*)arg2;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 matchingCategory:(unsigned long long)arg2 error:(id*)arg3;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 matchingCategory:(unsigned long long)arg2 excludingSourceBundleId:(id)arg3 fromDate:(id)arg4 toDate:(id)arg5 error:(id*)arg6;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 matchingCategory:(unsigned long long)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 sinceDate:(id)arg2 error:(id*)arg3;
+ (id)rankedNamedEntitiesWithQuery:(id)arg1 error:(id*)arg2;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 decayRate:(double)arg2 error:(id*)arg3;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 error:(id*)arg2;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 excludingSourceBundleId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 sinceDate:(id)arg2 decayRate:(double)arg3 error:(id*)arg4;
+ (id)rankedTopicsWithQuery:(id)arg1 error:(id*)arg2;
+ (void)registerMaintenanceTasks;
+ (void)registerXPCListenerWithStringDonationHandler:(id)arg1;
+ (id)scoresForTopicMapping:(id)arg1 excludingSourceBundleId:(id)arg2 fromDate:(id)arg3 decayRate:(double)arg4 error:(id*)arg5;
+ (id)scoresForTopicMapping:(id)arg1 excludingSourceBundleId:(id)arg2 fromDate:(id)arg3 decayRate:(double)arg4 withBiases:(bool)arg5 error:(id*)arg6;
+ (id)scoresForTopics:(id)arg1 excludingSourceBundleId:(id)arg2 decayRate:(double)arg3 error:(id*)arg4;
+ (id)topicRecordsWithLimit:(unsigned long long)arg1 excludingSourceBundleId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)topicRecordsWithLimit:(unsigned long long)arg1 matchingSourceBundleId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)topicRecordsWithLimit:(unsigned long long)arg1 matchingTopicId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)topicRecordsWithQuery:(id)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/PersonalizationPortraitInternals

+ (void)_addMediaItem:(id)arg1 ofType:(int)arg2 withBundleId:(id)arg3 dateInterval:(id)arg4 to:(id)arg5;
+ (bool)_checkDeferralAndAvoidDuetRateLimitWithBatchInterval:(double)arg1 lastSyncDate:(id)arg2 activity:(id)arg3;
+ (id)_dateOfLastNamedEntityDKSyncViaCTS;
+ (id)_dateOfLastTopicDKSyncViaCTS;
+ (void)_deleteAllLocationsExceedingMaxAgeSeconds:(double)arg1;
+ (void)_deleteAllNamedEntitiesExceedingMaxAgeSeconds:(double)arg1;
+ (void)_deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 maxAgeSeconds:(double)arg3;
+ (void)_deleteAllTopicsExceedingMaxAgeSeconds:(double)arg1;
+ (void)_deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 maxAgeSeconds:(double)arg3;
+ (id)_generateTopicExtractionsWithSamplingRate:(double)arg1 fromDate:(id)arg2 toDate:(id)arg3 error:(id*)arg4;
+ (bool)_logDailyMetricsWithError:(id*)arg1 shouldContinueBlock:(id /* block */)arg2;
+ (bool)_logPerplexityForNamedEntitiesWithError:(id*)arg1;
+ (bool)_logPerplexityForTopicsWithError:(id*)arg1;
+ (bool)_logPerplexityWithError:(id*)arg1;
+ (bool)_logUniqueTopicsWithError:(id*)arg1;
+ (id)_quantizeAndFilterEntities:(id)arg1 withLimit:(unsigned int)arg2;
+ (id)_quantizeTopics:(id)arg1;
+ (void)_registerAssetMetadataUpdate;
+ (void)_registerContactsImport;
+ (void)_registerCoreRoutineImport;
+ (void)_registerDailyMetricsLogging;
+ (void)_registerDataCollection;
+ (void)_registerEntityBackfilling;
+ (void)_registerEventKitImport;
+ (void)_registerKnowledgeStoreSync;
+ (void)_registerMapsImport;
+ (void)_registerNowPlayingMPRequestResponseController;
+ (void)_registerPeriodicMetrics;
+ (void)_registerProcessPendingFeedback;
+ (void)_registerRTCSendLogs;
+ (void)_registerRemotelyDonatedRecordCleanup;
+ (void)_registerTTLBasedDonationCleanup;
+ (bool)_runPortraitAnalyticsDataCollectionWithError:(id*)arg1 shouldContinueBlock:(id /* block */)arg2;
+ (bool)_runPortraitMusicDataCollectionWithError:(id*)arg1 shouldContinueBlock:(id /* block */)arg2;
+ (void)_setDateOfLastNamedEntityDKSyncViaCTSToDate:(id)arg1;
+ (void)_setDateOfLastTopicDKSyncViaCTSToDate:(id)arg1;
+ (void)processPendingFeedbackWithShouldContinueBlock:(id /* block */)arg1;
+ (void)registerMaintenanceTasksInternal;
+ (id)runPortraitMusicDataCollectionWithTopicStore:(id)arg1 namedEntityStore:(id)arg2 collectIntents:(bool)arg3 error:(id*)arg4 shouldContinueBlock:(id /* block */)arg5;

@end
