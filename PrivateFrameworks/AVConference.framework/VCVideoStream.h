/* Generated by EzioChiu
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
 */

@interface VCVideoStream : VCMediaStream <AVCRateControllerDelegate, VCMediaStreamSyncDestination, VCRedundancyControllerDelegate, VCVideoCaptureClient, VCVideoCaptureConverterDelegate, VCVideoReceiverDelegate> {
    struct opaqueCMBufferQueue { } * _bufferQueue;
    NSObject<OS_dispatch_semaphore> * _bufferQueueSemaphore;
    struct __CVBuffer { } * _cachedRemoteVideoFrame;
    VCVideoCaptureConverter * _captureConverter;
    int  _captureSource;
    int  _channelSequenceCountWithInactiveSlots;
    NSArray * _compoundStreamIDs;
    unsigned int  _customHeight;
    unsigned int  _customWidth;
    bool  _didReceiveFirstFrame;
    double  _fecRatio;
    bool  _isCompoundStreamIDsIncreased;
    bool  _isServerBasedBandwidthProbingEnabled;
    _Atomic bool  _isVideoCaptureRegistered;
    NSObject<OS_dispatch_queue> * _lastDecodedFrameQueue;
    int  _lastDisplayedFromImageQueueCount;
    int  _lastDroppedFromImageQueueCount;
    unsigned char  _lastMediaPriority;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _localLayerLock;
    int  _networkInterfaceType;
    VCRedundancyControllerVideo * _redundancyController;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _remoteLayerLock;
    VCImageQueue * _remoteQueue;
    unsigned int  _reportingDefaultRealtimePeriod;
    int  _reportingModuleID;
    unsigned int  _screenDisplayID;
    NSNumber * _sendingStreamID;
    bool  _shouldEnableFaceZoom;
    NSNumber * _targetStreamID;
    unsigned int  _tilesPerFrame;
    long long  _type;
    unsigned int  _uplinkOperatingBitrate;
    AVCRateController * _vcrcRateController;
    VCVideoReceiverBase * _videoReceiver;
    VCVideoRule * _videoRule;
    VCVideoTransmitterBase * _videoTransmitter;
    struct OpaqueFigCFWeakReference { } * _weakStream;
}

@property (nonatomic, readonly) NSArray *compoundStreamIDs;
@property (nonatomic) unsigned int customHeight;
@property (nonatomic) unsigned int customWidth;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didReceiveFirstFrame;
@property (nonatomic) double fecRatio;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCompoundStreamIDsIncreased;
@property (nonatomic) bool isServerBasedBandwidthProbingEnabled;
@property (nonatomic, readonly) unsigned int lastDisplayedFrameRTPTimestamp;
@property double lastSentAudioHostTime;
@property unsigned int lastSentAudioSampleTime;
@property (nonatomic) unsigned int screenDisplayID;
@property (nonatomic, readonly) NSNumber *sendingStreamID;
@property (nonatomic) bool shouldEnableFaceZoom;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int targetMediaBitrate;
@property (nonatomic, retain) NSNumber *targetStreamID;

+ (id)capabilities;
+ (id)supportedVideoPayloads;

- (void)avConferencePreviewError:(id)arg1;
- (void)cacheRemoteVideoFrame:(struct __CVBuffer { }*)arg1;
- (void)cleanupBeforeReconfigure:(id)arg1;
- (id)clientCaptureRule;
- (void)collectChannelSequenceMetrics:(id)arg1;
- (void)collectImageQueuePerformanceMetrics:(struct __CFDictionary { }*)arg1;
- (void)collectRxChannelMetrics:(struct { unsigned int x1; unsigned int x2; double x3; }*)arg1;
- (void)collectRxChannelMetrics:(struct { unsigned int x1; unsigned int x2; double x3; }*)arg1 interval:(float)arg2;
- (void)collectTxChannelMetrics:(struct { unsigned int x1; unsigned int x2; double x3; }*)arg1;
- (void)collectVideoConfigMetrics:(struct __CFDictionary { }*)arg1;
- (void)collectVideoStreamStartMetrics:(struct __CFDictionary { }*)arg1;
- (id)compoundStreamIDs;
- (void)converter:(id)arg1 didConvertFrame:(struct opaqueCMSampleBuffer { }*)arg2 frameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 droppedFrames:(int)arg4 cameraStatusBits:(unsigned char)arg5;
- (unsigned int)customHeight;
- (unsigned int)customWidth;
- (void)dealloc;
- (void)deregisterForVideoCapture;
- (void)destroyVideoModules;
- (void)destroyVideoReceiver;
- (void)destroyVideoTransmitter;
- (bool)didReceiveFirstFrame;
- (double)fecRatio;
- (void)generateKeyFrame;
- (struct __CFDictionary { }*)getClientSpecificUserInfo;
- (struct __CFString { }*)getReportingClientName;
- (int)getReportingClientType;
- (void)handleActiveConnectionChange:(id)arg1;
- (void)handleNWConnectionNotification:(struct ifnet_interface_advisory { unsigned char x1; unsigned char x2; unsigned short x3; int x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned int x9; unsigned int x10; unsigned int x11; }*)arg1;
- (void)handleNWConnectionPacketEvent:(struct packet_id { unsigned char x1; unsigned char x2; unsigned short x3; unsigned int x4; unsigned int x5; unsigned int x6; }*)arg1 eventType:(int)arg2;
- (void)handleVTPSendFailedWithData:(void*)arg1;
- (id)init;
- (void)initVideoTransmitter;
- (id)initWithTransportSessionID:(unsigned int)arg1 ssrc:(unsigned int)arg2 streamToken:(long long)arg3;
- (void)initializeInterfaceType;
- (void)initializeInterfaceTypeForNWConnection;
- (void)initializeInterfaceTypeForSocket;
- (bool)isCompoundStreamIDsIncreased;
- (bool)isServerBasedBandwidthProbingEnabled;
- (unsigned int)lastDisplayedFrameRTPTimestamp;
- (double)lastReceivedRTCPPacketTime;
- (double)lastReceivedRTPPacketTime;
- (double)lastSentAudioHostTime;
- (unsigned int)lastSentAudioSampleTime;
- (id)newVideoTransmitterConfigWithVideoStreamConfig:(id)arg1;
- (unsigned int)numTilesPerFrame;
- (void)onCallIDChanged;
- (bool)onCaptureFrame:(struct opaqueCMSampleBuffer { }*)arg1 frameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 droppedFrames:(int)arg3 cameraStatusBits:(unsigned char)arg4;
- (bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id*)arg2;
- (void)onPauseWithCompletionHandler:(id /* block */)arg1;
- (void)onRTCPTimeout;
- (void)onRTPTimeout;
- (void)onResumeWithCompletionHandler:(id /* block */)arg1;
- (void)onSendRTCPPacket;
- (void)onStartWithCompletionHandler:(id /* block */)arg1;
- (void)onStopWithCompletionHandler:(id /* block */)arg1;
- (int)operatingModeForVideoStreamType:(long long)arg1;
- (void)overrideConfigWithDefaults;
- (void)rateController:(void*)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;
- (void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2;
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;
- (void)registerForVideoCapture;
- (void)reportTransportInfo;
- (void)reportingVideoStreamEvent:(unsigned short)arg1;
- (void)reportingVideoStreamEvent:(unsigned short)arg1 newVideoAttributes:(id)arg2;
- (void)reportingVideoStreamEvent:(unsigned short)arg1 newVideoAttributes:(id)arg2 currentStreamID:(id)arg3;
- (void)requestLastDecodedFrame;
- (double)rtcpHeartbeatLeeway;
- (unsigned int)screenDisplayID;
- (void)sendLastRemoteVideoFrame:(struct __CVBuffer { }*)arg1;
- (id)sendingStreamID;
- (void)setCustomHeight:(unsigned int)arg1;
- (void)setCustomWidth:(unsigned int)arg1;
- (void)setDidReceiveFirstFrame:(bool)arg1;
- (void)setFecRatio:(double)arg1;
- (void)setIsServerBasedBandwidthProbingEnabled:(bool)arg1;
- (void)setLastSentAudioHostTime:(double)arg1;
- (void)setLastSentAudioSampleTime:(unsigned int)arg1;
- (bool)setRTPPayloads:(int*)arg1 numPayloads:(int)arg2 withError:(id*)arg3;
- (void)setScreenDisplayID:(unsigned int)arg1;
- (void)setShouldEnableFaceZoom:(bool)arg1;
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;
- (void)setTargetMediaBitrate:(unsigned int)arg1;
- (void)setTargetStreamID:(id)arg1;
- (void)setupCompoundStreamIDsWithStreamIDs:(id)arg1;
- (void)setupReportingAgent;
- (void)setupVideoReceiver:(id)arg1 withTransmitterHandle:(struct tagHANDLE { int x1; }*)arg2;
- (void)setupVideoStream;
- (bool)shouldEnableFaceZoom;
- (void)sourceFrameRateDidChange:(unsigned int)arg1;
- (bool)startSynchronization:(id)arg1;
- (void)startVCRCWithStreamConfig:(id)arg1;
- (void)stopSynchronization;
- (void)stopVCRC;
- (id)supportedPayloads;
- (unsigned int)targetMediaBitrate;
- (id)targetStreamID;
- (void)thermalLevelDidChange:(int)arg1;
- (void)updateSourcePlayoutTimestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg1;
- (void)updateVideoConfig:(id)arg1;
- (void)updateVideoReceiver:(id)arg1;
- (bool)useUEPForVideoConfig:(int)arg1;
- (bool)validateStreamConfiguration:(id)arg1 error:(id*)arg2;
- (bool)validateVideoStreamConfigurations:(id)arg1;
- (bool)vcVideoReceiver:(id)arg1 didReceiveRemoteFrame:(struct __CVBuffer { }*)arg2 atTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg3 newVideoAttributes:(id)arg4 isFirstFrame:(bool)arg5;
- (void)vcVideoReceiver:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;
- (void)vcVideoReceiver:(id)arg1 downlinkQualityDidChange:(id)arg2;
- (unsigned int)vcVideoReceiver:(id)arg1 receivedTMMBR:(unsigned int)arg2;
- (void)vcVideoReceiver:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2;
- (void)vcVideoReceiverRequestKeyFrame:(id)arg1 rtcpPSFBType:(unsigned int)arg2;
- (struct tagVCVideoReceiverConfig { unsigned int x1; struct tagVCVideoReceiverStreamConfig { struct tagHANDLE {} *x_2_1_1; unsigned short x_2_1_2; unsigned short x_2_1_3; bool x_2_1_4; unsigned int x_2_1_5; unsigned short x_2_1_6[9]; unsigned short x_2_1_7[9]; unsigned short x_2_1_8; unsigned char x_2_1_9; } x2[9]; int x3; long long x4; int x5; int x6; int x7; unsigned int x8; int x9; int x10; int x11; int x12; int x13; int x14; bool x15; bool x16; void *x17; int (*x18)(); int (*x19)(); int (*x20)(); unsigned long long x21; bool x22; unsigned short x23; bool x24; struct tagWRMMetricsInfo {} *x25; bool x26; struct __CFDictionary {} *x27; bool x28; bool x29; bool x30; bool x31; bool x32; bool x33; })videoReceiverConfigWithVideoStreamConfig:(id)arg1;

@end
